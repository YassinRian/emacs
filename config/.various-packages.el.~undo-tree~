(undo-tree-save-format-version . 1)
"da4e7402e8a2c73aebf619428d35b0dd86b8c1cc"
[nil nil nil nil (26220 12808 703697 893000) 0 nil]
([nil nil ((#("(use-package vertico-repeat
  :after vertico
  :ensure nil
  :bind
  (:map boon-goto-map (\"b\" . vertico-repeat-select))
  :hook
  ( minibuffer-setup . vertico-repeat-save))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 27 (face font-lock-constant-face fontified t) 27 30 (fontified t) 30 36 (face font-lock-builtin-face fontified t) 36 47 (fontified t) 47 54 (face font-lock-builtin-face fontified t) 54 61 (fontified t) 61 66 (face font-lock-builtin-face fontified t) 66 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 74 (face font-lock-builtin-face fontified t) 74 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-3-face) fontified t) 90 93 (face font-lock-string-face fontified t) 93 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-3-face) fontified t) 118 119 (face (rainbow-delimiters-depth-2-face) fontified t) 119 122 (fontified t) 122 127 (face font-lock-builtin-face fontified t) 127 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-2-face) fontified t) 131 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-2-face) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 173 (fontified t)) . 1839) (undo-tree-id328 . -173) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -31) (undo-tree-id334 . -31) (undo-tree-id335 . -31) (undo-tree-id336 . -48) (undo-tree-id337 . -48) (undo-tree-id338 . -48) (undo-tree-id339 . -48) (undo-tree-id340 . -48) (undo-tree-id341 . -48) (undo-tree-id342 . -31) (undo-tree-id343 . -31) (undo-tree-id344 . -31) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -28) (undo-tree-id356 . -28) (undo-tree-id357 . -28) (undo-tree-id358 . -28) (undo-tree-id359 . -28) (undo-tree-id360 . -28) (undo-tree-id361 . -28) (undo-tree-id362 . -28) (undo-tree-id363 . -28) (undo-tree-id364 . -28) (undo-tree-id365 . -28) (undo-tree-id366 . -45) (undo-tree-id367 . -45) (undo-tree-id368 . -45) (undo-tree-id369 . -59) (undo-tree-id370 . -59) (undo-tree-id371 . -59) (undo-tree-id372 . -67) (undo-tree-id373 . -67) (undo-tree-id374 . -67) (undo-tree-id375 . -120) (undo-tree-id376 . -120) (undo-tree-id377 . -120) (undo-tree-id378 . -128) (undo-tree-id379 . -128) (undo-tree-id380 . -128) (undo-tree-id381 . -128) (undo-tree-id382 . -128) (undo-tree-id383 . -128) (undo-tree-id384 . -120) (undo-tree-id385 . -120) (undo-tree-id386 . -120) (undo-tree-id387 . -120) (undo-tree-id388 . -120) (undo-tree-id389 . -120) (undo-tree-id390 . -120) (undo-tree-id391 . -120) (undo-tree-id392 . -120) (undo-tree-id393 . -120) (undo-tree-id394 . -120) (undo-tree-id395 . -120) (undo-tree-id396 . -120) (undo-tree-id397 . -120) (undo-tree-id398 . -120) (undo-tree-id399 . -120) (undo-tree-id400 . -120) (undo-tree-id401 . -120) (undo-tree-id402 . -120) (undo-tree-id403 . -67) (undo-tree-id404 . -67) (undo-tree-id405 . -67) (undo-tree-id406 . -59) (undo-tree-id407 . -59) (undo-tree-id408 . -59) (undo-tree-id409 . -45) (undo-tree-id410 . -45) (undo-tree-id411 . -45) (undo-tree-id412 . -45) (undo-tree-id413 . -45) (undo-tree-id414 . -45) (undo-tree-id415 . -28) (undo-tree-id416 . -28) (undo-tree-id417 . -28) (undo-tree-id418 . -28) (undo-tree-id419 . -28) (undo-tree-id420 . -28) (undo-tree-id421 . -28) (undo-tree-id422 . -28) (undo-tree-id423 . -28) (undo-tree-id424 . -28) (undo-tree-id425 . -28) (undo-tree-id426 . -28) (undo-tree-id427 . -28) (undo-tree-id428 . -28) (undo-tree-id429 . -45) (undo-tree-id430 . -45) (undo-tree-id431 . -45) (undo-tree-id432 . -59) (undo-tree-id433 . -59) (undo-tree-id434 . -59) (undo-tree-id435 . -67) (undo-tree-id436 . -67) (undo-tree-id437 . -67) (undo-tree-id438 . -120) (undo-tree-id439 . -120) (undo-tree-id440 . -120) (undo-tree-id441 . -128) (undo-tree-id442 . -128) (undo-tree-id443 . -128) (undo-tree-id444 . -173) (undo-tree-id445 . -173) (undo-tree-id446 . -173) (undo-tree-id447 . -173) (undo-tree-id448 . -173) (undo-tree-id449 . -173) (undo-tree-id450 . -173) (undo-tree-id451 . -173) (undo-tree-id452 . -173) 2012 (t 26220 12469 334851 249000)) nil (26220 12808 703692 823000) 0 nil])
([nil nil ((#(";;:bind (:map vertico-map
;;            (\"C-<backspace>\" . vertico-directory-up))
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t) 26 40 (face font-lock-comment-delimiter-face fontified t) 40 82 (face font-lock-comment-face fontified t)) . 1756) (undo-tree-id289 . -82) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -29) (undo-tree-id295 . -29) (undo-tree-id296 . -29) (undo-tree-id297 . -29) (undo-tree-id298 . -82) (undo-tree-id299 . -82) (undo-tree-id300 . -82) (undo-tree-id301 . -82) (undo-tree-id302 . -82) (undo-tree-id303 . -82) (undo-tree-id304 . -82) (undo-tree-id305 . -82) (undo-tree-id306 . -82) (undo-tree-id307 . -82) (undo-tree-id308 . -82) (undo-tree-id309 . -82) (undo-tree-id310 . -82) (undo-tree-id311 . -26) (undo-tree-id312 . -26) (undo-tree-id313 . -26) (undo-tree-id314 . -26) (undo-tree-id315 . -26) (undo-tree-id316 . -26) (undo-tree-id317 . -26) (undo-tree-id318 . -26) (undo-tree-id319 . -26) (undo-tree-id320 . -26) (undo-tree-id321 . -26) (undo-tree-id322 . -82) (undo-tree-id323 . -82) (undo-tree-id324 . -82) (undo-tree-id325 . -82) (undo-tree-id326 . -82) (undo-tree-id327 . -82) 1838) nil (26220 12808 703574 264000) 0 nil])
([nil nil ((#(";; Init vertico-repeat for repeating the last minibuffer command
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 65 (face font-lock-comment-face fontified t)) . 1690) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -65) (undo-tree-id282 . -65) (undo-tree-id283 . -65) (undo-tree-id284 . -65) (undo-tree-id285 . -65) (undo-tree-id286 . -65) (undo-tree-id287 . -65) (undo-tree-id288 . -65)) nil (26220 12808 703523 551000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1690) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1)) nil (26220 12808 703505 388000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1690) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1)) nil (26220 12808 702873 18000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-string-face fontified t)) . -1848) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -1849) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 1850) nil (26220 12808 701654 829000) 0 nil])
([nil nil ((1848 . 1849)) nil (26220 12808 701605 90000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1848) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 1849) nil (26220 12808 701598 517000) 0 nil])
([nil nil ((1848 . 1850) (t 26220 12808 716249 949000)) nil (26220 12888 521673 395000) 0 nil])
([nil nil ((1850 . 1851)) nil (26220 12888 521672 602000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1850) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 1851) nil (26220 12888 521669 345000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-string-face fontified t)) . -1848) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -1849) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1850 (t 26220 12888 533796 326000)) nil (26220 13231 964077 335000) 0 nil])
([nil nil ((1848 . 1849)) nil (26220 13231 964074 100000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1848) (undo-tree-id15 . -1) 1849) nil (26220 13231 964073 497000) 0 nil])
([nil nil ((1884 . 1889)) nil (26220 13231 964072 357000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1892) (1892 . 1893) (#("]" 0 1 (face font-lock-string-face fontified nil)) . -1892) (1892 . 1893) (1891 . 1893) (1890 . 1892) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -1890) (1890 . 1891) (1889 . 1891)) nil (26220 13231 964071 606000) 0 nil])
([nil nil ((1892 . 1895)) nil (26220 13231 964070 653000) 0 nil])
([nil nil ((1898 . 1899)) nil (26220 13231 964070 303000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1898) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 1899) nil (26220 13231 964069 561000) 0 nil])
([nil nil ((1899 . 1900)) nil (26220 13231 964066 587000) 0 nil])
([nil nil ((1900 . 1901)) nil (26220 13231 964066 185000) 0 nil])
([nil nil ((1901 . 1902)) nil (26220 13231 964065 743000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1899) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1900) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1901) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 1902) nil (26220 13231 964064 898000) 0 nil])
([nil nil ((1897 . 1900)) nil (26220 13231 964058 114000) 0 nil])
([nil nil ((1900 . 1901)) nil (26220 13231 964057 699000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -1900) (undo-tree-id2 . -1) 1901) nil (26220 13231 964057 77000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1922 . 1923) (nil fontified nil 1900 . 1923) (1900 . 1923)) nil (26220 13231 964055 881000) 0 nil])
([nil nil ((1926 . 1930) (#("    " 0 4 (fontified nil)) . 1925) (undo-tree-id1 . -4) (1924 . 1930)) nil (26220 13231 964055 171000) 0 nil])
([nil nil ((1930 . 1931)) nil (26220 13231 964053 494000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1930) (undo-tree-id0 . -1) 1931) nil (26220 13231 964052 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2004 . 2005) (nil fontified nil 1988 . 2005) (nil fontified nil 1987 . 1988) (nil fontified nil 1984 . 1987) (nil fontified nil 1983 . 1984) (nil fontified nil 1961 . 1983) (nil fontified nil 1956 . 1961) (nil fontified nil 1952 . 1956) (nil fontified nil 1928 . 1952) (nil fontified nil 1925 . 1928) (1925 . 2005)) nil (26220 13231 964150 944000) 0 nil])
([nil nil ((1924 . 1929)) nil (26220 13262 848680 969000) 0 nil] [nil nil ((nil rear-nonsticky nil 1947 . 1948) (nil fontified nil 1947 . 1948) (nil fontified nil 1946 . 1947) (nil fontified nil 1945 . 1946) (nil fontified nil 1923 . 1945) (nil fontified nil 1920 . 1923) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1914 . 1918) (nil fontified nil 1913 . 1914) (nil fontified nil 1912 . 1913) (nil fontified nil 1908 . 1912) (1908 . 1948)) ((#("    (\"[TAB]\" . vertico-directory-enter)
" 0 4 (fontified nil) 4 5 (face (rainbow-delimiters-depth-4-face) fontified nil) 5 6 (face font-lock-string-face fontified nil) 6 10 (face font-lock-string-face fontified nil) 10 11 (face font-lock-string-face fontified nil) 11 12 (face font-lock-string-face fontified nil) 12 15 (fontified nil) 15 37 (fontified nil) 37 38 (fontified nil rear-nonsticky t) 38 39 (face (rainbow-delimiters-depth-4-face) fontified nil) 39 40 (rear-nonsticky nil fontified nil)) . 1908) (undo-tree-id20 . -40) (undo-tree-id21 . -40) (nil rear-nonsticky t 1947 . 1948)) (26220 13231 964034 916000) 0 nil])
([nil nil ((1929 . 1930)) nil (26220 13262 848680 519000) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified t)) . -1929) (undo-tree-id129 . -1) 1930) nil (26220 13262 848679 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1968 . 1969) (nil fontified nil 1968 . 1969) (nil fontified nil 1967 . 1968) (nil fontified nil 1966 . 1967) (nil fontified nil 1944 . 1966) (nil fontified nil 1941 . 1944) (nil fontified nil 1940 . 1941) (nil fontified nil 1939 . 1940) (nil fontified nil 1935 . 1939) (nil fontified nil 1934 . 1935) (nil fontified nil 1933 . 1934) (nil fontified nil 1929 . 1933) (1929 . 1969)) nil (26220 13262 848677 784000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1929) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#(" " 0 1 (fontified t)) . -1930) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (fontified t)) . -1931) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -1932) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 1933) nil (26220 13262 848675 644000) 0 nil])
([nil nil ((1929 . 1930)) nil (26220 13262 848669 479000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1929) (undo-tree-id120 . -1) 1930) nil (26220 13262 848668 796000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-string-face fontified t)) . -1932) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -1933) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("B" 0 1 (face font-lock-string-face fontified t)) . -1934) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -1935) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 1936) nil (26220 13262 848666 425000) 0 nil])
([nil nil ((1932 . 1933) (#("]" 0 1 (face font-lock-string-face fontified nil)) . -1932) (1932 . 1933)) nil (26220 13262 848659 895000) 0 nil])
([nil nil ((1932 . 1935)) nil (26220 13262 848659 266000) 0 nil])
([nil nil ((1935 . 1936)) nil (26220 13262 848658 878000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -1935) (undo-tree-id111 . -1) 1936) nil (26220 13262 848658 330000) 0 nil])
([nil nil ((#("]" 0 1 (face font-lock-string-face fontified t)) . -1895) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 1896) nil (26220 13262 848656 925000) 0 nil])
([nil nil ((1895 . 1896)) nil (26220 13262 848654 973000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1895) (undo-tree-id108 . -1) 1896) nil (26220 13262 848654 362000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -1891) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 1892) nil (26220 13262 848653 8000) 0 nil])
([nil nil ((1891 . 1892)) nil (26220 13262 848651 51000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1891) (undo-tree-id105 . -1) 1892) nil (26220 13262 848650 289000) 0 nil])
([nil nil ((#(";; We want TAB to complete
    \"TAB\" #'corfu-complete
    [tab] #'corfu-complete
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 27 (face font-lock-comment-face fontified t) 27 31 (fontified t) 31 36 (face font-lock-string-face fontified t) 36 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t) 59 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-3-face) fontified t) 63 79 (fontified t) 79 80 (fontified t rear-nonsticky t) 80 81 (fontified t)) . 1964) (undo-tree-id75 . -81) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -27) (undo-tree-id89 . -27) (undo-tree-id90 . -27) (undo-tree-id91 . -27) (undo-tree-id92 . -27) (undo-tree-id93 . -27) (undo-tree-id94 . -27) (undo-tree-id95 . -27) (undo-tree-id96 . -54) (undo-tree-id97 . -54) (undo-tree-id98 . -54) (undo-tree-id99 . -81) (undo-tree-id100 . -81) (undo-tree-id101 . -81) (undo-tree-id102 . -81) (undo-tree-id103 . -81) (undo-tree-id104 . -81) 2045) nil (26220 13262 848647 653000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1963) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1)) nil (26220 13262 848081 199000) 0 nil])
([nil nil ((1848 . 1850) (t 26220 13262 860305 193000)) nil (26220 13504 854728 584000) 0 nil])
([nil nil ((1850 . 1851)) nil (26220 13504 854727 796000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -1850) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 1851) nil (26220 13504 854726 886000) 0 nil])
([nil nil ((#("(\"TAB\" . vertico-directory-enter)
    (\"[tab]\" . vertico-directory-enter)" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 6 (face font-lock-string-face fontified t) 6 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t) 33 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-3-face) fontified t) 39 46 (face font-lock-string-face fontified t) 46 72 (fontified t) 72 73 (face (rainbow-delimiters-depth-3-face) fontified t)) . 1891) (undo-tree-id159 . -37) (undo-tree-id160 . -37) (undo-tree-id161 . -37) (undo-tree-id162 . -37) (undo-tree-id163 . -37) (undo-tree-id164 . -37) (undo-tree-id165 . -37) (undo-tree-id166 . -37) (undo-tree-id167 . -37) (undo-tree-id168 . -73) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -38) (undo-tree-id184 . -38) (undo-tree-id185 . -38) (undo-tree-id186 . -38) (undo-tree-id187 . -38) (undo-tree-id188 . -38) (undo-tree-id189 . -38) (undo-tree-id190 . -38) (undo-tree-id191 . -73) (undo-tree-id192 . -73) (undo-tree-id193 . -73) (undo-tree-id194 . -73) (undo-tree-id195 . -73) (undo-tree-id196 . -73) (undo-tree-id197 . -73) (undo-tree-id198 . -73) (undo-tree-id199 . -73) (undo-tree-id200 . -73) (undo-tree-id201 . -73) (undo-tree-id202 . -73) (undo-tree-id203 . -73) (undo-tree-id204 . -73) (undo-tree-id205 . -73) (undo-tree-id206 . -73) (undo-tree-id207 . -73) (undo-tree-id208 . -73) (undo-tree-id209 . -73) (undo-tree-id210 . -73) (undo-tree-id211 . -73) (undo-tree-id212 . -73) (undo-tree-id213 . -73) (undo-tree-id214 . -33) (undo-tree-id215 . -33) (undo-tree-id216 . -33) (undo-tree-id217 . -33) (undo-tree-id218 . -33) (undo-tree-id219 . -33) (undo-tree-id220 . -33) (undo-tree-id221 . -17) (undo-tree-id222 . -17) (undo-tree-id223 . -17) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (undo-tree-id227 . -9) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -38) (undo-tree-id237 . -38) (undo-tree-id238 . -38) (undo-tree-id239 . -38) (undo-tree-id240 . -38) (undo-tree-id241 . -38) (undo-tree-id242 . -38) (undo-tree-id243 . -38) (undo-tree-id244 . -34) (undo-tree-id245 . -73) (undo-tree-id246 . -73) (undo-tree-id247 . -73) (undo-tree-id248 . -73) (undo-tree-id249 . -73) (undo-tree-id250 . -73) (undo-tree-id251 . -73) (undo-tree-id252 . -73) (undo-tree-id253 . -73) 1964) nil (26220 13504 854717 419000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1887) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -5) (undo-tree-id157 . -4) (undo-tree-id158 . -4) 1891) nil (26220 13504 854626 699000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2063 . 2064) (nil fontified nil 2063 . 2064) (nil fontified nil 2062 . 2063) (nil fontified nil 2061 . 2062) (nil fontified nil 2039 . 2061) (nil fontified nil 2038 . 2039) (nil fontified nil 2035 . 2038) (nil fontified nil 2028 . 2035) (nil fontified nil 2021 . 2028) (nil fontified nil 2012 . 2021) (nil fontified nil 2001 . 2012) (nil fontified nil 1995 . 2001) (nil fontified nil 1992 . 1995) (nil fontified nil 1975 . 1992) (nil fontified nil 1974 . 1975) (nil fontified nil 1963 . 1974) (nil fontified nil 1962 . 1963) (nil fontified nil 1901 . 1962) (nil fontified nil 1898 . 1901) (1898 . 2064) (t 26220 13504 870022 545000)) nil (26220 14731 726785 187000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1895) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1)) nil (26220 14731 726778 875000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-builtin-face fontified t)) . -2012) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -2013) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("r" 0 1 (face font-lock-builtin-face fontified t)) . -2014) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("a" 0 1 (face font-lock-builtin-face fontified t)) . -2015) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("i" 0 1 (face font-lock-builtin-face fontified t)) . -2016) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("g" 0 1 (face font-lock-builtin-face fontified t)) . -2017) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#("h" 0 1 (face font-lock-builtin-face fontified t)) . -2018) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -2019) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) 2020 (t 26220 14731 745265 575000)) nil (26220 15340 749430 815000) 0 nil])
([nil nil ((2012 . 2012) (2012 . 2013)) nil (26220 15340 749099 725000) 0 nil])
([nil nil ((2016 . 2016) (2016 . 2017) (2015 . 2015) (2015 . 2016) (2014 . 2014) (2014 . 2015) (2013 . 2013) (2013 . 2014)) nil (26220 15340 749098 749000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-builtin-face fontified t)) . -2013) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("u" 0 1 (face font-lock-builtin-face fontified t)) . -2014) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("r" 0 1 (face font-lock-builtin-face fontified t)) . -2015) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -2016) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) 2017) nil (26220 15340 749091 283000) 0 nil])
([nil nil ((2017 . 2017) (2017 . 2018) (2016 . 2016) (2016 . 2017) (2014 . 2014) (2014 . 2016) (2013 . 2013) (2013 . 2014)) nil (26220 15340 748814 780000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-builtin-face fontified t)) . -2015) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -2016) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("u" 0 1 (face font-lock-builtin-face fontified t)) . -2017) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 2018) nil (26220 15340 748808 675000) 0 nil])
([nil nil ((2016 . 2016) (2016 . 2018) (2015 . 2015) (2015 . 2016)) nil (26220 15340 747471 641000) 0 nil])
([nil nil ((2018 . 2019)) nil (26220 15340 747467 722000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-builtin-face fontified t)) . -2018) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 2019) nil (26220 15340 747459 216000) 0 nil])
([nil nil ((10354 . 10354) (10354 . 10354) (10354 . 10356) (t 26220 15340 763429 839000)) nil (26228 26487 826792 934000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10354) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10355) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 10356) nil (26228 26487 826789 133000) 0 nil])
([nil nil ((10354 . 10355)) nil (26228 26487 826707 803000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10354) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 10355) nil (26228 26487 826705 947000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10380 . 10381) (nil fontified nil 10354 . 10381) (10354 . 10381)) nil (26228 26487 826674 769000) 0 nil])
([nil nil ((5811 . 5812) (t 26228 26487 843805 455000)) nil (26228 35473 503300 567000) 0 nil])
([nil nil ((5812 . 5812) (5812 . 5812) (5812 . 5814)) nil (26228 35473 503299 951000) 0 nil])
([nil nil ((5816 . 5820) (5814 . 5816) (5813 . 5813) (5813 . 5814)) nil (26228 35473 503299 102000) 0 nil])
([nil nil ((5829 . 5829) (5829 . 5830) (5828 . 5828) (5828 . 5829) (5827 . 5827) (5827 . 5828) (5826 . 5826) (5826 . 5827) (5823 . 5823) (5823 . 5826) (5820 . 5820) (5820 . 5823)) nil (26228 35473 503298 207000) 0 nil])
([nil nil ((5830 . 5831)) nil (26228 35473 503297 44000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-constant-face fontified t)) . -5830) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 5831) nil (26228 35473 503296 534000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-constant-face fontified t)) . -5827) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -5828) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("l" 0 1 (face font-lock-constant-face fontified t)) . -5829) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 5830) nil (26228 35473 503294 264000) 0 nil])
([nil nil ((5827 . 5828)) nil (26228 35473 503287 476000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-constant-face fontified t)) . -5827) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 5828) nil (26228 35473 503284 634000) 0 nil])
([nil nil ((5829 . 5829) (5829 . 5829) (5829 . 5831) (t 26228 35473 515623 340000)) nil (26229 19025 880737 783000) 0 nil])
([nil nil ((5833 . 5837) (5831 . 5833) (5830 . 5830) (5830 . 5831)) nil (26229 19025 880737 76000) 0 nil])
([nil nil ((5837 . 5839)) nil (26229 19025 880736 305000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5838) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 5839) nil (26229 19025 880735 548000) 0 nil])
([nil nil ((5840 . 5840) (5840 . 5845) (5838 . 5838) (5838 . 5840)) nil (26229 19025 880726 853000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-constant-face fontified t)) . -5844) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 5845) nil (26229 19025 880725 607000) 0 nil])
([nil nil ((5848 . 5848) (5848 . 5849) (5847 . 5847) (5847 . 5848) (5846 . 5846) (5846 . 5847) (5845 . 5845) (5845 . 5846) (5844 . 5844) (5844 . 5845)) nil (26229 19025 880709 337000) 0 nil])
([nil nil ((5849 . 5850)) nil (26229 19025 880707 901000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-constant-face fontified t)) . -5849) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 5850) nil (26229 19025 880704 481000) 0 nil])
([nil nil ((10420 . 10421) (t 26229 19025 894881 251000)) nil (26229 61532 614676 188000) 0 nil])
([nil nil ((10421 . 10422)) nil (26229 61532 614675 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10421) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 10422) nil (26229 61532 614673 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10464 . 10465) (nil fontified nil 10421 . 10465) (10421 . 10465)) nil (26229 61532 614651 224000) 0 nil])
([nil current ((10465 . 10466) 10436) nil (26229 61532 614645 214000) 0 nil])
nil
