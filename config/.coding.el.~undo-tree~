(undo-tree-save-format-version . 1)
"d951d52812a836d9a1f0542d8946ab9aefe59b24"
[nil nil nil nil (26378 52946 717946 45000) 0 nil]
([nil nil ((13065 . 13069) (t 26378 52758 943725 498000)) nil (26378 52946 717945 171000) 0 nil])
([nil nil ((13069 . 13070)) nil (26378 52946 717944 648000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13069) (undo-tree-id1 . -1) 13070) nil (26378 52946 717944 81000) 0 nil])
([nil nil ((13440 . 13444)) nil (26378 52946 717942 181000) 0 nil])
([nil nil ((13444 . 13445)) nil (26378 52946 717941 561000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13444) (undo-tree-id0 . -1) 13445) nil (26378 52946 717938 276000) 0 nil])
([nil nil ((13053 . 13056) (t 26378 52946 727926 393000)) nil (26378 53005 767084 339000) 0 nil])
([nil nil ((13063 . 13065) (13058 . 13058) (13058 . 13063) (13056 . 13056) (13056 . 13058)) nil (26378 53043 739247 211000) 0 nil] [nil nil ((13056 . 13056) (13056 . 13058)) ((#(":e" 0 2 (fontified defer face font-lock-builtin-face)) . 13056) (undo-tree-id60 . -2)) (26378 53005 757827 837000) 0 nil])
([nil nil ((13065 . 13066)) nil (26378 53043 739246 60000) 0 nil])
([nil nil ((#("(use-package lsp-mode" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 21 (face font-lock-constant-face fontified t)) . -13032) (undo-tree-id0 . -21) (undo-tree-id1 . -21) (undo-tree-id2 . -21) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -21) (undo-tree-id32 . -21) (undo-tree-id33 . -21) (undo-tree-id34 . -21) (undo-tree-id35 . -21) (undo-tree-id36 . -21) (undo-tree-id37 . -21) (undo-tree-id38 . -21) (undo-tree-id39 . -21) (undo-tree-id40 . -21) (undo-tree-id41 . -21) (undo-tree-id42 . -21) (undo-tree-id43 . -21) (undo-tree-id44 . -21) (undo-tree-id45 . -21) (undo-tree-id46 . -21) (undo-tree-id47 . -21) (undo-tree-id48 . -21) (undo-tree-id49 . -21) (undo-tree-id50 . -21) (undo-tree-id51 . -21) (undo-tree-id52 . -21) (undo-tree-id53 . -21) (undo-tree-id54 . -21) (undo-tree-id55 . -21) (undo-tree-id56 . -21) (undo-tree-id57 . -21) (undo-tree-id58 . -21) (undo-tree-id59 . -21) 13053) ((13032 . 13053)) (26378 53005 757641 300000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13065) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 13066) nil (26378 53043 739242 484000) 0 nil])
nil
([nil nil ((#("  :ensure t" 0 2 (fontified t) 2 9 (face font-lock-builtin-face fontified t) 9 11 (fontified t)) . 13054) (undo-tree-id94 . -11) 13065 (t 26378 53043 752513 516000)) nil (26378 53120 172451 802000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13054)) nil (26378 53120 172450 422000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -13064) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 13065) nil (26378 53120 172449 537000) 0 nil])
([nil nil ((13064 . 13065)) nil (26378 53120 172440 309000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13064) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 13065) nil (26378 53120 172439 670000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -13443) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 13444) nil (26378 53120 172433 499000) 0 nil])
([nil nil ((13443 . 13444)) nil (26378 53120 172419 190000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13443) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 13444) nil (26378 53120 172418 328000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 13062) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -3) (undo-tree-id47 . -2) 13064) nil (26378 53120 172409 93000) 0 nil])
([nil nil ((13062 . 13429) (#("   (lsp-mode . lsp-diagnostics-mode)
   ((java-mode         ; eclipse-jdtls
     ;;js-mode         ; ts-ls (tsserver wrapper)
     ;;js-jsx-mode     ; ts-ls (tsserver wrapper)
     ;;typescript-mode ; ts-ls (tsserver wrapper)
     tsx-ts-mode
     typescript-ts-mode
     js-ts-mode
     python-mode     ; pyright
     web-mode        ; ts-ls/HTML/CSS
     ) . lsp-deferred)
   
" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 37 (fontified t) 37 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 42 (face (rainbow-delimiters-depth-3-face) fontified t) 42 60 (fontified t) 60 62 (face font-lock-comment-delimiter-face fontified t) 62 76 (face font-lock-comment-face fontified t) 76 81 (fontified t) 81 83 (face font-lock-comment-delimiter-face fontified t) 83 126 (face font-lock-comment-face fontified t) 126 131 (fontified t) 131 133 (face font-lock-comment-delimiter-face fontified t) 133 176 (face font-lock-comment-face fontified t) 176 181 (fontified t) 181 183 (face font-lock-comment-delimiter-face fontified t) 183 226 (face font-lock-comment-face fontified t) 226 304 (fontified t) 304 306 (face font-lock-comment-delimiter-face fontified t) 306 314 (face font-lock-comment-face fontified t) 314 335 (fontified t) 335 337 (face font-lock-comment-delimiter-face fontified t) 337 352 (face font-lock-comment-face fontified t) 352 357 (fontified t) 357 358 (face (rainbow-delimiters-depth-3-face) fontified t) 358 359 (fontified t) 359 373 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t) 373 374 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t) 374 375 (fontified t) 375 378 (fontified t) 378 379 (fontified t)) . -13062) (undo-tree-id95 . -76) (undo-tree-id96 . -378) (undo-tree-id97 . -378) (undo-tree-id98 . -378) (undo-tree-id99 . -378) (undo-tree-id100 . -378) (undo-tree-id101 . -378) (undo-tree-id102 . -378) (undo-tree-id103 . -378) (undo-tree-id104 . -378) (undo-tree-id105 . -378) (undo-tree-id106 . -378) (undo-tree-id107 . -378) (undo-tree-id108 . -378) (undo-tree-id109 . -378) (undo-tree-id110 . -378) (undo-tree-id111 . -378) (undo-tree-id112 . -378) (undo-tree-id113 . -378) (undo-tree-id114 . -378) (undo-tree-id115 . -378) (undo-tree-id116 . -378) (undo-tree-id117 . -378) (undo-tree-id118 . -378) (undo-tree-id119 . -76) (undo-tree-id120 . -76) (undo-tree-id121 . -76) (undo-tree-id122 . -76) (undo-tree-id123 . -76) (undo-tree-id124 . -76) (undo-tree-id125 . -379) (undo-tree-id126 . -76) 13138 (t 26378 53120 178188 281000)) nil (26378 53120 269784 127000) 0 nil])
([nil nil ((13065 . 13067) (t 26378 53120 274187 873000)) nil (26378 53190 401333 167000) 0 nil])
([nil nil ((13066 . 13067)) nil (26378 53190 401332 414000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13066) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 13067) nil (26378 53190 401331 488000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -13066) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 13067) nil (26378 53190 401323 132000) 0 nil])
([nil nil ((13066 . 13067)) nil (26378 53190 401271 979000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13066) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 13067) nil (26378 53190 401271 15000) 0 nil])
([nil nil ((13426 . 13428)) nil (26378 53190 401263 345000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified nil)) . -13426) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t)) . 13427)) nil (26378 53190 401261 857000) 0 nil])
([nil nil ((13426 . 13427) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified nil)) . -13426) (13426 . 13427)) nil (26378 53190 401242 943000) 0 nil])
([nil nil ((13427 . 13428)) nil (26378 53190 401241 635000) 0 nil])
([nil nil ((#("f" 0 1 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t)) . -13427) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 13428) nil (26378 53190 401237 505000) 0 nil])
([nil nil ((13099 . 13438) (#("  ((java-mode         ; eclipse-jdtls
    ;;js-mode         ; ts-ls (tsserver wrapper)
    ;;js-jsx-mode     ; ts-ls (tsserver wrapper)
    ;;typescript-mode ; ts-ls (tsserver wrapper)
    tsx-ts-mode
    typescript-ts-mode
    js-ts-mode
    python-mode     ; pyright
    web-mode        ; ts-ls/HTML/CSS
    ) . lsp-deferred))
" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-3-face) fontified t) 3 4 (face (rainbow-delimiters-depth-4-face) fontified t) 4 22 (fontified t) 22 24 (face font-lock-comment-delimiter-face fontified t) 24 38 (face font-lock-comment-face fontified t) 38 42 (fontified t) 42 44 (face font-lock-comment-delimiter-face fontified t) 44 87 (face font-lock-comment-face fontified t) 87 91 (fontified t) 91 93 (face font-lock-comment-delimiter-face fontified t) 93 136 (face font-lock-comment-face fontified t) 136 140 (fontified t) 140 142 (face font-lock-comment-delimiter-face fontified t) 142 185 (face font-lock-comment-face fontified t) 185 259 (fontified t) 259 261 (face font-lock-comment-delimiter-face fontified t) 261 269 (face font-lock-comment-face fontified t) 269 289 (fontified t) 289 291 (face font-lock-comment-delimiter-face fontified t) 291 306 (face font-lock-comment-face fontified t) 306 310 (fontified t) 310 311 (face (rainbow-delimiters-depth-4-face) fontified t) 311 312 (fontified t) 312 326 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t) 326 327 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t) 327 328 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t) 328 329 (fontified t)) . -13099) (undo-tree-id54 . -140) (undo-tree-id55 . -327) (undo-tree-id56 . -327) (undo-tree-id57 . -327) (undo-tree-id58 . -327) (undo-tree-id59 . -327) (undo-tree-id60 . -327) (undo-tree-id61 . -327) (undo-tree-id62 . -327) (undo-tree-id63 . -327) (undo-tree-id64 . -327) (undo-tree-id65 . -327) (undo-tree-id66 . -327) (undo-tree-id67 . -327) (undo-tree-id68 . -327) (undo-tree-id69 . -327) (undo-tree-id70 . -327) (undo-tree-id71 . -327) (undo-tree-id72 . -327) (undo-tree-id73 . -327) (undo-tree-id74 . -328) (undo-tree-id75 . -328) (undo-tree-id76 . -328) (undo-tree-id77 . -328) (undo-tree-id78 . -328) (undo-tree-id79 . -328) (undo-tree-id80 . -328) (undo-tree-id81 . -136) (undo-tree-id82 . -140) (undo-tree-id83 . -140) (undo-tree-id84 . -140) (undo-tree-id85 . -140) (undo-tree-id86 . -140) (undo-tree-id87 . -329) (undo-tree-id88 . -140) 13239 (t 26378 53190 418889 402000)) nil (26378 53190 510820 351000) 0 nil])
([nil nil ((#("  
" 0 3 (fontified t)) . 13441) (undo-tree-id8 . -2) 13443 (t 26378 53190 514888 994000)) nil (26378 53256 727872 913000) 0 nil])
([nil nil ((#("  
" 0 3 (fontified t)) . 13438) (undo-tree-id7 . -3)) nil (26378 53256 727871 400000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -13456) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -13457) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -13458) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 13459) nil (26378 53256 727869 813000) 0 nil])
([nil nil ((13456 . 13457)) nil (26378 53256 727864 210000) 0 nil])
([nil current ((#("f" 0 1 (fontified t)) . -13456) (undo-tree-id0 . -1) 13457) nil (26378 53256 727861 190000) 0 nil])
nil
