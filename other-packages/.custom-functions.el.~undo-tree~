(undo-tree-save-format-version . 1)
"2b69674ada73aac1e6a958c98c8f060fee1af7cd"
[nil nil nil nil (26214 11541 117232 818000) 0 nil]
([nil nil ((11099 . 11101) (t 26212 60417 900702 720000)) nil (26214 11541 117231 802000) 0 nil])
([nil nil ((11101 . 11104)) nil (26214 11541 117231 194000) 0 nil])
([nil nil ((11104 . 11105)) nil (26214 11541 117230 670000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11104) (undo-tree-id0 . -1) 11105) nil (26214 11541 117229 487000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11715 . 11716) (nil fontified nil 11101 . 11716) (11101 . 11716)) nil (26214 11541 117211 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12331 . 12332) (nil fontified nil 11718 . 12332) (11718 . 12332) (t 26214 11541 129645 857000)) nil (26214 11952 419388 392000) 0 nil])
([nil nil ((#("(defun search-flaskr-in-directory (directory search-string)
  \"Search for SEARCH-STRING in all files within DIRECTORY using find and awk.\"
  (interactive
   (list
    (consult--directory-prompt \"Select directory: \")
    (read-string \"Enter search string: \" \"flaskr\")))
  (let ((command (format \"find %s -type f -exec awk '/%s/ {printf \\\"%%-30s %%-10s %%s\\\\n\\\", FILENAME, FNR, $0}' {} +\"
                         (shell-quote-argument directory)
                         (shell-quote-argument search-string))))
    (compilation-start command 'grep-mode)))

(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 33 (face font-lock-function-name-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-2-face) fontified t) 59 62 (fontified t) 62 138 (face font-lock-doc-face fontified t) 138 141 (fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 153 (face font-lock-keyword-face fontified t) 153 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) fontified t) 158 167 (fontified t) 167 168 (face (rainbow-delimiters-depth-4-face) fontified t) 168 194 (fontified t) 194 214 (face font-lock-string-face fontified t) 214 215 (face (rainbow-delimiters-depth-4-face) fontified t) 215 220 (fontified t) 220 221 (face (rainbow-delimiters-depth-4-face) fontified t) 221 233 (fontified t) 233 256 (face font-lock-string-face fontified t) 256 257 (fontified t) 257 265 (face font-lock-string-face fontified t) 265 266 (face (rainbow-delimiters-depth-4-face) fontified t) 266 267 (face (rainbow-delimiters-depth-3-face) fontified t) 267 268 (face (rainbow-delimiters-depth-2-face) fontified t) 268 271 (fontified t) 271 272 (face (rainbow-delimiters-depth-2-face) fontified t) 272 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t) 276 277 (face (rainbow-delimiters-depth-3-face) fontified t) 277 278 (face (rainbow-delimiters-depth-4-face) fontified t) 278 286 (fontified t) 286 287 (face (rainbow-delimiters-depth-5-face) fontified t) 287 294 (fontified t) 294 386 (face font-lock-string-face fontified t) 386 412 (fontified t) 412 413 (face (rainbow-delimiters-depth-6-face) fontified t) 413 443 (fontified t) 443 444 (face (rainbow-delimiters-depth-6-face) fontified t) 444 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-6-face) fontified t) 471 505 (fontified t) 505 506 (face (rainbow-delimiters-depth-6-face) fontified t) 506 507 (face (rainbow-delimiters-depth-5-face) fontified t) 507 508 (face (rainbow-delimiters-depth-4-face) fontified t) 508 509 (face (rainbow-delimiters-depth-3-face) fontified t) 509 510 (fontified t) 510 514 (fontified t) 514 515 (face (rainbow-delimiters-depth-3-face) fontified t) 515 551 (fontified t) 551 552 (face (rainbow-delimiters-depth-3-face) fontified t) 552 553 (face (rainbow-delimiters-depth-2-face) fontified t) 553 554 (face (rainbow-delimiters-depth-1-face) fontified t) 554 555 (fontified t) 555 556 (fontified t) 556 557 (face (rainbow-delimiters-depth-1-face) fontified t) 557 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-2-face) fontified t) 573 577 (fontified t) 577 584 (face font-lock-string-face fontified t) 584 585 (face (rainbow-delimiters-depth-2-face) fontified t) 585 613 (fontified t) 613 614 (face (rainbow-delimiters-depth-1-face) fontified t) 614 615 (fontified t)) . 11101) (undo-tree-id18 . -615) (undo-tree-id19 . -615) (undo-tree-id20 . -615) (undo-tree-id21 . -615) (undo-tree-id22 . -556) (undo-tree-id23 . -556) (undo-tree-id24 . -556) (undo-tree-id25 . -555) (undo-tree-id26 . -555) (undo-tree-id27 . -555) (undo-tree-id28 . -555) (undo-tree-id29 . -510) (undo-tree-id30 . -510) (undo-tree-id31 . -510) (undo-tree-id32 . -445) (undo-tree-id33 . -445) (undo-tree-id34 . -445) (undo-tree-id35 . -387) (undo-tree-id36 . -387) (undo-tree-id37 . -387) (undo-tree-id38 . -269) (undo-tree-id39 . -269) (undo-tree-id40 . -269) (undo-tree-id41 . -216) (undo-tree-id42 . -216) (undo-tree-id43 . -216) (undo-tree-id44 . -163) (undo-tree-id45 . -163) (undo-tree-id46 . -163) (undo-tree-id47 . -163) (undo-tree-id48 . -163) (undo-tree-id49 . -163) (undo-tree-id50 . -163) (undo-tree-id51 . -163) (undo-tree-id52 . -163) (undo-tree-id53 . -163) (undo-tree-id54 . -163) (undo-tree-id55 . -163) (undo-tree-id56 . -154) (undo-tree-id57 . -154) (undo-tree-id58 . -154) (undo-tree-id59 . -139) (undo-tree-id60 . -139) (undo-tree-id61 . -139) (undo-tree-id62 . -60) (undo-tree-id63 . -60) (undo-tree-id64 . -60) (undo-tree-id65 . -60) (undo-tree-id66 . -60) (undo-tree-id67 . -60) (undo-tree-id68 . -60) (undo-tree-id69 . -60) (undo-tree-id70 . -60) (undo-tree-id71 . -60) (undo-tree-id72 . -60) (undo-tree-id73 . -60) (undo-tree-id74 . -60) (undo-tree-id75 . -60) (undo-tree-id76 . -139) (undo-tree-id77 . -139) (undo-tree-id78 . -139) (undo-tree-id79 . -154) (undo-tree-id80 . -154) (undo-tree-id81 . -154) (undo-tree-id82 . -163) (undo-tree-id83 . -163) (undo-tree-id84 . -163) (undo-tree-id85 . -216) (undo-tree-id86 . -216) (undo-tree-id87 . -216) (undo-tree-id88 . -269) (undo-tree-id89 . -269) (undo-tree-id90 . -269) (undo-tree-id91 . -387) (undo-tree-id92 . -387) (undo-tree-id93 . -387) (undo-tree-id94 . -445) (undo-tree-id95 . -445) (undo-tree-id96 . -445) (undo-tree-id97 . -510) (undo-tree-id98 . -510) (undo-tree-id99 . -510) (undo-tree-id100 . -555) (undo-tree-id101 . -555) (undo-tree-id102 . -555) (undo-tree-id103 . -556) (undo-tree-id104 . -556) (undo-tree-id105 . -556) (undo-tree-id106 . -556) (undo-tree-id107 . -556) (undo-tree-id108 . -556) (undo-tree-id109 . -615) (undo-tree-id110 . -615) (undo-tree-id111 . -615) (undo-tree-id112 . -615) (undo-tree-id113 . -615) (undo-tree-id114 . -615) (undo-tree-id115 . -615) (undo-tree-id116 . -615) (undo-tree-id117 . -615) 11716) nil (26214 11952 419383 791000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11101) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (26214 11952 418641 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11101) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (26214 11952 418636 149000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11099) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (26214 11952 418624 170000) 0 nil])
([nil nil ((11715 . 11719) (t 26214 11952 432819 804000)) nil (26214 12698 753374 501000) 0 nil])
([nil nil ((11719 . 11720)) nil (26214 12698 753373 961000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11719) (undo-tree-id10 . -1) 11720) nil (26214 12698 753373 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12257 . 12258) (nil fontified nil 11717 . 12258) (11717 . 12258)) nil (26214 12698 753372 246000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t)) . 11655)) nil (26214 12698 753371 589000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12258 . 12259) (nil fontified nil 12258 . 12259) (nil fontified nil 12257 . 12258) (nil fontified nil 12229 . 12257) (nil fontified nil 12228 . 12229) (nil fontified nil 12221 . 12228) (nil fontified nil 12217 . 12221) (nil fontified nil 12216 . 12217) (nil fontified nil 12201 . 12216) (nil fontified nil 12200 . 12201) (12200 . 12259)) nil (26214 12698 753370 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11158 . 11159) (nil fontified nil 11158 . 11159) (nil fontified nil 11157 . 11158) (nil fontified nil 11129 . 11157) (nil fontified nil 11128 . 11129) (nil fontified nil 11121 . 11128) (nil fontified nil 11117 . 11121) (nil fontified nil 11116 . 11117) (nil fontified nil 11101 . 11116) (nil fontified nil 11100 . 11101) (11100 . 11159)) nil (26214 12698 753369 702000) 0 nil])
([nil nil ((11159 . 11160)) nil (26214 12698 753368 573000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -11159) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 11160) nil (26214 12698 753368 11000) 0 nil])
([nil nil ((11159 . 11160)) nil (26214 12698 753365 162000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11159) (undo-tree-id5 . -1) 11160) nil (26214 12698 753364 557000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)
(defun search-flaskr-in-directory (directory search-string)
  \"Search for SEARCH-STRING in all files within DIRECTORY using find and awk.\"
  (interactive
   (list
    (consult-dir--read \"Select recent directory: \")
    (read-string \"Enter search string: \" \"flaskr\")))
  (let ((command (format \"find %s -type f -exec awk '/%s/ {printf \\\"%%-30s %%-10s %%s\\\\n\\\", FILENAME, FNR, $0}' {} +\"
                         (shell-quote-argument directory)
                         (shell-quote-argument search-string))))
    (compilation-start command 'grep-mode)))

" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (rear-nonsticky t fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t) 60 65 (face font-lock-keyword-face fontified t) 65 66 (fontified t) 66 92 (face font-lock-function-name-face fontified t) 92 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-2-face) fontified t) 94 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-2-face) fontified t) 118 119 (fontified t) 119 121 (fontified defer) 121 197 (fontified defer face font-lock-doc-face) 197 200 (fontified defer) 200 201 (fontified defer face (rainbow-delimiters-depth-2-face)) 201 212 (fontified defer face font-lock-keyword-face) 212 216 (fontified defer) 216 217 (fontified defer face (rainbow-delimiters-depth-3-face)) 217 226 (fontified defer) 226 227 (fontified defer face (rainbow-delimiters-depth-4-face)) 227 245 (fontified defer) 245 272 (fontified defer face font-lock-string-face) 272 273 (fontified defer face (rainbow-delimiters-depth-4-face)) 273 278 (fontified defer) 278 279 (fontified defer face (rainbow-delimiters-depth-4-face)) 279 291 (fontified defer) 291 314 (fontified defer face font-lock-string-face) 314 315 (fontified defer) 315 323 (fontified defer face font-lock-string-face) 323 324 (fontified defer face (rainbow-delimiters-depth-4-face)) 324 325 (fontified defer face (rainbow-delimiters-depth-3-face)) 325 326 (fontified defer face (rainbow-delimiters-depth-2-face)) 326 329 (fontified defer) 329 330 (fontified defer face (rainbow-delimiters-depth-2-face)) 330 333 (fontified defer face font-lock-keyword-face) 333 334 (fontified defer) 334 335 (fontified defer face (rainbow-delimiters-depth-3-face)) 335 336 (fontified defer face (rainbow-delimiters-depth-4-face)) 336 344 (fontified defer) 344 345 (fontified defer face (rainbow-delimiters-depth-5-face)) 345 352 (fontified defer) 352 444 (fontified defer face font-lock-string-face) 444 470 (fontified defer) 470 471 (fontified defer face (rainbow-delimiters-depth-6-face)) 471 501 (fontified defer) 501 502 (fontified defer face (rainbow-delimiters-depth-6-face)) 502 528 (fontified defer) 528 529 (fontified defer face (rainbow-delimiters-depth-6-face)) 529 563 (fontified defer) 563 564 (fontified defer face (rainbow-delimiters-depth-6-face)) 564 565 (fontified defer face (rainbow-delimiters-depth-5-face)) 565 566 (fontified defer face (rainbow-delimiters-depth-4-face)) 566 567 (fontified defer face (rainbow-delimiters-depth-3-face)) 567 572 (fontified defer) 572 573 (fontified defer face (rainbow-delimiters-depth-3-face)) 573 609 (fontified defer) 609 610 (fontified defer face (rainbow-delimiters-depth-3-face)) 610 611 (fontified defer face (rainbow-delimiters-depth-2-face)) 611 612 (fontified defer face (rainbow-delimiters-depth-1-face)) 612 614 (fontified defer)) . 11100) (undo-tree-id1 . -614) (undo-tree-id2 . -59) (undo-tree-id3 . -59) (undo-tree-id4 . -614) 11714) nil (26214 12698 753363 112000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100) (undo-tree-id0 . -1)) nil (26214 12698 753358 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100)) nil (26214 12698 753342 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11717 . 11718) (nil fontified nil 11099 . 11718) (11099 . 11718) (t 26214 12698 765693 624000)) nil (26214 13038 624879 486000) 0 nil])
([nil nil ((#("
(defun search-flaskr-in-directory ()
  \"Search for a string in all files within a directory using find and awk.\"
  (interactive)
  (let* ((directory (consult-dir-default-command))
         (search-string (read-string \"Enter search string: \" \"flaskr\"))
         (command (format \"find %s -type f -exec awk '/%s/ {printf \\\"%%-30s %%-10s %%s\\\\n\\\", FILENAME, FNR, $0}' {} +\"
                          (shell-quote-argument directory)
                          (shell-quote-argument search-string))))
    (compilation-start command 'grep-mode)))
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 34 (face font-lock-function-name-face fontified t) 34 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 40 (fontified t) 40 113 (face font-lock-doc-face fontified t) 113 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) fontified t) 117 128 (face font-lock-keyword-face fontified t) 128 129 (face (rainbow-delimiters-depth-2-face) fontified t) 129 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-2-face) fontified t) 133 137 (face font-lock-keyword-face fontified t) 137 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-3-face) fontified t) 139 140 (face (rainbow-delimiters-depth-4-face) fontified t) 140 150 (fontified t) 150 151 (face (rainbow-delimiters-depth-5-face) fontified t) 151 178 (fontified t) 178 179 (face (rainbow-delimiters-depth-5-face) fontified t) 179 180 (face (rainbow-delimiters-depth-4-face) fontified t) 180 190 (fontified t) 190 191 (face (rainbow-delimiters-depth-4-face) fontified t) 191 205 (fontified t) 205 206 (face (rainbow-delimiters-depth-5-face) fontified t) 206 218 (fontified t) 218 241 (face font-lock-string-face fontified t) 241 242 (fontified t) 242 250 (face font-lock-string-face fontified t) 250 251 (face (rainbow-delimiters-depth-5-face) fontified t) 251 252 (face (rainbow-delimiters-depth-4-face) fontified t) 252 262 (fontified t) 262 263 (face (rainbow-delimiters-depth-4-face) fontified t) 263 271 (fontified t) 271 272 (face (rainbow-delimiters-depth-5-face) fontified t) 272 279 (fontified t) 279 371 (face font-lock-string-face fontified t) 371 398 (fontified t) 398 399 (face (rainbow-delimiters-depth-6-face) fontified t) 399 429 (fontified t) 429 430 (face (rainbow-delimiters-depth-6-face) fontified t) 430 457 (fontified t) 457 458 (face (rainbow-delimiters-depth-6-face) fontified t) 458 492 (fontified t) 492 493 (face (rainbow-delimiters-depth-6-face) fontified t) 493 494 (face (rainbow-delimiters-depth-5-face) fontified t) 494 495 (face (rainbow-delimiters-depth-4-face) fontified t) 495 496 (face (rainbow-delimiters-depth-3-face) fontified t) 496 501 (fontified t) 501 502 (face (rainbow-delimiters-depth-3-face) fontified t) 502 538 (fontified t) 538 539 (face (rainbow-delimiters-depth-3-face) fontified t) 539 540 (face (rainbow-delimiters-depth-2-face) fontified t) 540 541 (face (rainbow-delimiters-depth-1-face) fontified t) 541 542 (fontified t)) . 11719) (undo-tree-id98 . -542) (undo-tree-id99 . -542) (undo-tree-id100 . -542) (undo-tree-id101 . -542) 12261) nil (26214 13038 624878 626000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (rear-nonsticky t fontified t)) . 11659) (undo-tree-id91 . -59) (undo-tree-id92 . -59) (undo-tree-id93 . -59) (undo-tree-id94 . -59) (undo-tree-id95 . -59) (undo-tree-id96 . -59) (undo-tree-id97 . -59)) nil (26214 13038 624874 603000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11659) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1)) nil (26214 13038 624786 711000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11658) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1)) nil (26214 13038 624772 416000) 0 nil])
([nil nil ((11099 . 11100)) nil (26214 13038 624433 556000) 0 nil])
([nil nil ((11100 . 11101)) nil (26214 13038 624432 831000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11100) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 11101) nil (26214 13038 624429 667000) 0 nil])
([nil nil ((11719 . 11721) (t 26214 13038 636681 799000)) nil (26214 13874 620752 349000) 0 nil])
([nil nil ((11721 . 11722)) nil (26214 13874 620751 832000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11721) (undo-tree-id60 . -1) 11722) nil (26214 13874 620751 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12298 . 12299) (nil fontified nil 11721 . 12299) (11721 . 12299)) nil (26214 13874 620750 163000) 0 nil])
([nil nil ((#("(defun search-flaskr-in-directory (search-string)
  \"Search for SEARCH-STRING in all files within default-directory using find and awk.\"
  (interactive \"sEnter search string: \")
  (let* ((directory default-directory)
         (search-string (or search-string \"flaskr\"))
         (command (format \"find %s -type f -exec awk '/%s/ {printf \\\"%%-30s %%-10s %%s\\\\n\\\", FILENAME, FNR, $0}' {} +\"
                          (shell-quote-argument directory)
                          (shell-quote-argument search-string))))
    (compilation-start command 'grep-mode)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 33 (face font-lock-function-name-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 136 (face font-lock-doc-face fontified t) 136 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-2-face) fontified t) 140 151 (face font-lock-keyword-face fontified t) 151 152 (fontified t) 152 176 (face font-lock-string-face fontified t) 176 177 (face (rainbow-delimiters-depth-2-face) fontified t) 177 180 (fontified t) 180 181 (face (rainbow-delimiters-depth-2-face) fontified t) 181 185 (face font-lock-keyword-face fontified t) 185 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-3-face) fontified t) 187 188 (face (rainbow-delimiters-depth-4-face) fontified t) 188 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-4-face) fontified t) 216 226 (fontified t) 226 227 (face (rainbow-delimiters-depth-4-face) fontified t) 227 241 (fontified t) 241 242 (face (rainbow-delimiters-depth-5-face) fontified t) 242 244 (face font-lock-keyword-face fontified t) 244 259 (fontified t) 259 267 (face font-lock-string-face fontified t) 267 268 (face (rainbow-delimiters-depth-5-face) fontified t) 268 269 (face (rainbow-delimiters-depth-4-face) fontified t) 269 279 (fontified t) 279 280 (face (rainbow-delimiters-depth-4-face) fontified t) 280 288 (fontified t) 288 289 (face (rainbow-delimiters-depth-5-face) fontified t) 289 296 (fontified t) 296 388 (face font-lock-string-face fontified t) 388 415 (fontified t) 415 416 (face (rainbow-delimiters-depth-6-face) fontified t) 416 446 (fontified t) 446 447 (face (rainbow-delimiters-depth-6-face) fontified t) 447 474 (fontified t) 474 475 (face (rainbow-delimiters-depth-6-face) fontified t) 475 509 (fontified t) 509 510 (face (rainbow-delimiters-depth-6-face) fontified t) 510 511 (face (rainbow-delimiters-depth-5-face) fontified t) 511 512 (face (rainbow-delimiters-depth-4-face) fontified t) 512 513 (face (rainbow-delimiters-depth-3-face) fontified t) 513 518 (fontified t) 518 519 (face (rainbow-delimiters-depth-3-face) fontified t) 519 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-3-face) fontified t) 556 557 (face (rainbow-delimiters-depth-2-face) fontified t) 557 558 (face (rainbow-delimiters-depth-1-face) fontified t) 558 559 (fontified t)) . 11100) (undo-tree-id53 . -559) (undo-tree-id54 . -559) (undo-tree-id55 . -559) (undo-tree-id56 . -559) (undo-tree-id57 . -559) (undo-tree-id58 . -559) (undo-tree-id59 . -559) 11659) nil (26214 13874 620749 171000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 59 (fontified t)) . 11101) (undo-tree-id45 . -59) (undo-tree-id46 . -59) (undo-tree-id47 . -59) (undo-tree-id48 . -59) (undo-tree-id49 . -59) (undo-tree-id50 . -59) (undo-tree-id51 . -59) (undo-tree-id52 . -59)) nil (26214 13874 620743 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11740 . 11741) (nil fontified nil 11740 . 11741) (nil fontified nil 11739 . 11740) (nil fontified nil 11711 . 11739) (nil fontified nil 11710 . 11711) (nil fontified nil 11703 . 11710) (nil fontified nil 11699 . 11703) (nil fontified nil 11698 . 11699) (nil fontified nil 11683 . 11698) (nil fontified nil 11682 . 11683) (11682 . 11741)) nil (26214 13874 620737 95000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (26214 13874 620734 787000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (26214 13874 620706 776000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11555 . 11556) (nil fontified nil 11099 . 11556) (11099 . 11556) (t 26214 13874 632768 749000)) nil (26214 14402 942112 514000) 0 nil])
([nil nil ((11099 . 11100)) nil (26214 14402 942111 668000) 0 nil])
([nil nil ((11100 . 11101)) nil (26214 14402 942111 288000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11100) (undo-tree-id2 . -1) 11101) nil (26214 14402 942110 784000) 0 nil])
([nil nil ((#("(defcustom consult-dir-custom-command #'search-flaskr-in-directory
  \"Custom command to run after selecting a directory using `consult-dir'.

The default is to invoke `search-flaskr-in-directory' from the chosen
directory. This can be customized to run any arbitrary function
(of no variables), which will be called with `default-directory'
set to the directory chosen using `consult-dir'.\"
  :group 'consult-dir
  :type '(function :tag \"Custom function\"))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 37 (face font-lock-variable-name-face fontified t) 37 67 (fontified t) 67 69 (fontified t) 69 127 (face font-lock-doc-face fontified t) 127 138 (face (font-lock-constant-face font-lock-doc-face) fontified t) 138 168 (face font-lock-doc-face fontified t) 168 194 (face (font-lock-constant-face font-lock-doc-face) fontified t) 194 322 (face font-lock-doc-face fontified t) 322 339 (face (font-lock-constant-face font-lock-doc-face) fontified t) 339 376 (face font-lock-doc-face fontified t) 376 387 (face (font-lock-constant-face font-lock-doc-face) fontified t) 387 390 (face font-lock-doc-face fontified t) 390 393 (fontified t) 393 399 (face font-lock-builtin-face fontified t) 399 415 (fontified t) 415 420 (face font-lock-builtin-face fontified t) 420 422 (fontified t) 422 423 (face (rainbow-delimiters-depth-2-face) fontified t) 423 432 (fontified t) 432 436 (face font-lock-builtin-face fontified t) 436 437 (fontified t) 437 454 (face font-lock-string-face fontified t) 454 455 (face (rainbow-delimiters-depth-2-face) fontified t) 455 456 (face (rainbow-delimiters-depth-1-face) fontified t) 456 457 (fontified t rear-nonsticky t)) . 11100) (undo-tree-id1 . -457) 11557) nil (26214 14402 942109 511000) 0 nil])
([nil nil ((11680 . 11683)) nil (26214 14402 942107 969000) 0 nil])
([nil nil ((11683 . 11684)) nil (26214 14402 942107 549000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11683) (undo-tree-id0 . -1) 11684) nil (26214 14402 942106 954000) 0 nil])
([nil nil ((nil fontified nil 12138 . 12139) (nil fontified nil 12137 . 12138) (nil fontified nil 12136 . 12137) (nil fontified nil 12119 . 12136) (nil fontified nil 12118 . 12119) (nil fontified nil 12114 . 12118) (nil fontified nil 12105 . 12114) (nil fontified nil 12104 . 12105) (nil fontified nil 12102 . 12104) (nil fontified nil 12097 . 12102) (nil fontified nil 12081 . 12097) (nil fontified nil 12075 . 12081) (nil fontified nil 12072 . 12075) (nil fontified nil 12069 . 12072) (nil fontified nil 12058 . 12069) (nil fontified nil 12021 . 12058) (nil fontified nil 12004 . 12021) (nil fontified nil 11876 . 12004) (nil fontified nil 11850 . 11876) (nil fontified nil 11820 . 11850) (nil fontified nil 11809 . 11820) (nil fontified nil 11751 . 11809) (nil fontified nil 11749 . 11751) (nil fontified nil 11719 . 11749) (nil fontified nil 11693 . 11719) (nil fontified nil 11692 . 11693) (nil fontified nil 11683 . 11692) (nil fontified nil 11682 . 11683) (11682 . 12139)) nil (26214 14402 942093 389000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100)) nil (26214 14402 942090 511000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11100)) nil (26214 14402 942086 393000) 0 nil])
([nil nil ((12138 . 12145) (t 26214 14402 955574 140000)) nil (26214 51723 945354 892000) 0 nil])
([nil nil ((12145 . 12146)) nil (26214 51723 945354 362000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12145) (undo-tree-id194 . -1) 12146) nil (26214 51723 945353 806000) 0 nil])
([nil nil ((apply -51 11100 12189 undo--wrap-and-run-primitive-undo 11100 12189 ((12141 . 12144) (12116 . 12119) (12063 . 12066) (11995 . 11998) (11928 . 11931) (11855 . 11858) (11777 . 11780) (11707 . 11710) (11657 . 11660) (11588 . 11591) (11526 . 11529) (11404 . 11407) (11348 . 11351) (11287 . 11290) (11243 . 11246) (11153 . 11156) (11100 . 11103) 12137))) nil (26214 51723 945352 610000) 0 nil])
([nil nil ((11099 . 11100)) nil (26214 51723 945352 224000) 0 nil])
([nil nil ((11100 . 11102)) nil (26214 51723 945351 829000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -11100) (undo-tree-id192 . -1) (#(";" 0 1 (fontified defer)) . -11101) (undo-tree-id193 . -1) 11102) nil (26214 51723 945351 319000) 0 nil])
([nil nil ((11100 . 11102)) nil (26214 51723 945349 539000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -11100) (undo-tree-id190 . -1) (#(";" 0 1 (face font-lock-comment-face fontified t)) . -11101) (undo-tree-id191 . -1) 11102) nil (26214 51723 945348 914000) 0 nil])
([nil nil ((11100 . 11101)) nil (26214 51723 945347 20000) 0 nil])
([nil nil ((11101 . 11111)) nil (26214 51723 945346 644000) 0 nil])
([nil nil ((11111 . 11112)) nil (26214 51723 945346 234000) 0 nil])
([nil nil ((11112 . 11113)) nil (26214 51723 945345 796000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11112) (undo-tree-id189 . -1) 11113) nil (26214 51723 945345 255000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12291 . 12292) (nil fontified nil 12205 . 12292) (nil fontified nil 12203 . 12205) (12203 . 12292)) nil (26214 51723 945343 794000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12202) (undo-tree-id188 . -1)) nil (26214 51723 945343 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13096 . 13097) (nil fontified nil 12292 . 13097) (12292 . 13097)) nil (26214 51723 945341 755000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t)) . 13038) (undo-tree-id187 . -58) 13096) nil (26214 51723 945341 69000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 13038)) nil (26214 51723 945339 875000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13038)) nil (26214 51723 945339 483000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13038)) nil (26214 51723 945339 61000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13038)) nil (26214 51723 945338 517000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13038)) nil (26214 51723 945338 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13518 . 13519) (nil fontified nil 13518 . 13519) (nil fontified nil 13517 . 13518) (nil fontified nil 13516 . 13517) (nil fontified nil 13499 . 13516) (nil fontified nil 13498 . 13499) (nil fontified nil 13494 . 13498) (nil fontified nil 13485 . 13494) (nil fontified nil 13484 . 13485) (nil fontified nil 13482 . 13484) (nil fontified nil 13477 . 13482) (nil fontified nil 13475 . 13477) (nil fontified nil 13472 . 13475) (nil fontified nil 13458 . 13472) (nil fontified nil 13452 . 13458) (nil fontified nil 13450 . 13452) (nil fontified nil 13447 . 13450) (nil fontified nil 13446 . 13447) (nil fontified nil 13443 . 13446) (nil fontified nil 13432 . 13443) (nil fontified nil 13397 . 13432) (nil fontified nil 13394 . 13397) (nil fontified nil 13392 . 13394) (nil fontified nil 13375 . 13392) (nil fontified nil 13329 . 13375) (nil fontified nil 13326 . 13329) (nil fontified nil 13262 . 13326) (nil fontified nil 13259 . 13262) (nil fontified nil 13241 . 13259) (nil fontified nil 13215 . 13241) (nil fontified nil 13189 . 13215) (nil fontified nil 13186 . 13189) (nil fontified nil 13185 . 13186) (nil fontified nil 13182 . 13185) (nil fontified nil 13171 . 13182) (nil fontified nil 13113 . 13171) (nil fontified nil 13111 . 13113) (nil fontified nil 13108 . 13111) (nil fontified nil 13078 . 13108) (nil fontified nil 13052 . 13078) (nil fontified nil 13051 . 13052) (nil fontified nil 13042 . 13051) (nil fontified nil 13041 . 13042) (nil fontified nil 13038 . 13041) (13038 . 13519)) nil (26214 51723 945336 832000) 0 nil])
([nil nil ((apply 24 13037 13495 undo--wrap-and-run-primitive-undo 13037 13495 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13451) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13429) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13379) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13314) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13250) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13180) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13105) (#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -13038) 13519))) nil (26214 51723 945333 154000) 0 nil])
([nil nil ((13037 . 13038)) nil (26214 51723 945332 682000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -13037) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 13038) nil (26214 51723 945332 119000) 0 nil])
([nil nil ((13037 . 13038)) nil (26214 51723 945329 520000) 0 nil])
([nil nil ((13037 . 13043) (#("v" 0 1 (fontified t)) . -13037) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 13038) nil (26214 51723 945328 565000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -13037) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("a" 0 1 (fontified t)) . -13038) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("l" 0 1 (fontified t)) . -13039) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("u" 0 1 (fontified t)) . -13040) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("e" 0 1 (fontified t)) . -13041) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("s" 0 1 (fontified t)) . -13042) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 13043) nil (26214 51723 945311 608000) 0 nil])
([nil nil ((13037 . 13038)) nil (26214 51723 944847 407000) 0 nil])
([nil nil ((13038 . 13039)) nil (26214 51723 944846 682000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13038) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 13039) nil (26214 51723 944843 799000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-function-name-face fontified t)) . -12326) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -12327) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -12328) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -12329) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -12330) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -12331) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 12332 (t 26214 51723 959067 691000)) nil (26214 60464 914200 733000) 0 nil])
([nil nil ((12326 . 12332)) nil (26214 60464 914192 142000) 0 nil])
([nil nil ((12332 . 12333)) nil (26214 60464 914191 624000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-function-name-face fontified t)) . -12332) (undo-tree-id101 . -1) 12333) nil (26214 60464 914190 927000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13086) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("l" 0 1 (fontified t)) . -13087) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("a" 0 1 (fontified t)) . -13088) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("s" 0 1 (fontified t)) . -13089) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("k" 0 1 (fontified t)) . -13090) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("r" 0 1 (fontified t)) . -13091) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 13092) nil (26214 60464 914188 936000) 0 nil])
([nil nil ((13086 . 13093)) nil (26214 60464 913682 79000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -13092) (undo-tree-id88 . -1) 13093) nil (26214 60464 913681 589000) 0 nil])
([nil nil ((13092 . 13093)) nil (26214 60464 913680 445000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13092) (undo-tree-id87 . -1) 13093) nil (26214 60464 913679 845000) 0 nil])
([nil nil ((#("f" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13214) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("l" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13215) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("a" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13216) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("s" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13217) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("k" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13218) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("r" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13219) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 13220) nil (26214 60464 913678 54000) 0 nil])
([nil nil ((13214 . 13221)) nil (26214 60464 913669 989000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -13220) (undo-tree-id74 . -1) 13221) nil (26214 60464 913669 331000) 0 nil])
([nil nil ((13220 . 13221)) nil (26214 60464 913668 61000) 0 nil])
([nil nil ((#("f" 0 1 (face (font-lock-constant-face font-lock-doc-face) fontified t)) . -13220) (undo-tree-id73 . -1) 13221) nil (26214 60464 913667 499000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-doc-face fontified t)) . -12850) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -12851) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -12852) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -12853) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("k" 0 1 (face font-lock-doc-face fontified t)) . -12854) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -12855) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 12856) nil (26214 60464 913665 856000) 0 nil])
([nil nil ((12850 . 12856)) nil (26214 60464 913655 414000) 0 nil])
([nil nil ((12856 . 12857)) nil (26214 60464 913655 39000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-doc-face fontified t)) . -12856) (undo-tree-id60 . -1) 12857) nil (26214 60464 913654 514000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12917) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("l" 0 1 (fontified t)) . -12918) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("a" 0 1 (fontified t)) . -12919) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("s" 0 1 (fontified t)) . -12920) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("k" 0 1 (fontified t)) . -12921) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("r" 0 1 (fontified t)) . -12922) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 12923) nil (26214 60464 913652 726000) 0 nil])
([nil nil ((12917 . 12923)) nil (26214 60464 913644 261000) 0 nil])
([nil nil ((12923 . 12924)) nil (26214 60464 913643 833000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -12923) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 12924) nil (26214 60464 913643 201000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12998) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("l" 0 1 (fontified t)) . -12999) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("a" 0 1 (fontified t)) . -13000) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("s" 0 1 (fontified t)) . -13001) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("k" 0 1 (fontified t)) . -13002) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("r" 0 1 (fontified t)) . -13003) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 13004) nil (26214 60464 913639 915000) 0 nil])
([nil nil ((12998 . 13004)) nil (26214 60464 913626 23000) 0 nil])
([nil nil ((13004 . 13005)) nil (26214 60464 913625 671000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -13004) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 13005) nil (26214 60464 913625 80000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c s\") 'search-flaskr-in-directory)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t)) . 13498) (undo-tree-id12 . -58) (undo-tree-id13 . -28) (undo-tree-id14 . -28) (undo-tree-id15 . -28) (undo-tree-id16 . -28) (undo-tree-id17 . -28) (undo-tree-id18 . -28) (undo-tree-id19 . -28) (undo-tree-id20 . -58) (undo-tree-id21 . -58) (undo-tree-id22 . -58) (undo-tree-id23 . -58) (undo-tree-id24 . -58) (undo-tree-id25 . -58) (undo-tree-id26 . -58) (undo-tree-id27 . -58) (undo-tree-id28 . -58) (undo-tree-id29 . -58) 13556) nil (26214 60464 913621 992000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13498) (undo-tree-id11 . -1)) nil (26214 60464 913610 31000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13498) (undo-tree-id10 . -1)) nil (26214 60464 913608 604000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13496) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (26214 60464 913604 803000) 0 nil])
([nil nil ((3844 . 3850) (t 26214 60464 920167 813000)) nil (26214 62447 175477 742000) 0 nil])
([nil nil ((3850 . 3851)) nil (26214 62447 175476 775000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3850) (undo-tree-id82 . -1) 3851) nil (26214 62447 175476 199000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4117 . 4118) (nil fontified nil 3847 . 4118) (3847 . 4118)) nil (26214 62447 175475 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4008 . 4009) (nil fontified nil 3953 . 4009) (nil fontified nil 3950 . 3953) (nil fontified nil 3907 . 3950) (nil fontified nil 3904 . 3907) (nil fontified nil 3847 . 3904) (nil fontified nil 3845 . 3847) (3845 . 4009)) nil (26214 62447 175474 52000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-comment-face fontified t)) . -3917) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -3918) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -3919) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -3920) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -3921) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -3922) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 3923) nil (26214 62447 175472 128000) 0 nil])
([nil nil ((3917 . 3927)) nil (26214 62447 175463 310000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3926) (undo-tree-id69 . -1) 3927) nil (26214 62447 175462 739000) 0 nil])
([nil nil ((3926 . 3927)) nil (26214 62447 175461 99000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3926) (undo-tree-id68 . -1) 3927) nil (26214 62447 175460 555000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -3914) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -3915) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3916) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 3917) nil (26214 62447 175458 803000) 0 nil])
([nil nil ((3914 . 3915)) nil (26214 62447 175450 359000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3914) (undo-tree-id58 . -1) 3915) nil (26214 62447 175449 712000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3923) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -3924) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -3925) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("d" 0 1 (face font-lock-comment-face fontified defer)) . -3926) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3927) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -3928) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("h" 0 1 (face font-lock-comment-face fontified defer)) . -3929) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -3930) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -3931) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -3932) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -3933) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 3934) nil (26214 62447 175447 236000) 0 nil])
([nil nil ((3923 . 3924)) nil (26214 62447 175431 946000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3923) (undo-tree-id35 . -1) 3924) nil (26214 62447 175431 403000) 0 nil])
([nil nil ((3932 . 3933)) nil (26214 62447 175430 90000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3932) (undo-tree-id34 . -1) 3933) nil (26214 62447 175429 618000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -3927) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -3928) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -3929) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -3930) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -3931) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -3932) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 3933) nil (26214 62447 175427 592000) 0 nil])
([nil nil ((3927 . 3934)) nil (26214 62447 175415 751000) 0 nil])
([nil nil ((3934 . 3935)) nil (26214 62447 175415 298000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3934) (undo-tree-id16 . -1) 3935) nil (26214 62447 175414 833000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-comment-face fontified t)) . -3935) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -3936) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -3937) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 3938) nil (26214 62447 175413 277000) 0 nil])
([nil nil ((3935 . 3936)) nil (26214 62447 175408 413000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3935) (undo-tree-id9 . -1) 3936) nil (26214 62447 175407 935000) 0 nil])
([nil nil ((3937 . 3938)) nil (26214 62447 175406 479000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3937) (undo-tree-id8 . -1) 3938) nil (26214 62447 175405 683000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -3935) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 3936) nil (26214 62447 175404 163000) 0 nil])
([nil nil ((3935 . 3940)) nil (26214 62447 175402 237000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-comment-face fontified t)) . -3939) (undo-tree-id5 . -1) 3940) nil (26214 62447 175401 432000) 0 nil])
([nil nil ((3939 . 3946)) nil (26214 62447 175400 67000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3945) (undo-tree-id4 . -1) 3946) nil (26214 62447 175399 562000) 0 nil])
([nil nil ((3945 . 3946)) nil (26214 62447 175398 194000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -3945) (undo-tree-id3 . -1) 3946) nil (26214 62447 175397 579000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4005)) nil (26214 62447 175396 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4278) (undo-tree-id2 . -1)) nil (26214 62447 175395 455000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4278) (undo-tree-id1 . -1)) nil (26214 62447 175393 734000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4278) (undo-tree-id0 . -1)) nil (26214 62447 175389 58000) 0 nil])
([nil nil ((4005 . 4009) (t 26214 62447 189383 446000)) nil (26214 62588 843566 407000) 0 nil])
([nil nil ((4009 . 4010)) nil (26214 62588 843565 917000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4009) (undo-tree-id3 . -1) 4010) nil (26214 62588 843565 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4425 . 4426) (nil fontified nil 4006 . 4426) (4006 . 4426)) nil (26214 62588 843564 247000) 0 nil])
([nil nil ((#(";; Define a function to activate boon-set-command-state in grep-mode
(defun my-grep-mode-hook ()
  \"Activate boon-set-command-state when entering grep-mode.\"
  (boon-set-command-state))

;; Add the function to grep-mode-hook
(add-hook 'grep-mode-hook 'my-grep-mode-hook)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 69 (face font-lock-comment-face fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 75 (face font-lock-keyword-face fontified t) 75 76 (fontified t) 76 93 (face font-lock-function-name-face fontified t) 93 94 (fontified t) 94 95 (face (rainbow-delimiters-depth-2-face) fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 99 (fontified t) 99 157 (face font-lock-doc-face fontified t) 157 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-2-face) fontified t) 161 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-2-face) fontified t) 184 185 (face (rainbow-delimiters-depth-1-face) fontified t) 185 187 (fontified t) 187 190 (face font-lock-comment-delimiter-face fontified t) 190 225 (face font-lock-comment-face fontified t) 225 226 (face (rainbow-delimiters-depth-1-face) fontified t) 226 269 (fontified t) 269 270 (face (rainbow-delimiters-depth-1-face) fontified t) 270 271 (fontified t)) . 4430) (undo-tree-id2 . -271) 4701) nil (26214 62588 843563 329000) 0 nil])
([nil nil ((#("



" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 4427) (undo-tree-id0 . -4) (undo-tree-id1 . -3) 4431) nil (26214 62588 843559 131000) 0 nil])
([nil nil ((1002 . 1006) (t 26214 62588 857372 647000)) nil (26214 62792 149433 312000) 0 nil])
([nil nil ((1006 . 1007)) nil (26214 62792 149432 820000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1006) (undo-tree-id72 . -1) 1007) nil (26214 62792 149432 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1177 . 1178) (nil fontified nil 1003 . 1178) (1003 . 1178)) nil (26214 62792 149431 71000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1144 . 1145) (nil fontified nil 1089 . 1145) (nil fontified nil 1086 . 1089) (nil fontified nil 1064 . 1086) (nil fontified nil 1061 . 1064) (nil fontified nil 1004 . 1061) (nil fontified nil 1002 . 1004) (1002 . 1145)) nil (26214 62792 149430 301000) 0 nil])
([nil nil ((1002 . 1003)) nil (26214 62792 149429 247000) 0 nil])
([nil nil ((1003 . 1004)) nil (26214 62792 149428 907000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1003) (undo-tree-id71 . -1) 1004) nil (26214 62792 149428 410000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -1065) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -1066) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("l" 0 1 (face font-lock-comment-face fontified defer)) . -1067) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -1068) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -1069) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -1070) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("w" 0 1 (face font-lock-comment-face fontified defer)) . -1071) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -1072) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -1073) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("d" 0 1 (face font-lock-comment-face fontified defer)) . -1074) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -1075) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("w" 0 1 (face font-lock-comment-face fontified defer)) . -1076) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -1077) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("v" 0 1 (face font-lock-comment-face fontified defer)) . -1078) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -1079) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -1080) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -1081) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -1082) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("c" 0 1 (face font-lock-comment-face fontified defer)) . -1083) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1085) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 1086) nil (26214 62792 149425 286000) 0 nil])
([nil nil ((1065 . 1076)) nil (26214 62792 149393 919000) 0 nil])
([nil nil ((1076 . 1077)) nil (26214 62792 149393 586000) 0 nil])
([nil nil ((1077 . 1078)) nil (26214 62792 149393 183000) 0 nil])
([nil nil ((1078 . 1081)) nil (26214 62792 149392 787000) 0 nil])
([nil nil ((1081 . 1097)) nil (26214 62792 149392 387000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -1091) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1092) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1093) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1094) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1095) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1096) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 1097) nil (26214 62792 149391 171000) 0 nil])
([nil nil ((1091 . 1105)) nil (26214 62792 149378 875000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1104) (undo-tree-id10 . -1) 1105) nil (26214 62792 149378 341000) 0 nil])
([nil nil ((1104 . 1105)) nil (26214 62792 149377 95000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -1104) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 1105) nil (26214 62792 149376 266000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1341) (undo-tree-id1 . -1)) nil (26214 62792 149369 914000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1341) (undo-tree-id0 . -1)) nil (26214 62792 149365 605000) 0 nil])
([nil nil ((4631 . 4634) (t 26215 110 858857 862000)) nil (26218 62831 721110 981000) 0 nil])
([nil nil ((4635 . 4637) (4634 . 4636)) nil (26218 62831 721110 471000) 0 nil])
([nil nil ((4637 . 4638)) nil (26218 62831 721109 977000) 0 nil])
([nil nil ((4638 . 4642)) nil (26218 62831 721109 642000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -4640) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -4641) (undo-tree-id40 . -1) 4642) nil (26218 62831 721108 883000) 0 nil])
([nil nil ((4640 . 4645)) nil (26218 62831 721105 762000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-function-name-face fontified t)) . -4644) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 4645) nil (26218 62831 721105 97000) 0 nil])
([nil nil ((4644 . 4649)) nil (26218 62831 721102 767000) 0 nil])
([nil nil ((4649 . 4653)) nil (26218 62831 721102 330000) 0 nil])
([nil nil ((4641 . 4670) (#("my-check-sea" 0 12 (face font-lock-function-name-face fontified t)) . -4641) (undo-tree-id31 . -12) (undo-tree-id32 . -12) (undo-tree-id33 . -12) 4653) nil (26218 62831 721101 823000) 0 nil])
([nil nil ((4670 . 4673)) nil (26218 62831 721099 346000) 0 nil])
([nil nil ((4673 . 4676)) nil (26218 62831 721099 0) 0 nil])
([nil nil ((4674 . 4676) (4674 . 4675) 4676) nil (26218 62831 721098 538000) 0 nil])
([nil nil ((4677 . 4680) (4676 . 4678) (#("\"" 0 1 (fontified nil)) . -4676) (4676 . 4677)) nil (26218 62831 721097 819000) 0 nil])
([nil nil ((4680 . 4701)) nil (26218 62831 721097 131000) 0 nil])
([nil nil ((4701 . 4709)) nil (26218 62831 721096 784000) 0 nil])
([nil nil ((4709 . 4730)) nil (26218 62831 721096 290000) 0 nil])
([nil nil ((4730 . 4742)) nil (26218 62831 721095 776000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -4741) (undo-tree-id30 . -1) 4742) nil (26218 62831 721094 923000) 0 nil])
([nil nil ((4741 . 4746)) nil (26218 62831 721093 845000) 0 nil])
([nil nil ((4746 . 4754)) nil (26218 62831 721093 359000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -4753) (undo-tree-id29 . -1) 4754) nil (26218 62831 721092 811000) 0 nil])
([nil nil ((4751 . 4752)) nil (26218 62831 721091 650000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -4751) (undo-tree-id28 . -1) 4752) nil (26218 62831 721091 97000) 0 nil])
([nil nil ((4753 . 4756)) nil (26218 62831 721089 795000) 0 nil])
([nil nil ((4756 . 4757)) nil (26218 62831 721089 410000) 0 nil])
([nil nil ((4757 . 4758)) nil (26218 62831 721089 22000) 0 nil])
([nil nil ((4758 . 4760)) nil (26218 62831 721088 633000) 0 nil])
([nil nil ((4760 . 4761)) nil (26218 62831 721088 224000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-doc-face fontified t)) . -4760) (undo-tree-id27 . -1) 4761) nil (26218 62831 721087 728000) 0 nil])
([nil nil ((4761 . 4764)) nil (26218 62831 721086 650000) 0 nil])
([nil nil ((4765 . 4769) (4764 . 4766)) nil (26218 62831 721086 221000) 0 nil])
([nil nil ((#("e" 0 1 (fontified defer)) . -4766) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("h" 0 1 (fontified t)) . -4767) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("n" 0 1 (fontified t)) . -4768) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 4769) nil (26218 62831 721085 288000) 0 nil])
([nil nil ((4766 . 4770)) nil (26218 62831 721079 123000) 0 nil])
([nil nil ((4771 . 4777) (4770 . 4772)) nil (26218 62831 721078 662000) 0 nil])
([nil nil ((4777 . 4780)) nil (26218 62831 721078 96000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -4778) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("b" 0 1 (fontified t)) . -4779) (undo-tree-id17 . -1) 4780) nil (26218 62831 721077 345000) 0 nil])
([nil nil ((4778 . 4780)) nil (26218 62831 721074 39000) 0 nil])
([nil nil ((4779 . 4781)) nil (26218 62831 721073 653000) 0 nil])
([nil nil ((4781 . 4782)) nil (26218 62831 721073 282000) 0 nil])
([nil nil ((4782 . 4783)) nil (26218 62831 721072 892000) 0 nil])
([nil nil ((4783 . 4787)) nil (26218 62831 721072 495000) 0 nil])
([nil nil ((4779 . 4790) (#("buffer-n" 0 2 (fontified t) 2 3 (fontified t) 3 8 (fontified t)) . -4779) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) 4787) nil (26218 62831 721071 440000) 0 nil])
([nil nil ((4791 . 4793)) nil (26218 62831 721068 911000) 0 nil])
([nil nil ((4795 . 4797) (4794 . 4796) (#("\"" 0 1 (face (rainbow-delimiters-depth-4-face) fontified nil)) . -4794) (4794 . 4795) (4793 . 4795)) nil (26218 62833 371853 204000) 0 nil])
([nil nil ((4796 . 4798)) nil (26218 62981 613406 544000) 0 nil] [nil nil ((4802 . 4804) (4802 . 4803) 4796) ((#("
" 0 1 (fontified nil)) . 4802) (#("  " 0 2 (fontified t)) . 4802) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2)) (26218 62833 84453 305000) 0 nil])
([nil nil ((4798 . 4810)) nil (26218 62981 613405 735000) 0 nil])
([nil nil ((4804 . 4805)) ((#("a" 0 1 (fontified t)) . 4804) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1)) (26218 62832 755212 480000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -4809) (undo-tree-id143 . -1) 4810) nil (26218 62981 613405 236000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4804) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 4805) ((4804 . 4805)) (26218 62832 385630 420000) 0 nil])
([nil nil ((4812 . 4814) (#("\"" 0 1 (fontified nil)) . -4812) (4811 . 4813)) nil (26218 62981 613404 56000) 0 nil])
([nil nil ((4804 . 4805)) ((#("f" 0 1 (fontified t)) . 4804) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) (26218 62831 721165 269000) 0 nil])
([nil nil ((4813 . 4815)) nil (26218 62981 613403 474000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4804) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 4805) ((4804 . 4805)) (26218 62831 721060 50000) 0 nil])
([nil nil ((4814 . 4819)) nil (26218 62981 613403 92000) 0 nil])
nil
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -4818) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 4819) nil (26218 62981 613402 603000) 0 nil])
([nil nil ((4818 . 4819)) nil (26218 62981 613400 351000) 0 nil])
([nil nil ((4823 . 4828)) nil (26218 62981 613399 960000) 0 nil])
([nil nil ((4829 . 4837) (4828 . 4830)) nil (26218 62981 613399 493000) 0 nil])
([nil nil ((4829 . 4851) (#("boon-set" 0 8 (fontified t)) . -4829) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) 4837) nil (26218 62981 613398 871000) 0 nil])
([nil nil ((4851 . 4852)) nil (26218 62981 613396 418000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4851) (undo-tree-id136 . -1) 4852) nil (26218 62981 613395 892000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 4853) (#("
" 0 1 (fontified t)) . -4853) (undo-tree-id135 . -1) 4857) nil (26218 62981 613394 567000) 0 nil])
([nil nil ((apply -12 4428 4645 undo--wrap-and-run-primitive-undo 4428 4645 ((4610 . 4613) (4552 . 4555) (4471 . 4474) (4428 . 4431) 4632))) nil (26218 62981 613393 317000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4645)) nil (26218 62981 613392 927000) 0 nil])
([nil nil ((4643 . 4645)) nil (26218 62981 613392 526000) 0 nil])
([nil nil ((4645 . 4646)) nil (26218 62981 613392 67000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4645) (undo-tree-id134 . -1) 4646) nil (26218 62981 613391 442000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4925 . 4926) (nil fontified nil 4645 . 4926) (4645 . 4926)) nil (26218 62981 613390 243000) 0 nil])
([nil nil ((#("(defun my-check-search-string-buffer ()
  \"Activate boon-set-command-state when switching to *search-string* or *Occur* buffer\"
  (when (member (buffer-name) '(\"*search-string*\" \"*Occur*\"))
    (boon-set-command-state)))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 36 (face font-lock-function-name-face fontified t) 36 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 40 (fontified t) 40 42 (fontified t) 42 117 (face font-lock-doc-face fontified t) 117 122 (face font-lock-doc-face fontified t) 122 123 (face font-lock-doc-face fontified t) 123 126 (face font-lock-doc-face fontified t) 126 127 (face font-lock-doc-face fontified t) 127 128 (fontified t) 128 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-2-face) fontified t) 131 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-3-face) fontified t) 137 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-4-face) fontified t) 145 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-4-face) fontified t) 157 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-4-face) fontified t) 160 177 (face font-lock-string-face fontified t) 177 178 (fontified t) 178 187 (face font-lock-string-face fontified t) 187 188 (face (rainbow-delimiters-depth-4-face) fontified t) 188 189 (face (rainbow-delimiters-depth-3-face) fontified t) 189 190 (fontified t) 190 194 (fontified t) 194 195 (face (rainbow-delimiters-depth-3-face) fontified t) 195 217 (fontified t) 217 218 (face (rainbow-delimiters-depth-3-face) fontified t) 218 219 (face (rainbow-delimiters-depth-2-face) fontified t) 219 220 (face (rainbow-delimiters-depth-1-face) fontified t) 220 221 (fontified t)) . 4928) (undo-tree-id126 . -40) (undo-tree-id127 . -42) (undo-tree-id128 . -119) (undo-tree-id129 . -127) (undo-tree-id130 . -219) (undo-tree-id131 . -189) (undo-tree-id132 . -40) (undo-tree-id133 . -221) 5149) nil (26218 62981 613389 349000) 0 nil])
([nil nil ((#(";; Add the function to window-configuration-change-hook
(add-hook 'window-configuration-change-hook 'my-check-search-string-buffer)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 56 (face font-lock-comment-face fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-1-face) fontified t) 131 132 (fontified t)) . 4929) (undo-tree-id125 . -132) 5061) nil (26218 62981 613381 723000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4775 . 4776) (nil fontified nil 4775 . 4776) (nil fontified nil 4774 . 4775) (nil fontified nil 4701 . 4774) (nil fontified nil 4700 . 4701) (nil fontified nil 4647 . 4700) (nil fontified nil 4644 . 4647) (4644 . 4776)) nil (26218 62981 613380 404000) 0 nil])
([nil nil ((4700 . 4701)) nil (26218 62981 613379 427000) 0 nil])
([nil nil ((4701 . 4702)) nil (26218 62981 613378 953000) 0 nil])
([nil nil ((4702 . 4703)) nil (26218 62981 613378 618000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -4702) (undo-tree-id124 . -1) 4703) nil (26218 62981 613377 961000) 0 nil])
([nil nil ((4644 . 4645)) nil (26218 62981 613376 789000) 0 nil])
([nil nil ((4645 . 4646)) nil (26218 62981 613376 337000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4645) (undo-tree-id123 . -1) 4646) nil (26218 62981 613375 731000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5062) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1)) nil (26218 62981 613374 297000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5062) (undo-tree-id112 . -1) (undo-tree-id113 . -1)) nil (26218 62981 613367 678000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5062)) nil (26218 62981 613358 201000) 0 nil])
([nil nil ((14713 . 14717) (t 26218 62981 627255 226000)) nil (26219 29294 880012 560000) 0 nil])
([nil nil ((14717 . 14718)) nil (26219 29294 880011 873000) 0 nil])
([nil nil ((14718 . 14719)) nil (26219 29294 880011 396000) 0 nil])
([nil nil ((14719 . 14740)) nil (26219 29294 880010 956000) 0 nil])
([nil nil ((14740 . 14761)) nil (26219 29294 880010 532000) 0 nil])
([nil nil ((14761 . 14782)) nil (26219 29294 880010 124000) 0 nil])
([nil nil ((14782 . 14803)) nil (26219 29294 880009 721000) 0 nil])
([nil nil ((14803 . 14824)) nil (26219 29294 880009 78000) 0 nil])
([nil nil ((14824 . 14828)) nil (26219 29294 880008 602000) 0 nil])
([nil nil ((14828 . 14829)) nil (26219 29294 880008 103000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14828) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) 14829) nil (26219 29294 880007 449000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14856 . 14857) (nil fontified nil 14716 . 14857) (14716 . 14857)) nil (26219 29294 880002 252000) 0 nil])
([nil nil ((12226 . 12229)) nil (26219 29294 880001 463000) 0 nil])
([nil nil ((12229 . 12230)) nil (26219 29294 880001 19000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12229) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) 12230) nil (26219 29294 880000 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12501 . 12502) (nil fontified nil 12446 . 12502) (nil fontified nil 12443 . 12446) (nil fontified nil 12374 . 12443) (nil fontified nil 12371 . 12374) (nil fontified nil 12291 . 12371) (nil fontified nil 12288 . 12291) (nil fontified nil 12231 . 12288) (nil fontified nil 12229 . 12231) (12229 . 12502)) nil (26219 29294 879994 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15263 . 15264) (nil fontified nil 15208 . 15264) (nil fontified nil 15205 . 15208) (nil fontified nil 15136 . 15205) (nil fontified nil 15133 . 15136) (nil fontified nil 15053 . 15133) (nil fontified nil 15050 . 15053) (nil fontified nil 14993 . 15050) (nil fontified nil 14991 . 14993) (14991 . 15264)) nil (26219 29294 879993 60000) 0 nil])
([nil nil ((#("hulpfunctie om te checken of the entry in dired een bestand is of een directory" 0 79 (face font-lock-comment-face fontified t)) . 12291) (undo-tree-id4719 . -79) (undo-tree-id4720 . -79) (undo-tree-id4721 . -79) (undo-tree-id4722 . -79) (undo-tree-id4723 . -79) (undo-tree-id4724 . -79) (undo-tree-id4725 . -79) (undo-tree-id4726 . -79) 12370) nil (26219 29294 879991 570000) 0 nil])
([nil nil ((#("in geval van een bestand, dat wordt weergegeven in een nieuwe window" 0 68 (face font-lock-comment-face fontified t)) . 12295) (undo-tree-id4711 . -68) (undo-tree-id4712 . -68) (undo-tree-id4713 . -68) (undo-tree-id4714 . -68) (undo-tree-id4715 . -68) (undo-tree-id4716 . -68) (undo-tree-id4717 . -68) (undo-tree-id4718 . -68) 12363) nil (26219 29294 879985 398000) 0 nil])
([nil nil ((12291 . 12294)) nil (26219 29294 879978 602000) 0 nil])
([nil nil ((12291 . 12302) (#("Hul" 0 3 (face font-lock-comment-face fontified t)) . -12291) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -3) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . -2) (undo-tree-id4697 . -2) (undo-tree-id4698 . -3) (undo-tree-id4699 . -3) (undo-tree-id4700 . -3) (undo-tree-id4701 . -3) (undo-tree-id4702 . -3) (undo-tree-id4703 . -3) (undo-tree-id4704 . -3) (undo-tree-id4705 . -3) (undo-tree-id4706 . -3) (undo-tree-id4707 . -3) (undo-tree-id4708 . -3) (undo-tree-id4709 . -3) (undo-tree-id4710 . -3) 12294) nil (26219 29294 879977 129000) 0 nil])
([nil nil ((12302 . 12319)) nil (26219 29294 879946 748000) 0 nil])
([nil nil ((12319 . 12332)) nil (26219 29294 879946 265000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -12325) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -12326) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -12327) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -12328) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -12329) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -12330) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -12331) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) 12332) nil (26219 29294 879938 203000) 0 nil])
([nil nil ((12325 . 12330)) nil (26219 29294 879700 899000) 0 nil])
([nil nil ((12330 . 12331)) nil (26219 29294 879700 494000) 0 nil])
([nil nil ((12331 . 12352)) nil (26219 29294 879700 77000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -12346) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12347) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -12348) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -12349) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -12350) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -12351) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) 12352) nil (26219 29294 879693 996000) 0 nil])
([nil nil ((12346 . 12351)) nil (26219 29294 879524 45000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -12346) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12347) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -12348) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (#("b" 0 1 (face font-lock-comment-face fontified t)) . -12349) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12350) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) 12351) nil (26219 29294 879519 245000) 0 nil])
([nil nil ((12346 . 12367)) nil (26219 29294 879394 743000) 0 nil])
([nil nil ((12367 . 12378)) nil (26219 29294 879394 343000) 0 nil])
([nil nil ((12378 . 12379)) nil (26219 29294 879393 943000) 0 nil])
([nil nil ((12379 . 12385)) nil (26219 29294 879393 510000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -12384) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) 12385) nil (26219 29294 879392 798000) 0 nil])
([nil nil ((12384 . 12385)) nil (26219 29294 879387 61000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -12384) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) 12385) nil (26219 29294 879386 321000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 12345) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (12346 . 12347)) nil (26219 29294 879378 602000) 0 nil])
([nil nil ((12346 . 12347)) nil (26219 29294 879255 757000) 0 nil])
([nil nil ((12347 . 12348)) nil (26219 29294 879255 360000) 0 nil])
([nil nil ((12348 . 12349)) nil (26219 29294 879254 971000) 0 nil])
([nil nil ((12349 . 12350)) nil (26219 29294 879254 499000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -12349) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) 12350) nil (26219 29294 879253 533000) 0 nil])
([nil nil ((#(";;======================================================================================
;; Dit werkt

;; (defun search-flaskr-in-directory (search-string)
;;   \"Search for SEARCH-STRING in all files within default-directory using find and awk.\"
;;   (interactive \"sEnter search string: \")
;;   (let* ((directory (expand-file-name default-directory))
;;          (search-string (or search-string \"flaskr\"))
;;          (command (format \"find %s -type f -exec awk '/%s/ {printf \\\"%%-30s %%-10s %%s\\\\n\\\", FILENAME, FNR, $0}' {} +\"
;;                           (shell-quote-argument directory)
;;                           (shell-quote-argument search-string))))
;;     (compilation-start command 'grep-mode)))


;; (defcustom consult-dir-custom-command #'search-flaskr-in-directory
;;   \"Custom command to run after selecting a directory using `consult-dir'.

;; The default is to invoke `search-flaskr-in-directory' from the chosen
;; directory. This can be customized to run any arbitrary function
;; (of no variables), which will be called with `default-directory'
;; set to the directory chosen using `consult-dir'.\"
;;   :group 'consult-dir
;;   :type '(function :tag \"Custom function\"))

;;======================================================================================
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 89 (face font-lock-comment-face fontified t) 89 92 (face font-lock-comment-delimiter-face fontified t) 92 102 (face font-lock-comment-face fontified t) 102 103 (fontified t) 103 106 (face font-lock-comment-delimiter-face fontified t) 106 156 (face font-lock-comment-face fontified t) 156 161 (face font-lock-comment-delimiter-face fontified t) 161 246 (face font-lock-comment-face fontified t) 246 251 (face font-lock-comment-delimiter-face fontified t) 251 290 (face font-lock-comment-face fontified t) 290 295 (face font-lock-comment-delimiter-face fontified t) 295 351 (face font-lock-comment-face fontified t) 351 363 (face font-lock-comment-delimiter-face fontified t) 363 407 (face font-lock-comment-face fontified t) 407 419 (face font-lock-comment-delimiter-face fontified t) 419 529 (face font-lock-comment-face fontified t) 529 558 (face font-lock-comment-delimiter-face fontified t) 558 591 (face font-lock-comment-face fontified t) 591 620 (face font-lock-comment-delimiter-face fontified t) 620 660 (face font-lock-comment-face fontified t) 660 664 (face font-lock-comment-delimiter-face fontified t) 664 667 (face font-lock-comment-delimiter-face fontified t) 667 708 (face font-lock-comment-face fontified t) 708 709 (fontified t) 709 710 (fontified t) 710 713 (face font-lock-comment-delimiter-face fontified t) 713 780 (face font-lock-comment-face fontified t) 780 785 (face font-lock-comment-delimiter-face fontified t) 785 843 (face font-lock-comment-face fontified t) 843 854 (face (font-lock-constant-face font-lock-comment-face) fontified t) 854 857 (face font-lock-comment-face fontified t) 857 858 (fontified t) 858 861 (face font-lock-comment-delimiter-face fontified t) 861 887 (face font-lock-comment-face fontified t) 887 913 (face (font-lock-constant-face font-lock-comment-face) fontified t) 913 931 (face font-lock-comment-face fontified t) 931 934 (face font-lock-comment-delimiter-face fontified t) 934 998 (face font-lock-comment-face fontified t) 998 1001 (face font-lock-comment-delimiter-face fontified t) 1001 1047 (face font-lock-comment-face fontified t) 1047 1064 (face (font-lock-constant-face font-lock-comment-face) fontified t) 1064 1066 (face font-lock-comment-face fontified t) 1066 1069 (face font-lock-comment-delimiter-face fontified t) 1069 1104 (face font-lock-comment-face fontified t) 1104 1115 (face (font-lock-constant-face font-lock-comment-face) fontified t) 1115 1119 (face font-lock-comment-face fontified t) 1119 1124 (face font-lock-comment-delimiter-face fontified t) 1124 1144 (face font-lock-comment-face fontified t) 1144 1149 (face font-lock-comment-delimiter-face fontified t) 1149 1191 (face font-lock-comment-face fontified t) 1191 1192 (fontified t) 1192 1194 (face font-lock-comment-delimiter-face fontified t) 1194 1226 (face font-lock-comment-face fontified t) 1226 1281 (face font-lock-comment-face fontified t)) . 12452) (undo-tree-id2814 . -1281) (undo-tree-id2815 . -1281) (undo-tree-id2816 . -1281) (undo-tree-id2817 . -1281) (undo-tree-id2818 . -1246) (undo-tree-id2819 . -1246) (undo-tree-id2820 . -1246) (undo-tree-id2821 . -1246) (undo-tree-id2822 . -1191) (undo-tree-id2823 . -1191) (undo-tree-id2824 . -1191) (undo-tree-id2825 . -1191) (undo-tree-id2826 . -1190) (undo-tree-id2827 . -1190) (undo-tree-id2828 . -1190) (undo-tree-id2829 . -1190) (undo-tree-id2830 . -1143) (undo-tree-id2831 . -1143) (undo-tree-id2832 . -1143) (undo-tree-id2833 . -1143) (undo-tree-id2834 . -1118) (undo-tree-id2835 . -1118) (undo-tree-id2836 . -1118) (undo-tree-id2837 . -1118) (undo-tree-id2838 . -1052) (undo-tree-id2839 . -1052) (undo-tree-id2840 . -1052) (undo-tree-id2841 . -1052) (undo-tree-id2842 . -985) (undo-tree-id2843 . -985) (undo-tree-id2844 . -985) (undo-tree-id2845 . -912) (undo-tree-id2846 . -912) (undo-tree-id2847 . -912) (undo-tree-id2848 . -857) (undo-tree-id2849 . -857) (undo-tree-id2850 . -857) (undo-tree-id2851 . -857) (undo-tree-id2852 . -834) (undo-tree-id2853 . -834) (undo-tree-id2854 . -834) (undo-tree-id2855 . -834) (undo-tree-id2856 . -834) (undo-tree-id2857 . -834) (undo-tree-id2858 . -834) (undo-tree-id2859 . -764) (undo-tree-id2860 . -764) (undo-tree-id2861 . -764) (undo-tree-id2862 . -709) (undo-tree-id2863 . -709) (undo-tree-id2864 . -709) (undo-tree-id2865 . -709) (undo-tree-id2866 . -709) (undo-tree-id2867 . -709) (undo-tree-id2868 . -709) (undo-tree-id2869 . -708) (undo-tree-id2870 . -708) (undo-tree-id2871 . -708) (undo-tree-id2872 . -707) (undo-tree-id2873 . -707) (undo-tree-id2874 . -707) (undo-tree-id2875 . -707) (undo-tree-id2876 . -707) (undo-tree-id2877 . -707) (undo-tree-id2878 . -707) (undo-tree-id2879 . -645) (undo-tree-id2880 . -645) (undo-tree-id2881 . -645) (undo-tree-id2882 . -645) (undo-tree-id2883 . -645) (undo-tree-id2884 . -645) (undo-tree-id2885 . -645) (undo-tree-id2886 . -583) (undo-tree-id2887 . -583) (undo-tree-id2888 . -583) (undo-tree-id2889 . -461) (undo-tree-id2890 . -461) (undo-tree-id2891 . -461) (undo-tree-id2892 . -405) (undo-tree-id2893 . -405) (undo-tree-id2894 . -405) (undo-tree-id2895 . -344) (undo-tree-id2896 . -344) (undo-tree-id2897 . -344) (undo-tree-id2898 . -289) (undo-tree-id2899 . -289) (undo-tree-id2900 . -289) (undo-tree-id2901 . -289) (undo-tree-id2902 . -210) (undo-tree-id2903 . -210) (undo-tree-id2904 . -210) (undo-tree-id2905 . -210) (undo-tree-id2906 . -155) (undo-tree-id2907 . -155) (undo-tree-id2908 . -155) (undo-tree-id2909 . -155) (undo-tree-id2910 . -102) (undo-tree-id2911 . -102) (undo-tree-id2912 . -102) (undo-tree-id2913 . -102) (undo-tree-id2914 . -101) (undo-tree-id2915 . -101) (undo-tree-id2916 . -101) (undo-tree-id2917 . -101) (undo-tree-id2918 . -54) (undo-tree-id2919 . -54) (undo-tree-id2920 . -54) (undo-tree-id2921 . -54) (undo-tree-id2922 . -54) (undo-tree-id2923 . -54) (undo-tree-id2924 . -54) (undo-tree-id2925 . -54) (undo-tree-id2926 . -101) (undo-tree-id2927 . -101) (undo-tree-id2928 . -101) (undo-tree-id2929 . -101) (undo-tree-id2930 . -102) (undo-tree-id2931 . -102) (undo-tree-id2932 . -102) (undo-tree-id2933 . -102) (undo-tree-id2934 . -155) (undo-tree-id2935 . -155) (undo-tree-id2936 . -155) (undo-tree-id2937 . -155) (undo-tree-id2938 . -210) (undo-tree-id2939 . -210) (undo-tree-id2940 . -210) (undo-tree-id2941 . -210) (undo-tree-id2942 . -289) (undo-tree-id2943 . -289) (undo-tree-id2944 . -289) (undo-tree-id2945 . -289) (undo-tree-id2946 . -344) (undo-tree-id2947 . -344) (undo-tree-id2948 . -344) (undo-tree-id2949 . -344) (undo-tree-id2950 . -405) (undo-tree-id2951 . -405) (undo-tree-id2952 . -405) (undo-tree-id2953 . -461) (undo-tree-id2954 . -461) (undo-tree-id2955 . -461) (undo-tree-id2956 . -583) (undo-tree-id2957 . -583) (undo-tree-id2958 . -583) (undo-tree-id2959 . -645) (undo-tree-id2960 . -645) (undo-tree-id2961 . -645) (undo-tree-id2962 . -707) (undo-tree-id2963 . -707) (undo-tree-id2964 . -707) (undo-tree-id2965 . -707) (undo-tree-id2966 . -708) (undo-tree-id2967 . -708) (undo-tree-id2968 . -708) (undo-tree-id2969 . -708) (undo-tree-id2970 . -709) (undo-tree-id2971 . -709) (undo-tree-id2972 . -709) (undo-tree-id2973 . -764) (undo-tree-id2974 . -764) (undo-tree-id2975 . -764) (undo-tree-id2976 . -764) (undo-tree-id2977 . -834) (undo-tree-id2978 . -834) (undo-tree-id2979 . -834) (undo-tree-id2980 . -857) (undo-tree-id2981 . -857) (undo-tree-id2982 . -857) (undo-tree-id2983 . -857) (undo-tree-id2984 . -912) (undo-tree-id2985 . -912) (undo-tree-id2986 . -912) (undo-tree-id2987 . -912) (undo-tree-id2988 . -985) (undo-tree-id2989 . -985) (undo-tree-id2990 . -985) (undo-tree-id2991 . -1052) (undo-tree-id2992 . -1052) (undo-tree-id2993 . -1052) (undo-tree-id2994 . -1118) (undo-tree-id2995 . -1118) (undo-tree-id2996 . -1118) (undo-tree-id2997 . -1118) (undo-tree-id2998 . -1143) (undo-tree-id2999 . -1143) (undo-tree-id3000 . -1143) (undo-tree-id3001 . -1143) (undo-tree-id3002 . -1190) (undo-tree-id3003 . -1190) (undo-tree-id3004 . -1190) (undo-tree-id3005 . -1190) (undo-tree-id3006 . -1191) (undo-tree-id3007 . -1191) (undo-tree-id3008 . -1191) (undo-tree-id3009 . -1191) (undo-tree-id3010 . -1246) (undo-tree-id3011 . -1246) (undo-tree-id3012 . -1246) (undo-tree-id3013 . -1246) (undo-tree-id3014 . -1281) (undo-tree-id3015 . -1281) (undo-tree-id3016 . -1281) (undo-tree-id3017 . -1281) (undo-tree-id3018 . -1281) (undo-tree-id3019 . -1281) (undo-tree-id3020 . -1281) (undo-tree-id3021 . -1281) (undo-tree-id3022 . -1281) (undo-tree-id3023 . -1281) (undo-tree-id3024 . -1281) (undo-tree-id3025 . -1246) (undo-tree-id3026 . -1246) (undo-tree-id3027 . -1246) (undo-tree-id3028 . -1246) (undo-tree-id3029 . -1191) (undo-tree-id3030 . -1191) (undo-tree-id3031 . -1191) (undo-tree-id3032 . -1191) (undo-tree-id3033 . -1190) (undo-tree-id3034 . -1190) (undo-tree-id3035 . -1190) (undo-tree-id3036 . -1190) (undo-tree-id3037 . -1143) (undo-tree-id3038 . -1143) (undo-tree-id3039 . -1143) (undo-tree-id3040 . -1143) (undo-tree-id3041 . -1118) (undo-tree-id3042 . -1118) (undo-tree-id3043 . -1118) (undo-tree-id3044 . -1118) (undo-tree-id3045 . -1052) (undo-tree-id3046 . -1052) (undo-tree-id3047 . -1052) (undo-tree-id3048 . -1052) (undo-tree-id3049 . -985) (undo-tree-id3050 . -985) (undo-tree-id3051 . -985) (undo-tree-id3052 . -912) (undo-tree-id3053 . -912) (undo-tree-id3054 . -912) (undo-tree-id3055 . -857) (undo-tree-id3056 . -857) (undo-tree-id3057 . -857) (undo-tree-id3058 . -857) (undo-tree-id3059 . -834) (undo-tree-id3060 . -834) (undo-tree-id3061 . -834) (undo-tree-id3062 . -834) (undo-tree-id3063 . -764) (undo-tree-id3064 . -764) (undo-tree-id3065 . -764) (undo-tree-id3066 . -709) (undo-tree-id3067 . -709) (undo-tree-id3068 . -709) (undo-tree-id3069 . -709) (undo-tree-id3070 . -708) (undo-tree-id3071 . -708) (undo-tree-id3072 . -708) (undo-tree-id3073 . -707) (undo-tree-id3074 . -707) (undo-tree-id3075 . -707) (undo-tree-id3076 . -707) (undo-tree-id3077 . -645) (undo-tree-id3078 . -645) (undo-tree-id3079 . -645) (undo-tree-id3080 . -645) (undo-tree-id3081 . -583) (undo-tree-id3082 . -583) (undo-tree-id3083 . -583) (undo-tree-id3084 . -461) (undo-tree-id3085 . -461) (undo-tree-id3086 . -461) (undo-tree-id3087 . -405) (undo-tree-id3088 . -405) (undo-tree-id3089 . -405) (undo-tree-id3090 . -344) (undo-tree-id3091 . -344) (undo-tree-id3092 . -344) (undo-tree-id3093 . -289) (undo-tree-id3094 . -289) (undo-tree-id3095 . -289) (undo-tree-id3096 . -289) (undo-tree-id3097 . -210) (undo-tree-id3098 . -210) (undo-tree-id3099 . -210) (undo-tree-id3100 . -210) (undo-tree-id3101 . -155) (undo-tree-id3102 . -155) (undo-tree-id3103 . -155) (undo-tree-id3104 . -155) (undo-tree-id3105 . -102) (undo-tree-id3106 . -102) (undo-tree-id3107 . -102) (undo-tree-id3108 . -102) (undo-tree-id3109 . -101) (undo-tree-id3110 . -101) (undo-tree-id3111 . -101) (undo-tree-id3112 . -101) (undo-tree-id3113 . -54) (undo-tree-id3114 . -54) (undo-tree-id3115 . -54) (undo-tree-id3116 . -54) (undo-tree-id3117 . -89) (undo-tree-id3118 . -89) (undo-tree-id3119 . -89) (undo-tree-id3120 . -102) (undo-tree-id3121 . -102) (undo-tree-id3122 . -102) (undo-tree-id3123 . -103) (undo-tree-id3124 . -103) (undo-tree-id3125 . -103) (undo-tree-id3126 . -156) (undo-tree-id3127 . -156) (undo-tree-id3128 . -156) (undo-tree-id3129 . -246) (undo-tree-id3130 . -246) (undo-tree-id3131 . -246) (undo-tree-id3132 . -290) (undo-tree-id3133 . -290) (undo-tree-id3134 . -290) (undo-tree-id3135 . -351) (undo-tree-id3136 . -351) (undo-tree-id3137 . -351) (undo-tree-id3138 . -351) (undo-tree-id3139 . -407) (undo-tree-id3140 . -407) (undo-tree-id3141 . -407) (undo-tree-id3142 . -529) (undo-tree-id3143 . -529) (undo-tree-id3144 . -529) (undo-tree-id3145 . -591) (undo-tree-id3146 . -591) (undo-tree-id3147 . -591) (undo-tree-id3148 . -660) (undo-tree-id3149 . -660) (undo-tree-id3150 . -660) (undo-tree-id3151 . -708) (undo-tree-id3152 . -708) (undo-tree-id3153 . -708) (undo-tree-id3154 . -709) (undo-tree-id3155 . -709) (undo-tree-id3156 . -709) (undo-tree-id3157 . -710) (undo-tree-id3158 . -710) (undo-tree-id3159 . -710) (undo-tree-id3160 . -780) (undo-tree-id3161 . -780) (undo-tree-id3162 . -780) (undo-tree-id3163 . -857) (undo-tree-id3164 . -857) (undo-tree-id3165 . -857) (undo-tree-id3166 . -858) (undo-tree-id3167 . -858) (undo-tree-id3168 . -858) (undo-tree-id3169 . -931) (undo-tree-id3170 . -931) (undo-tree-id3171 . -931) (undo-tree-id3172 . -998) (undo-tree-id3173 . -998) (undo-tree-id3174 . -998) (undo-tree-id3175 . -998) (undo-tree-id3176 . -998) (undo-tree-id3177 . -998) (undo-tree-id3178 . -931) (undo-tree-id3179 . -931) (undo-tree-id3180 . -931) (undo-tree-id3181 . -858) (undo-tree-id3182 . -858) (undo-tree-id3183 . -858) (undo-tree-id3184 . -857) (undo-tree-id3185 . -857) (undo-tree-id3186 . -857) (undo-tree-id3187 . -780) (undo-tree-id3188 . -780) (undo-tree-id3189 . -780) (undo-tree-id3190 . -710) (undo-tree-id3191 . -710) (undo-tree-id3192 . -710) (undo-tree-id3193 . -709) (undo-tree-id3194 . -709) (undo-tree-id3195 . -709) (undo-tree-id3196 . -708) (undo-tree-id3197 . -708) (undo-tree-id3198 . -708) (undo-tree-id3199 . -660) (undo-tree-id3200 . -660) (undo-tree-id3201 . -660) (undo-tree-id3202 . -591) (undo-tree-id3203 . -591) (undo-tree-id3204 . -591) (undo-tree-id3205 . -529) (undo-tree-id3206 . -529) (undo-tree-id3207 . -529) (undo-tree-id3208 . -407) (undo-tree-id3209 . -407) (undo-tree-id3210 . -407) (undo-tree-id3211 . -351) (undo-tree-id3212 . -351) (undo-tree-id3213 . -351) (undo-tree-id3214 . -290) (undo-tree-id3215 . -290) (undo-tree-id3216 . -290) (undo-tree-id3217 . -246) (undo-tree-id3218 . -246) (undo-tree-id3219 . -246) (undo-tree-id3220 . -156) (undo-tree-id3221 . -156) (undo-tree-id3222 . -156) (undo-tree-id3223 . -103) (undo-tree-id3224 . -103) (undo-tree-id3225 . -103) (undo-tree-id3226 . -102) (undo-tree-id3227 . -102) (undo-tree-id3228 . -102) (undo-tree-id3229 . -89) (undo-tree-id3230 . -89) (undo-tree-id3231 . -89) (undo-tree-id3232 . -89) (undo-tree-id3233 . -89) (undo-tree-id3234 . -89) (undo-tree-id3235 . -102) (undo-tree-id3236 . -102) (undo-tree-id3237 . -102) (undo-tree-id3238 . -103) (undo-tree-id3239 . -103) (undo-tree-id3240 . -103) (undo-tree-id3241 . -156) (undo-tree-id3242 . -156) (undo-tree-id3243 . -156) (undo-tree-id3244 . -246) (undo-tree-id3245 . -246) (undo-tree-id3246 . -246) (undo-tree-id3247 . -246) (undo-tree-id3248 . -290) (undo-tree-id3249 . -290) (undo-tree-id3250 . -290) (undo-tree-id3251 . -246) (undo-tree-id3252 . -246) (undo-tree-id3253 . -246) (undo-tree-id3254 . -156) (undo-tree-id3255 . -156) (undo-tree-id3256 . -156) (undo-tree-id3257 . -103) (undo-tree-id3258 . -103) (undo-tree-id3259 . -103) (undo-tree-id3260 . -102) (undo-tree-id3261 . -102) (undo-tree-id3262 . -102) (undo-tree-id3263 . -89) (undo-tree-id3264 . -89) (undo-tree-id3265 . -89) (undo-tree-id3266 . -89) (undo-tree-id3267 . -89) (undo-tree-id3268 . -89) (undo-tree-id3269 . -102) (undo-tree-id3270 . -102) (undo-tree-id3271 . -102) (undo-tree-id3272 . -103) (undo-tree-id3273 . -103) (undo-tree-id3274 . -103) (undo-tree-id3275 . -156) (undo-tree-id3276 . -156) (undo-tree-id3277 . -156) (undo-tree-id3278 . -246) (undo-tree-id3279 . -246) (undo-tree-id3280 . -246) (undo-tree-id3281 . -290) (undo-tree-id3282 . -290) (undo-tree-id3283 . -290) (undo-tree-id3284 . -351) (undo-tree-id3285 . -351) (undo-tree-id3286 . -351) (undo-tree-id3287 . -407) (undo-tree-id3288 . -407) (undo-tree-id3289 . -407) (undo-tree-id3290 . -529) (undo-tree-id3291 . -529) (undo-tree-id3292 . -529) (undo-tree-id3293 . -591) (undo-tree-id3294 . -591) (undo-tree-id3295 . -591) (undo-tree-id3296 . -660) (undo-tree-id3297 . -660) (undo-tree-id3298 . -660) (undo-tree-id3299 . -708) (undo-tree-id3300 . -708) (undo-tree-id3301 . -708) (undo-tree-id3302 . -708) (undo-tree-id3303 . -709) (undo-tree-id3304 . -709) (undo-tree-id3305 . -709) (undo-tree-id3306 . -710) (undo-tree-id3307 . -710) (undo-tree-id3308 . -710) (undo-tree-id3309 . -780) (undo-tree-id3310 . -780) (undo-tree-id3311 . -780) (undo-tree-id3312 . -857) (undo-tree-id3313 . -857) (undo-tree-id3314 . -857) (undo-tree-id3315 . -858) (undo-tree-id3316 . -858) (undo-tree-id3317 . -858) (undo-tree-id3318 . -931) (undo-tree-id3319 . -931) (undo-tree-id3320 . -931) (undo-tree-id3321 . -998) (undo-tree-id3322 . -998) (undo-tree-id3323 . -998) (undo-tree-id3324 . -1066) (undo-tree-id3325 . -1066) (undo-tree-id3326 . -1066) (undo-tree-id3327 . -1119) (undo-tree-id3328 . -1119) (undo-tree-id3329 . -1119) (undo-tree-id3330 . -1144) (undo-tree-id3331 . -1144) (undo-tree-id3332 . -1144) (undo-tree-id3333 . -1191) (undo-tree-id3334 . -1191) (undo-tree-id3335 . -1191) (undo-tree-id3336 . -1192) (undo-tree-id3337 . -1192) (undo-tree-id3338 . -1192) (undo-tree-id3339 . -1281) (undo-tree-id3340 . -1281) (undo-tree-id3341 . -1281) (undo-tree-id3342 . -1281) (undo-tree-id3343 . -1281) (undo-tree-id3344 . -1281) (undo-tree-id3345 . -1192) (undo-tree-id3346 . -1192) (undo-tree-id3347 . -1192) (undo-tree-id3348 . -1192) (undo-tree-id3349 . -1191) (undo-tree-id3350 . -1191) (undo-tree-id3351 . -1191) (undo-tree-id3352 . -1144) (undo-tree-id3353 . -1144) (undo-tree-id3354 . -1144) (undo-tree-id3355 . -1119) (undo-tree-id3356 . -1119) (undo-tree-id3357 . -1119) (undo-tree-id3358 . -1066) (undo-tree-id3359 . -1066) (undo-tree-id3360 . -1066) (undo-tree-id3361 . -998) (undo-tree-id3362 . -998) (undo-tree-id3363 . -998) (undo-tree-id3364 . -931) (undo-tree-id3365 . -931) (undo-tree-id3366 . -931) (undo-tree-id3367 . -858) (undo-tree-id3368 . -858) (undo-tree-id3369 . -858) (undo-tree-id3370 . -857) (undo-tree-id3371 . -857) (undo-tree-id3372 . -857) (undo-tree-id3373 . -780) (undo-tree-id3374 . -780) (undo-tree-id3375 . -780) (undo-tree-id3376 . -710) (undo-tree-id3377 . -710) (undo-tree-id3378 . -710) (undo-tree-id3379 . -709) (undo-tree-id3380 . -709) (undo-tree-id3381 . -709) (undo-tree-id3382 . -708) (undo-tree-id3383 . -708) (undo-tree-id3384 . -708) (undo-tree-id3385 . -660) (undo-tree-id3386 . -660) (undo-tree-id3387 . -660) (undo-tree-id3388 . -591) (undo-tree-id3389 . -591) (undo-tree-id3390 . -591) (undo-tree-id3391 . -529) (undo-tree-id3392 . -529) (undo-tree-id3393 . -529) (undo-tree-id3394 . -529) (undo-tree-id3395 . -407) (undo-tree-id3396 . -407) (undo-tree-id3397 . -407) (undo-tree-id3398 . -351) (undo-tree-id3399 . -351) (undo-tree-id3400 . -351) (undo-tree-id3401 . -290) (undo-tree-id3402 . -290) (undo-tree-id3403 . -290) (undo-tree-id3404 . -246) (undo-tree-id3405 . -246) (undo-tree-id3406 . -246) (undo-tree-id3407 . -156) (undo-tree-id3408 . -156) (undo-tree-id3409 . -156) (undo-tree-id3410 . -103) (undo-tree-id3411 . -103) (undo-tree-id3412 . -103) (undo-tree-id3413 . -102) (undo-tree-id3414 . -102) (undo-tree-id3415 . -102) (undo-tree-id3416 . -89) (undo-tree-id3417 . -89) (undo-tree-id3418 . -89) (undo-tree-id3419 . -290) (undo-tree-id3420 . -1281) (undo-tree-id3421 . -3) (undo-tree-id3422 . -3) (undo-tree-id3423 . -3) (undo-tree-id3424 . -3) (undo-tree-id3425 . -3) (undo-tree-id3426 . -3) (undo-tree-id3427 . -3) (undo-tree-id3428 . -92) (undo-tree-id3429 . -92) (undo-tree-id3430 . -92) (undo-tree-id3431 . -92) (undo-tree-id3432 . -92) (undo-tree-id3433 . -92) (undo-tree-id3434 . -102) (undo-tree-id3435 . -102) (undo-tree-id3436 . -102) (undo-tree-id3437 . -102) (undo-tree-id3438 . -106) (undo-tree-id3439 . -106) (undo-tree-id3440 . -106) (undo-tree-id3441 . -106) (undo-tree-id3442 . -106) (undo-tree-id3443 . -106) (undo-tree-id3444 . -106) (undo-tree-id3445 . -159) (undo-tree-id3446 . -159) (undo-tree-id3447 . -159) (undo-tree-id3448 . -249) (undo-tree-id3449 . -249) (undo-tree-id3450 . -249) (undo-tree-id3451 . -293) (undo-tree-id3452 . -293) (undo-tree-id3453 . -293) (undo-tree-id3454 . -354) (undo-tree-id3455 . -354) (undo-tree-id3456 . -354) (undo-tree-id3457 . -354) (undo-tree-id3458 . -410) (undo-tree-id3459 . -410) (undo-tree-id3460 . -410) (undo-tree-id3461 . -532) (undo-tree-id3462 . -532) (undo-tree-id3463 . -532) (undo-tree-id3464 . -594) (undo-tree-id3465 . -594) (undo-tree-id3466 . -594) (undo-tree-id3467 . -663) (undo-tree-id3468 . -663) (undo-tree-id3469 . -663) (undo-tree-id3470 . -708) (undo-tree-id3471 . -708) (undo-tree-id3472 . -708) (undo-tree-id3473 . -708) (undo-tree-id3474 . -709) (undo-tree-id3475 . -709) (undo-tree-id3476 . -709) (undo-tree-id3477 . -713) (undo-tree-id3478 . -713) (undo-tree-id3479 . -713) (undo-tree-id3480 . -713) (undo-tree-id3481 . -783) (undo-tree-id3482 . -783) (undo-tree-id3483 . -783) (undo-tree-id3484 . -857) (undo-tree-id3485 . -857) (undo-tree-id3486 . -857) (undo-tree-id3487 . -857) (undo-tree-id3488 . -857) (undo-tree-id3489 . -857) (undo-tree-id3490 . -857) (undo-tree-id3491 . -861) (undo-tree-id3492 . -861) (undo-tree-id3493 . -861) (undo-tree-id3494 . -861) (undo-tree-id3495 . -934) (undo-tree-id3496 . -934) (undo-tree-id3497 . -934) (undo-tree-id3498 . -1001) (undo-tree-id3499 . -1001) (undo-tree-id3500 . -1001) (undo-tree-id3501 . -1001) (undo-tree-id3502 . -1001) (undo-tree-id3503 . -1001) (undo-tree-id3504 . -1069) (undo-tree-id3505 . -1069) (undo-tree-id3506 . -1069) (undo-tree-id3507 . -1069) (undo-tree-id3508 . -1069) (undo-tree-id3509 . -1069) (undo-tree-id3510 . -1122) (undo-tree-id3511 . -1122) (undo-tree-id3512 . -1122) (undo-tree-id3513 . -1122) (undo-tree-id3514 . -1122) (undo-tree-id3515 . -1122) (undo-tree-id3516 . -1122) (undo-tree-id3517 . -1147) (undo-tree-id3518 . -1147) (undo-tree-id3519 . -1147) (undo-tree-id3520 . -1191) (undo-tree-id3521 . -1191) (undo-tree-id3522 . -1191) (undo-tree-id3523 . -1191) (undo-tree-id3524 . -1147) (undo-tree-id3525 . -1147) (undo-tree-id3526 . -1147) (undo-tree-id3527 . -1147) (undo-tree-id3528 . -1122) (undo-tree-id3529 . -1122) (undo-tree-id3530 . -1122) (undo-tree-id3531 . -1069) (undo-tree-id3532 . -1069) (undo-tree-id3533 . -1069) (undo-tree-id3534 . -1001) (undo-tree-id3535 . -1001) (undo-tree-id3536 . -1001) (undo-tree-id3537 . -934) (undo-tree-id3538 . -934) (undo-tree-id3539 . -934) (undo-tree-id3540 . -861) (undo-tree-id3541 . -861) (undo-tree-id3542 . -861) (undo-tree-id3543 . -857) (undo-tree-id3544 . -857) (undo-tree-id3545 . -857) (undo-tree-id3546 . -857) (undo-tree-id3547 . -783) (undo-tree-id3548 . -783) (undo-tree-id3549 . -783) (undo-tree-id3550 . -783) (undo-tree-id3551 . -713) (undo-tree-id3552 . -713) (undo-tree-id3553 . -713) (undo-tree-id3554 . -709) (undo-tree-id3555 . -709) (undo-tree-id3556 . -709) (undo-tree-id3557 . -709) (undo-tree-id3558 . -708) (undo-tree-id3559 . -708) (undo-tree-id3560 . -708) (undo-tree-id3561 . -663) (undo-tree-id3562 . -663) (undo-tree-id3563 . -663) (undo-tree-id3564 . -663) (undo-tree-id3565 . -594) (undo-tree-id3566 . -594) (undo-tree-id3567 . -594) (undo-tree-id3568 . -532) (undo-tree-id3569 . -532) (undo-tree-id3570 . -532) (undo-tree-id3571 . -410) (undo-tree-id3572 . -410) (undo-tree-id3573 . -410) (undo-tree-id3574 . -354) (undo-tree-id3575 . -354) (undo-tree-id3576 . -354) (undo-tree-id3577 . -293) (undo-tree-id3578 . -293) (undo-tree-id3579 . -293) (undo-tree-id3580 . -293) (undo-tree-id3581 . -249) (undo-tree-id3582 . -249) (undo-tree-id3583 . -249) (undo-tree-id3584 . -159) (undo-tree-id3585 . -159) (undo-tree-id3586 . -159) (undo-tree-id3587 . -106) (undo-tree-id3588 . -106) (undo-tree-id3589 . -106) (undo-tree-id3590 . -102) (undo-tree-id3591 . -102) (undo-tree-id3592 . -102) (undo-tree-id3593 . -102) (undo-tree-id3594 . -92) (undo-tree-id3595 . -92) (undo-tree-id3596 . -92) (undo-tree-id3597 . -92) (undo-tree-id3598 . -3) (undo-tree-id3599 . -3) (undo-tree-id3600 . -3) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -2) (undo-tree-id3604 . -2) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -89) (undo-tree-id3610 . -89) (undo-tree-id3611 . -89) (undo-tree-id3612 . -89) (undo-tree-id3613 . -89) (undo-tree-id3614 . -89) (undo-tree-id3615 . -89) (undo-tree-id3616 . -89) (undo-tree-id3617 . -102) (undo-tree-id3618 . -102) (undo-tree-id3619 . -102) (undo-tree-id3620 . -103) (undo-tree-id3621 . -103) (undo-tree-id3622 . -103) (undo-tree-id3623 . -156) (undo-tree-id3624 . -156) (undo-tree-id3625 . -156) (undo-tree-id3626 . -246) (undo-tree-id3627 . -246) (undo-tree-id3628 . -246) (undo-tree-id3629 . -290) (undo-tree-id3630 . -290) (undo-tree-id3631 . -290) (undo-tree-id3632 . -351) (undo-tree-id3633 . -351) (undo-tree-id3634 . -351) (undo-tree-id3635 . -407) (undo-tree-id3636 . -407) (undo-tree-id3637 . -407) (undo-tree-id3638 . -529) (undo-tree-id3639 . -529) (undo-tree-id3640 . -529) (undo-tree-id3641 . -591) (undo-tree-id3642 . -591) (undo-tree-id3643 . -591) (undo-tree-id3644 . -660) (undo-tree-id3645 . -660) (undo-tree-id3646 . -660) (undo-tree-id3647 . -708) (undo-tree-id3648 . -708) (undo-tree-id3649 . -708) (undo-tree-id3650 . -709) (undo-tree-id3651 . -709) (undo-tree-id3652 . -709) (undo-tree-id3653 . -710) (undo-tree-id3654 . -710) (undo-tree-id3655 . -710) (undo-tree-id3656 . -780) (undo-tree-id3657 . -780) (undo-tree-id3658 . -780) (undo-tree-id3659 . -857) (undo-tree-id3660 . -857) (undo-tree-id3661 . -857) (undo-tree-id3662 . -858) (undo-tree-id3663 . -858) (undo-tree-id3664 . -858) (undo-tree-id3665 . -931) (undo-tree-id3666 . -931) (undo-tree-id3667 . -931) (undo-tree-id3668 . -998) (undo-tree-id3669 . -998) (undo-tree-id3670 . -998) (undo-tree-id3671 . -1066) (undo-tree-id3672 . -1066) (undo-tree-id3673 . -1066) (undo-tree-id3674 . -1066) (undo-tree-id3675 . -1119) (undo-tree-id3676 . -1119) (undo-tree-id3677 . -1119) (undo-tree-id3678 . -1144) (undo-tree-id3679 . -1144) (undo-tree-id3680 . -1144) (undo-tree-id3681 . -1191) (undo-tree-id3682 . -1191) (undo-tree-id3683 . -1191) (undo-tree-id3684 . -1192) (undo-tree-id3685 . -1192) (undo-tree-id3686 . -1192) (undo-tree-id3687 . -1281) (undo-tree-id3688 . -1281) (undo-tree-id3689 . -1281) (undo-tree-id3690 . -1281) (undo-tree-id3691 . -1281) (undo-tree-id3692 . -1281) 13733) nil (26219 29294 879154 303000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12451) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1)) nil (26219 29294 878143 247000) 0 nil])
([nil nil ((14074 . 14078)) nil (26219 29294 876793 282000) 0 nil])
([nil nil ((14078 . 14079)) nil (26219 29294 876792 842000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14078) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) 14079) nil (26219 29294 876792 63000) 0 nil])
([nil nil ((#("hulpfunctie om te checken of the entry in dired een bestand is of een directory" 0 79 (face font-lock-comment-face fontified t)) . 13720) (undo-tree-id1874 . -79) (undo-tree-id1875 . -79) (undo-tree-id1876 . -79) (undo-tree-id1877 . -79) (undo-tree-id1878 . -79) (undo-tree-id1879 . -79) (undo-tree-id1880 . -79) (undo-tree-id1881 . -79) 13799) nil (26219 29294 876785 285000) 0 nil])
([nil nil ((#("in geval van een bestand, dat wordt weergegeven in een nieuwe window" 0 68 (face font-lock-comment-face fontified t)) . 13724) (undo-tree-id1866 . -68) (undo-tree-id1867 . -68) (undo-tree-id1868 . -68) (undo-tree-id1869 . -68) (undo-tree-id1870 . -68) (undo-tree-id1871 . -68) (undo-tree-id1872 . -68) (undo-tree-id1873 . -68) 13792) nil (26219 29294 876779 18000) 0 nil])
([nil nil ((13720 . 13724)) nil (26219 29294 876773 122000) 0 nil])
([nil nil ((13724 . 13725)) nil (26219 29294 876772 655000) 0 nil])
([nil nil ((13725 . 13733)) nil (26219 29294 876772 237000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -13730) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -13731) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -13732) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) 13733) nil (26219 29294 876769 792000) 0 nil])
([nil nil ((13730 . 13741)) nil (26219 29294 876723 188000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-comment-face fontified t)) . -13739) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -13740) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) 13741) nil (26219 29294 876721 736000) 0 nil])
([nil nil ((13739 . 13745)) nil (26219 29294 876695 746000) 0 nil])
([nil nil ((13745 . 13757)) nil (26219 29294 876695 236000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -13756) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) 13757) nil (26219 29294 876694 471000) 0 nil])
([nil nil ((13756 . 13767)) nil (26219 29294 876688 312000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -13763) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -13764) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -13765) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -13766) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) 13767) nil (26219 29294 876684 820000) 0 nil])
([nil nil ((13763 . 13779)) nil (26219 29294 876554 720000) 0 nil])
([nil nil ((13779 . 13784)) nil (26219 29294 876554 247000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -13783) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) 13784) nil (26219 29294 876553 480000) 0 nil])
([nil nil ((13785 . 13788) (13783 . 13786)) nil (26219 29294 876547 593000) 0 nil])
([nil nil ((13788 . 13789)) nil (26219 29294 876547 57000) 0 nil])
([nil nil ((13789 . 13792)) nil (26219 29294 876546 371000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-comment-face fontified t)) . -13791) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) 13792) nil (26219 29294 876545 477000) 0 nil])
([nil nil ((13791 . 13793)) nil (26219 29294 876538 246000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face fontified t)) . -13792) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) 13793) nil (26219 29294 876537 389000) 0 nil])
([nil nil ((13792 . 13798)) nil (26219 29294 876531 330000) 0 nil])
([nil nil ((13798 . 13799)) nil (26219 29294 876530 697000) 0 nil])
([nil nil ((13799 . 13802)) nil (26219 29294 876530 253000) 0 nil])
([nil nil ((13802 . 13803)) nil (26219 29294 876529 716000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -13802) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) 13803) nil (26219 29294 876528 864000) 0 nil])
([nil nil ((13794 . 13798) (13793 . 13795)) nil (26219 29294 876522 110000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -13797) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) 13798) nil (26219 29294 876521 6000) 0 nil])
([nil nil ((13797 . 13799)) nil (26219 29294 876515 283000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -13795) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -13796) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -13797) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -13798) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) 13799) nil (26219 29294 876511 89000) 0 nil])
([nil nil ((13795 . 13801)) nil (26219 29294 876409 760000) 0 nil])
([nil nil ((13801 . 13802)) nil (26219 29294 876409 278000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -13801) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) 13802) nil (26219 29294 876408 536000) 0 nil])
([nil nil ((13813 . 13820) (13811 . 13814)) nil (26219 29294 876402 104000) 0 nil])
([nil nil ((13820 . 13821)) nil (26219 29294 876401 419000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -13820) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 13821) nil (26219 29294 876400 681000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c r\") 'my-repeat-macro-to-end)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 13974) (undo-tree-id1396 . -54) (undo-tree-id1397 . -54) (undo-tree-id1398 . -54) (undo-tree-id1399 . -54) (undo-tree-id1400 . -54) (undo-tree-id1401 . -54) (undo-tree-id1402 . -54) (undo-tree-id1403 . -54) (undo-tree-id1404 . -54) (undo-tree-id1405 . -54) (undo-tree-id1406 . -54) (undo-tree-id1407 . -54) (undo-tree-id1408 . -54) (undo-tree-id1409 . -54) (undo-tree-id1410 . -54) (undo-tree-id1411 . -54) (undo-tree-id1412 . -54) (undo-tree-id1413 . -54) (undo-tree-id1414 . -54) (undo-tree-id1415 . -54) (undo-tree-id1416 . -54) (undo-tree-id1417 . -54) (undo-tree-id1418 . -54) (undo-tree-id1419 . -54) (undo-tree-id1420 . -54) (undo-tree-id1421 . -54) (undo-tree-id1422 . -54) (undo-tree-id1423 . -54) (undo-tree-id1424 . -54) (undo-tree-id1425 . -54) (undo-tree-id1426 . -54) (undo-tree-id1427 . -54) (undo-tree-id1428 . -54) (undo-tree-id1429 . -54) (undo-tree-id1430 . -54) (undo-tree-id1431 . -54) (undo-tree-id1432 . -54) (undo-tree-id1433 . -54) (undo-tree-id1434 . -54) (undo-tree-id1435 . -54) (undo-tree-id1436 . -54) (undo-tree-id1437 . -54) (undo-tree-id1438 . -54) (undo-tree-id1439 . -54) 14028) nil (26219 29294 876392 812000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13974) (undo-tree-id1350 . 1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1)) nil (26219 29294 876360 510000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13974) (undo-tree-id1332 . 1) (undo-tree-id1333 . 1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1)) nil (26219 29294 876327 89000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13974) (undo-tree-id1313 . 1) (undo-tree-id1314 . 1) (undo-tree-id1315 . 1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1)) nil (26219 29294 876313 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13974) (undo-tree-id1292 . 1) (undo-tree-id1293 . 1) (undo-tree-id1294 . 1) (undo-tree-id1295 . 1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1)) nil (26219 29294 876298 635000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13974) (undo-tree-id1258 . 1) (undo-tree-id1259 . 1) (undo-tree-id1260 . 1) (undo-tree-id1261 . 1) (undo-tree-id1262 . 1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1)) nil (26219 29294 876282 81000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -13949) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (#("e" 0 1 (fontified t)) . -13950) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (#("n" 0 1 (fontified t)) . -13951) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("d" 0 1 (fontified t)) . -13952) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("-" 0 1 (fontified t)) . -13953) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (#("a" 0 1 (fontified t)) . -13954) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (#("n" 0 1 (fontified t)) . -13955) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (#("d" 0 1 (fontified t)) . -13956) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) 13957) nil (26219 29294 876248 725000) 0 nil])
([nil nil ((13949 . 13950)) nil (26219 29294 875923 99000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13949) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 13950) nil (26219 29294 875922 174000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -13960) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("0" 0 1 (fontified t)) . -13961) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) 13962) nil (26219 29294 875914 303000) 0 nil])
([nil nil ((13960 . 13961)) nil (26219 29294 875888 224000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13960) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) 13961) nil (26219 29294 875887 12000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-function-name-face fontified t)) . -13904) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -13905) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -13906) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -13907) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified defer)) . -13908) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("-" 0 1 (face font-lock-function-name-face fontified defer)) . -13909) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified defer)) . -13910) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified defer)) . -13911) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("-" 0 1 (face font-lock-function-name-face fontified defer)) . -13912) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified defer)) . -13913) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -13914) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -13915) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) 13916) nil (26219 29294 875837 24000) 0 nil])
([nil nil ((13904 . 13905)) nil (26219 29294 873268 122000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -13904) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 13905) nil (26219 29294 873266 793000) 0 nil])
([nil nil ((13904 . 13909)) nil (26219 29294 873243 964000) 0 nil])
([nil nil ((13909 . 13910)) nil (26219 29294 873243 262000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-function-name-face fontified t)) . -13909) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 13910) nil (26219 29294 873239 852000) 0 nil])
([nil nil ((13953 . 13955) (t 26219 29294 897423 672000)) nil (26219 29482 246423 580000) 0 nil])
([nil nil ((13955 . 13956)) nil (26219 29482 246421 869000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -13955) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 13956) nil (26219 29482 246416 44000) 0 nil])
([nil nil ((13943 . 13946) (t 26219 29482 267466 259000)) nil (26219 29618 126442 897000) 0 nil])
([nil nil ((#("(kmacro-endcall-macro 0)" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t)) . 13935) (undo-tree-id1016 . -3) (undo-tree-id1017 . -3) (undo-tree-id1018 . -3) (undo-tree-id1019 . -3) (undo-tree-id1020 . -3) (undo-tree-id1021 . -3) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -5) (undo-tree-id1027 . -5) (undo-tree-id1028 . -5) (undo-tree-id1029 . -5) (undo-tree-id1030 . -5) (undo-tree-id1031 . -5) (undo-tree-id1032 . -5) (undo-tree-id1033 . -6) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (undo-tree-id1036 . -6) (undo-tree-id1037 . -7) (undo-tree-id1038 . -7) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -8) (undo-tree-id1042 . -8) (undo-tree-id1043 . -8) (undo-tree-id1044 . -8) (undo-tree-id1045 . -8) (undo-tree-id1046 . -8) (undo-tree-id1047 . -8) (undo-tree-id1048 . -8) (undo-tree-id1049 . -8) (undo-tree-id1050 . -8) (undo-tree-id1051 . -8) (undo-tree-id1052 . -8) (undo-tree-id1053 . -8) (undo-tree-id1054 . -8) (undo-tree-id1055 . -8) (undo-tree-id1056 . -9) (undo-tree-id1057 . -9) (undo-tree-id1058 . -9) (undo-tree-id1059 . -9) (undo-tree-id1060 . -9) (undo-tree-id1061 . -9) (undo-tree-id1062 . -9) (undo-tree-id1063 . -9) (undo-tree-id1064 . -9) (undo-tree-id1065 . -9) (undo-tree-id1066 . -9) (undo-tree-id1067 . -9) (undo-tree-id1068 . -9) (undo-tree-id1069 . -9) (undo-tree-id1070 . -9) (undo-tree-id1071 . -9) (undo-tree-id1072 . -11) (undo-tree-id1073 . -9) (undo-tree-id1074 . -9) (undo-tree-id1075 . -9) (undo-tree-id1076 . -9) (undo-tree-id1077 . -9) (undo-tree-id1078 . -10) (undo-tree-id1079 . -10) (undo-tree-id1080 . -10) (undo-tree-id1081 . -10) (undo-tree-id1082 . -10) (undo-tree-id1083 . -10) (undo-tree-id1084 . -10) (undo-tree-id1085 . -10) (undo-tree-id1086 . -11) (undo-tree-id1087 . -11) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -11) (undo-tree-id1094 . -11) (undo-tree-id1095 . -11) (undo-tree-id1096 . -11) (undo-tree-id1097 . -11) (undo-tree-id1098 . -11) (undo-tree-id1099 . -11) (undo-tree-id1100 . -11) (undo-tree-id1101 . -11) (undo-tree-id1102 . -11) (undo-tree-id1103 . -11) (undo-tree-id1104 . -11) (undo-tree-id1105 . -11) (undo-tree-id1106 . -11) (undo-tree-id1107 . -11) (undo-tree-id1108 . -11) (undo-tree-id1109 . -11) (undo-tree-id1110 . -11) (undo-tree-id1111 . -11) (undo-tree-id1112 . -24) (undo-tree-id1113 . -11) (undo-tree-id1114 . -11) (undo-tree-id1115 . -11) (undo-tree-id1116 . -11) (undo-tree-id1117 . -11) (undo-tree-id1118 . -11) (undo-tree-id1119 . -11) (undo-tree-id1120 . -11) (undo-tree-id1121 . -21) (undo-tree-id1122 . -21) (undo-tree-id1123 . -21) (undo-tree-id1124 . -21) (undo-tree-id1125 . -21) (undo-tree-id1126 . -21) (undo-tree-id1127 . -21) (undo-tree-id1128 . -21) (undo-tree-id1129 . -21) (undo-tree-id1130 . -20) (undo-tree-id1131 . -20) (undo-tree-id1132 . -20) (undo-tree-id1133 . -20) (undo-tree-id1134 . -20) (undo-tree-id1135 . -20) (undo-tree-id1136 . -20) (undo-tree-id1137 . -19) (undo-tree-id1138 . -19) (undo-tree-id1139 . -19) (undo-tree-id1140 . -19) (undo-tree-id1141 . -19) (undo-tree-id1142 . -19) (undo-tree-id1143 . -19) (undo-tree-id1144 . -18) (undo-tree-id1145 . -18) (undo-tree-id1146 . -18) (undo-tree-id1147 . -18) (undo-tree-id1148 . -17) (undo-tree-id1149 . -17) (undo-tree-id1150 . -17) (undo-tree-id1151 . -17) (undo-tree-id1152 . -16) (undo-tree-id1153 . -16) (undo-tree-id1154 . -16) (undo-tree-id1155 . -16) (undo-tree-id1156 . -15) (undo-tree-id1157 . -15) (undo-tree-id1158 . -15) (undo-tree-id1159 . -15) (undo-tree-id1160 . -14) (undo-tree-id1161 . -14) (undo-tree-id1162 . -14) (undo-tree-id1163 . -14) (undo-tree-id1164 . -13) (undo-tree-id1165 . -13) (undo-tree-id1166 . -13) (undo-tree-id1167 . -13) (undo-tree-id1168 . -13) (undo-tree-id1169 . -13) (undo-tree-id1170 . -13) (undo-tree-id1171 . -12) (undo-tree-id1172 . -12) (undo-tree-id1173 . -12) (undo-tree-id1174 . -12) (undo-tree-id1175 . -12) (undo-tree-id1176 . -12) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -21) (undo-tree-id1182 . -21) (undo-tree-id1183 . -21) (undo-tree-id1184 . -21) (undo-tree-id1185 . -21) (undo-tree-id1186 . -21) (undo-tree-id1187 . -21) (undo-tree-id1188 . -11) (undo-tree-id1189 . -11) (undo-tree-id1190 . -11) (undo-tree-id1191 . -11) (undo-tree-id1192 . -11) (undo-tree-id1193 . -11) (undo-tree-id1194 . -11) (undo-tree-id1195 . -11) (undo-tree-id1196 . -11) (undo-tree-id1197 . -11) (undo-tree-id1198 . -8) (undo-tree-id1199 . -8) (undo-tree-id1200 . -8) (undo-tree-id1201 . -8) (undo-tree-id1202 . -8) (undo-tree-id1203 . -8) (undo-tree-id1204 . -8) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -24) (undo-tree-id1210 . -24) (undo-tree-id1211 . -24) (undo-tree-id1212 . -24) (undo-tree-id1213 . -24) (undo-tree-id1214 . -24) (undo-tree-id1215 . -24) (undo-tree-id1216 . -24) (undo-tree-id1217 . -24) 13959) nil (26219 29657 341022 227000) 0 nil] [nil nil ((13926 . 13957) (#("ive)
    (kmacro-end" 0 3 (face font-lock-keyword-face fontified t) 3 4 (face (rainbow-delimiters-depth-2-face) fontified t) 4 5 (fontified t) 5 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 20 (fontified t)) . -13926) (undo-tree-id369 . -17) (undo-tree-id370 . -12) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -13) (undo-tree-id377 . -13) (undo-tree-id378 . -13) (undo-tree-id379 . -13) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -15) (undo-tree-id388 . -15) (undo-tree-id389 . -15) (undo-tree-id390 . -15) (undo-tree-id391 . -16) (undo-tree-id392 . -16) (undo-tree-id393 . -16) (undo-tree-id394 . -16) (undo-tree-id395 . -17) (undo-tree-id396 . -17) (undo-tree-id397 . -17) (undo-tree-id398 . -17) (undo-tree-id399 . -17) (undo-tree-id400 . -17) (undo-tree-id401 . -17) (undo-tree-id402 . -17) (undo-tree-id403 . -17) (undo-tree-id404 . -17) (undo-tree-id405 . -17) (undo-tree-id406 . -17) (undo-tree-id407 . -17) (undo-tree-id408 . -17) (undo-tree-id409 . -17) (undo-tree-id410 . -18) (undo-tree-id411 . -18) (undo-tree-id412 . -18) (undo-tree-id413 . -18) (undo-tree-id414 . -18) (undo-tree-id415 . -18) (undo-tree-id416 . -18) (undo-tree-id417 . -18) (undo-tree-id418 . -18) (undo-tree-id419 . -18) (undo-tree-id420 . -18) (undo-tree-id421 . -18) (undo-tree-id422 . -18) (undo-tree-id423 . -18) (undo-tree-id424 . -18) (undo-tree-id425 . -18) (undo-tree-id426 . -20) (undo-tree-id427 . -18) (undo-tree-id428 . -18) (undo-tree-id429 . -18) (undo-tree-id430 . -18) (undo-tree-id431 . -18) (undo-tree-id432 . -19) (undo-tree-id433 . -19) (undo-tree-id434 . -19) (undo-tree-id435 . -19) (undo-tree-id436 . -19) (undo-tree-id437 . -19) (undo-tree-id438 . -19) (undo-tree-id439 . -19) (undo-tree-id440 . -20) (undo-tree-id441 . -20) (undo-tree-id442 . -20) (undo-tree-id443 . -20) (undo-tree-id444 . -20) (undo-tree-id445 . -20) (undo-tree-id446 . -20) (undo-tree-id447 . -20) (undo-tree-id448 . -20) (undo-tree-id449 . -20) (undo-tree-id450 . -20) (undo-tree-id451 . -20) (undo-tree-id452 . -20) (undo-tree-id453 . -20) (undo-tree-id454 . -20) (undo-tree-id455 . -20) (undo-tree-id456 . -20) (undo-tree-id457 . -20) (undo-tree-id458 . -20) (undo-tree-id459 . -20) (undo-tree-id460 . -20) (undo-tree-id461 . -20) (undo-tree-id462 . -20) (undo-tree-id463 . -20) (undo-tree-id464 . -20) (undo-tree-id465 . -20) (undo-tree-id466 . -20) (undo-tree-id467 . -5) (undo-tree-id468 . -20) (undo-tree-id469 . -20) (undo-tree-id470 . -20) (undo-tree-id471 . -20) (undo-tree-id472 . -20) (undo-tree-id473 . -20) (undo-tree-id474 . -20) (undo-tree-id475 . -20) 13946) ((13926 . 13946) (#("kmacro-end-or-call-macro-repeat" 0 31 (fontified t)) . 13926) (undo-tree-id503 . -31) (undo-tree-id504 . -31) (undo-tree-id505 . -31) (undo-tree-id506 . -31) (undo-tree-id507 . -31) (undo-tree-id508 . -31) (undo-tree-id509 . -31) (undo-tree-id510 . -31) (undo-tree-id511 . -31) (undo-tree-id512 . -31) (undo-tree-id513 . -31) (undo-tree-id514 . -31) (undo-tree-id515 . -31) (undo-tree-id516 . -31) (undo-tree-id517 . -31) (undo-tree-id518 . -31) (undo-tree-id519 . -31) (undo-tree-id520 . -31) (undo-tree-id521 . -31) (undo-tree-id522 . -31) (undo-tree-id523 . -31) (undo-tree-id524 . -31) (undo-tree-id525 . -31) (undo-tree-id526 . -31) (undo-tree-id527 . -31) (undo-tree-id528 . -31) (undo-tree-id529 . -31) (undo-tree-id530 . -31) (undo-tree-id531 . -31) (undo-tree-id532 . -31) (undo-tree-id533 . -31) (undo-tree-id534 . -31) (undo-tree-id535 . -31) (undo-tree-id536 . -31) (undo-tree-id537 . -31) (undo-tree-id538 . -31) (undo-tree-id539 . -31) (undo-tree-id540 . -31) (undo-tree-id541 . -31) (undo-tree-id542 . -31)) (26219 29617 766090 162000) 0 nil])
([nil nil ((13936 . 13937) 13935) nil (26219 29657 340858 366000) 0 nil])
([nil nil ((13957 . 13958)) ((#("f" 0 1 (fontified t)) . 13957) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1)) (26219 29617 412200 64000) 0 nil])
([nil nil ((13931 . 13935) (13931 . 13932)) nil (26219 29657 340857 846000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13957) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 13958) ((13957 . 13958)) (26219 29617 28700 394000) 0 nil])
([nil nil ((13935 . 13937)) nil (26219 29657 340857 278000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -13957) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("a" 0 1 (fontified t)) . -13958) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("l" 0 1 (fontified defer)) . -13959) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("l" 0 1 (fontified defer)) . -13960) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("-" 0 1 (fontified defer)) . -13961) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("m" 0 1 (fontified defer)) . -13962) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("a" 0 1 (fontified defer)) . -13963) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("c" 0 1 (fontified t)) . -13964) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("r" 0 1 (fontified t)) . -13965) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("o" 0 1 (fontified t)) . -13966) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 13967) ((13957 . 13967)) (26219 29616 623874 320000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -13935) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (#("m" 0 1 (fontified t)) . -13936) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) 13937) nil (26219 29657 340855 78000) 0 nil])
([nil nil ((13957 . 13958)) ((#("f" 0 1 (fontified defer)) . 13957) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1)) (26219 29616 617171 588000) 0 nil])
([nil nil ((13936 . 13940) (13935 . 13937)) nil (26219 29657 340801 269000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13957) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 13958) ((13957 . 13958)) (26219 29616 615023 715000) 0 nil])
([nil nil ((13940 . 13945)) nil (26219 29657 340800 650000) 0 nil])
nil
([nil nil ((13936 . 13967) (#("kmacro-en" 0 9 (fontified t)) . -13936) (undo-tree-id785 . -9) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -3) (undo-tree-id822 . -3) (undo-tree-id823 . -3) (undo-tree-id824 . -3) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -3) (undo-tree-id829 . -3) (undo-tree-id830 . -3) (undo-tree-id831 . -3) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (undo-tree-id861 . -6) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -7) (undo-tree-id874 . -7) (undo-tree-id875 . -7) (undo-tree-id876 . -7) (undo-tree-id877 . -7) (undo-tree-id878 . -7) (undo-tree-id879 . -7) (undo-tree-id880 . -7) (undo-tree-id881 . -7) (undo-tree-id882 . -7) (undo-tree-id883 . -7) (undo-tree-id884 . -8) (undo-tree-id885 . -8) (undo-tree-id886 . -8) (undo-tree-id887 . -8) (undo-tree-id888 . -8) (undo-tree-id889 . -8) (undo-tree-id890 . -8) (undo-tree-id891 . -8) (undo-tree-id892 . -8) (undo-tree-id893 . -8) (undo-tree-id894 . -8) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (undo-tree-id897 . -9) (undo-tree-id898 . -9) (undo-tree-id899 . -9) (undo-tree-id900 . -9) (undo-tree-id901 . -9) (undo-tree-id902 . -9) (undo-tree-id903 . -9) (undo-tree-id904 . -9) (undo-tree-id905 . -9) (undo-tree-id906 . -9) (undo-tree-id907 . -9) (undo-tree-id908 . -9) (undo-tree-id909 . -9) (undo-tree-id910 . -9) (undo-tree-id911 . -9) (undo-tree-id912 . -9) (undo-tree-id913 . -9) (undo-tree-id914 . -9) (undo-tree-id915 . -9) (undo-tree-id916 . -9) (undo-tree-id917 . -9) (undo-tree-id918 . -9) (undo-tree-id919 . -9) (undo-tree-id920 . -9) (undo-tree-id921 . -9) (undo-tree-id922 . -9) (undo-tree-id923 . -9) (undo-tree-id924 . -9) (undo-tree-id925 . -9) (undo-tree-id926 . -9) (undo-tree-id927 . -9) (undo-tree-id928 . -9) (undo-tree-id929 . -9) (undo-tree-id930 . -9) (undo-tree-id931 . -9) (undo-tree-id932 . -9) (undo-tree-id933 . -9) (undo-tree-id934 . -9) (undo-tree-id935 . -9) (undo-tree-id936 . -9) (undo-tree-id937 . -9) (undo-tree-id938 . -9) (undo-tree-id939 . -9) (undo-tree-id940 . -9) (undo-tree-id941 . -9) (undo-tree-id942 . -9) (undo-tree-id943 . -9) (undo-tree-id944 . -9) (undo-tree-id945 . -9) 13945) nil (26219 29657 340796 461000) 0 nil])
([nil nil ((13967 . 13969)) nil (26219 29657 339519 193000) 0 nil])
([nil nil ((13969 . 13970)) nil (26219 29657 339518 750000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -13969) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) 13970) nil (26219 29657 339517 594000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 13970) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (#("
" 0 1 (fontified t)) . -13970) (undo-tree-id773 . -1) 13976) nil (26219 29657 339501 402000) 0 nil])
([nil nil ((13973 . 13980) (t 26219 29657 360443 144000)) nil (26219 33705 355000 961000) 0 nil])
([nil nil ((13980 . 13981)) nil (26219 33705 355000 388000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -13980) (undo-tree-id3 . -1) 13981) nil (26219 33705 354999 818000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14835 . 14836) (nil fontified nil 14835 . 14836) (nil fontified nil 14834 . 14835) (nil fontified nil 14833 . 14834) (nil fontified nil 14832 . 14833) (nil fontified nil 14831 . 14832) (nil fontified nil 14820 . 14831) (nil fontified nil 14819 . 14820) (nil fontified nil 14810 . 14819) (nil fontified nil 14809 . 14810) (nil fontified nil 14804 . 14809) (nil fontified nil 14803 . 14804) (nil fontified nil 14802 . 14803) (nil fontified nil 14785 . 14802) (nil fontified nil 14784 . 14785) (nil fontified nil 14774 . 14784) (nil fontified nil 14773 . 14774) (nil fontified nil 14768 . 14773) (nil fontified nil 14767 . 14768) (nil fontified nil 14716 . 14767) (nil fontified nil 14715 . 14716) (nil fontified nil 14710 . 14715) (nil fontified nil 14709 . 14710) (nil fontified nil 14708 . 14709) (nil fontified nil 14707 . 14708) (nil fontified nil 14696 . 14707) (nil fontified nil 14695 . 14696) (nil fontified nil 14694 . 14695) (nil fontified nil 14693 . 14694) (nil fontified nil 14676 . 14693) (nil fontified nil 14675 . 14676) (nil fontified nil 14662 . 14675) (nil fontified nil 14661 . 14662) (nil fontified nil 14637 . 14661) (nil fontified nil 14633 . 14637) (nil fontified nil 14632 . 14633) (nil fontified nil 14627 . 14632) (nil fontified nil 14626 . 14627) (nil fontified nil 14620 . 14626) (nil fontified nil 14614 . 14620) (nil fontified nil 14596 . 14614) (nil fontified nil 14595 . 14596) (nil fontified nil 14590 . 14595) (nil fontified nil 14589 . 14590) (nil fontified nil 14588 . 14589) (nil fontified nil 14587 . 14588) (nil fontified nil 14553 . 14587) (nil fontified nil 14552 . 14553) (nil fontified nil 14542 . 14552) (nil fontified nil 14541 . 14542) (nil fontified nil 14534 . 14541) (nil fontified nil 14533 . 14534) (nil fontified nil 14532 . 14533) (nil fontified nil 14528 . 14532) (nil fontified nil 14527 . 14528) (nil fontified nil 14493 . 14527) (nil fontified nil 14492 . 14493) (nil fontified nil 14489 . 14492) (nil fontified nil 14488 . 14489) (nil fontified nil 14472 . 14488) (nil fontified nil 14471 . 14472) (nil fontified nil 14465 . 14471) (nil fontified nil 14464 . 14465) (nil fontified nil 14428 . 14464) (nil fontified nil 14427 . 14428) (nil fontified nil 14424 . 14427) (nil fontified nil 14423 . 14424) (nil fontified nil 14407 . 14423) (nil fontified nil 14406 . 14407) (nil fontified nil 14370 . 14406) (nil fontified nil 14369 . 14370) (nil fontified nil 14330 . 14369) (nil fontified nil 14327 . 14330) (nil fontified nil 14326 . 14327) (nil fontified nil 14325 . 14326) (nil fontified nil 14321 . 14325) (nil fontified nil 14320 . 14321) (nil fontified nil 14315 . 14320) (nil fontified nil 14314 . 14315) (nil fontified nil 14313 . 14314) (nil fontified nil 14312 . 14313) (nil fontified nil 14302 . 14312) (nil fontified nil 14301 . 14302) (nil fontified nil 14297 . 14301) (nil fontified nil 14296 . 14297) (nil fontified nil 14287 . 14296) (nil fontified nil 14286 . 14287) (nil fontified nil 14285 . 14286) (nil fontified nil 14269 . 14285) (nil fontified nil 14268 . 14269) (nil fontified nil 14262 . 14268) (nil fontified nil 14261 . 14262) (nil fontified nil 14260 . 14261) (nil fontified nil 14259 . 14260) (nil fontified nil 14256 . 14259) (nil fontified nil 14255 . 14256) (nil fontified nil 14252 . 14255) (nil fontified nil 14251 . 14252) (nil fontified nil 14250 . 14251) (nil fontified nil 14232 . 14250) (nil fontified nil 14231 . 14232) (nil fontified nil 14226 . 14231) (nil fontified nil 14225 . 14226) (nil fontified nil 14220 . 14225) (nil fontified nil 14219 . 14220) (nil fontified nil 14207 . 14219) (nil fontified nil 14206 . 14207) (nil fontified nil 14205 . 14206) (nil fontified nil 14199 . 14205) (nil fontified nil 14198 . 14199) (nil fontified nil 14195 . 14198) (nil fontified nil 14194 . 14195) (nil fontified nil 14183 . 14194) (nil fontified nil 14182 . 14183) (nil fontified nil 14179 . 14182) (nil fontified nil 14117 . 14179) (nil fontified nil 14114 . 14117) (nil fontified nil 14113 . 14114) (nil fontified nil 14112 . 14113) (nil fontified nil 14111 . 14112) (nil fontified nil 14082 . 14111) (nil fontified nil 14081 . 14082) (nil fontified nil 14076 . 14081) (nil fontified nil 14075 . 14076) (nil fontified nil 14073 . 14075) (nil fontified nil 14072 . 14073) (nil fontified nil 14014 . 14072) (nil fontified nil 14007 . 14014) (nil fontified nil 13985 . 14007) (nil fontified nil 13984 . 13985) (nil fontified nil 13978 . 13984) (nil fontified nil 13977 . 13978) (13977 . 14836)) nil (26219 33705 354996 113000) 0 nil])
([nil nil ((#("(defun my-repeat-macro ()
    (interactive)
    (kmacro-end-or-call-macro-repeat 0))

" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 22 (face font-lock-function-name-face fontified t) 22 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 25 (face (rainbow-delimiters-depth-2-face) fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 42 (face font-lock-keyword-face fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-2-face) fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) fontified t) 84 86 (fontified t)) . 13887) (undo-tree-id1 . -86) (undo-tree-id2 . -86) 13973) nil (26219 33705 354986 538000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13887)) nil (26219 33705 354984 42000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13887)) nil (26219 33705 354983 237000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13887)) nil (26219 33705 354982 408000) 0 nil])
([nil nil ((#(" hulpfunctie om een macro te repeaten nadat je 1 hebt aangemaakt (shift r (starten)/ shift p (stoppen))" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 103 (face font-lock-comment-face fontified t)) . 13719) (undo-tree-id0 . -103) 13822) nil (26219 33705 354979 467000) 0 nil])
([nil nil ((#("(defvar my-word-region-overlay nil
  \"Overlay for highlighting the current word in the region.\")

(defun highlight-next-word-in-region ()
  \"Move to the next word in the active region and highlight it.\"
  (interactive)
  (unless (use-region-p)
    (error \"No active region\"))
  (let ((start (region-beginning))
        (end (region-end)))
    (when (and my-word-region-overlay
               (overlay-start my-word-region-overlay)
               (>= (overlay-start my-word-region-overlay) start)
               (<= (overlay-end my-word-region-overlay) end))
      (goto-char (overlay-end my-word-region-overlay)))
    (re-search-forward \"\\\\w+\" end t)
    (setq my-word-region-overlay (make-overlay (match-beginning 0) (match-end 0)))
    (overlay-put my-word-region-overlay 'face 'highlight)
    (goto-char (match-beginning 0))
    (set-mark (match-end 0))))


" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 30 (face font-lock-variable-name-face fontified t) 30 37 (fontified t) 37 95 (face font-lock-doc-face fontified t) 95 96 (face (rainbow-delimiters-depth-1-face) fontified t) 96 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) fontified t) 99 104 (face font-lock-keyword-face fontified t) 104 105 (fontified t) 105 118 (face font-lock-function-name-face fontified t) 118 134 (face font-lock-function-name-face fontified t) 134 135 (fontified t) 135 136 (face (rainbow-delimiters-depth-2-face) fontified t) 136 137 (face (rainbow-delimiters-depth-2-face) fontified t) 137 138 (fontified t) 138 140 (fontified t) 140 202 (face font-lock-doc-face fontified t) 202 203 (fontified t) 203 205 (fontified t) 205 206 (face (rainbow-delimiters-depth-2-face) fontified t) 206 217 (face font-lock-keyword-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 219 (fontified t) 219 221 (fontified t) 221 222 (face (rainbow-delimiters-depth-2-face) fontified t) 222 228 (face font-lock-keyword-face fontified t) 228 229 (fontified t) 229 230 (face (rainbow-delimiters-depth-3-face) fontified t) 230 242 (fontified t) 242 243 (face (rainbow-delimiters-depth-3-face) fontified t) 243 248 (fontified t) 248 249 (face (rainbow-delimiters-depth-3-face) fontified t) 249 254 (face font-lock-warning-face fontified t) 254 255 (fontified t) 255 273 (face font-lock-string-face fontified t) 273 274 (face (rainbow-delimiters-depth-3-face) fontified t) 274 275 (face (rainbow-delimiters-depth-2-face) fontified t) 275 278 (fontified t) 278 279 (face (rainbow-delimiters-depth-2-face) fontified t) 279 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-3-face) fontified t) 284 285 (face (rainbow-delimiters-depth-4-face) fontified t) 285 291 (fontified t) 291 292 (face (rainbow-delimiters-depth-5-face) fontified t) 292 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-5-face) fontified t) 309 310 (face (rainbow-delimiters-depth-4-face) fontified t) 310 319 (fontified t) 319 320 (face (rainbow-delimiters-depth-4-face) fontified t) 320 324 (fontified t) 324 325 (face (rainbow-delimiters-depth-5-face) fontified t) 325 335 (fontified t) 335 336 (face (rainbow-delimiters-depth-5-face) fontified t) 336 337 (face (rainbow-delimiters-depth-4-face) fontified t) 337 338 (face (rainbow-delimiters-depth-3-face) fontified t) 338 343 (fontified t) 343 344 (face (rainbow-delimiters-depth-3-face) fontified t) 344 348 (face font-lock-keyword-face fontified t) 348 349 (fontified t) 349 350 (face (rainbow-delimiters-depth-4-face) fontified t) 350 353 (face font-lock-keyword-face fontified t) 353 392 (fontified t) 392 393 (face (rainbow-delimiters-depth-5-face) fontified t) 393 429 (fontified t) 429 430 (face (rainbow-delimiters-depth-5-face) fontified t) 430 446 (fontified t) 446 447 (face (rainbow-delimiters-depth-5-face) fontified t) 447 450 (fontified t) 450 451 (face (rainbow-delimiters-depth-6-face) fontified t) 451 487 (fontified t) 487 488 (face (rainbow-delimiters-depth-6-face) fontified t) 488 494 (fontified t) 494 495 (face (rainbow-delimiters-depth-5-face) fontified t) 495 511 (fontified t) 511 512 (face (rainbow-delimiters-depth-5-face) fontified t) 512 515 (fontified t) 515 516 (face (rainbow-delimiters-depth-6-face) fontified t) 516 550 (fontified t) 550 551 (face (rainbow-delimiters-depth-6-face) fontified t) 551 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-5-face) fontified t) 556 557 (face (rainbow-delimiters-depth-4-face) fontified t) 557 564 (fontified t) 564 565 (face (rainbow-delimiters-depth-4-face) fontified t) 565 575 (fontified t) 575 576 (face (rainbow-delimiters-depth-5-face) fontified t) 576 610 (fontified t) 610 611 (face (rainbow-delimiters-depth-5-face) fontified t) 611 612 (face (rainbow-delimiters-depth-4-face) fontified t) 612 613 (face (rainbow-delimiters-depth-3-face) fontified t) 613 618 (fontified t) 618 619 (face (rainbow-delimiters-depth-3-face) fontified t) 619 637 (fontified t) 637 643 (face font-lock-string-face fontified t) 643 649 (fontified t) 649 650 (face (rainbow-delimiters-depth-3-face) fontified t) 650 655 (fontified t) 655 656 (face (rainbow-delimiters-depth-3-face) fontified t) 656 660 (face font-lock-keyword-face fontified t) 660 684 (fontified t) 684 685 (face (rainbow-delimiters-depth-4-face) fontified t) 685 698 (fontified t) 698 699 (face (rainbow-delimiters-depth-5-face) fontified t) 699 716 (fontified t) 716 717 (face (rainbow-delimiters-depth-5-face) fontified t) 717 718 (fontified t) 718 719 (face (rainbow-delimiters-depth-5-face) fontified t) 719 730 (fontified t) 730 731 (face (rainbow-delimiters-depth-5-face) fontified t) 731 732 (face (rainbow-delimiters-depth-4-face) fontified t) 732 733 (face (rainbow-delimiters-depth-3-face) fontified t) 733 738 (fontified t) 738 739 (face (rainbow-delimiters-depth-3-face) fontified t) 739 790 (fontified t) 790 791 (face (rainbow-delimiters-depth-3-face) fontified t) 791 796 (fontified t) 796 797 (face (rainbow-delimiters-depth-3-face) fontified t) 797 807 (fontified t) 807 808 (face (rainbow-delimiters-depth-4-face) fontified t) 808 825 (fontified t) 825 826 (face (rainbow-delimiters-depth-4-face) fontified t) 826 827 (face (rainbow-delimiters-depth-3-face) fontified t) 827 832 (fontified t) 832 833 (face (rainbow-delimiters-depth-3-face) fontified t) 833 842 (fontified t) 842 843 (face (rainbow-delimiters-depth-4-face) fontified t) 843 854 (fontified t) 854 855 (face (rainbow-delimiters-depth-4-face) fontified t) 855 856 (face (rainbow-delimiters-depth-3-face) fontified t) 856 857 (face (rainbow-delimiters-depth-2-face) fontified t) 857 858 (face (rainbow-delimiters-depth-1-face) fontified t) 858 861 (fontified t)) . 13785) (undo-tree-id11 . -861) (undo-tree-id12 . -203) (undo-tree-id13 . -97) (undo-tree-id14 . -97) (undo-tree-id15 . -97) (undo-tree-id16 . -859) (undo-tree-id17 . -859) (undo-tree-id18 . -859) (undo-tree-id19 . -859) (undo-tree-id20 . -861) (undo-tree-id21 . -861) (undo-tree-id22 . -861) (undo-tree-id23 . -860) (undo-tree-id24 . -860) (undo-tree-id25 . -860) (undo-tree-id26 . -859) (undo-tree-id27 . -859) (undo-tree-id28 . -859) (undo-tree-id29 . -828) (undo-tree-id30 . -828) (undo-tree-id31 . -828) (undo-tree-id32 . -792) (undo-tree-id33 . -792) (undo-tree-id34 . -792) (undo-tree-id35 . -734) (undo-tree-id36 . -734) (undo-tree-id37 . -734) (undo-tree-id38 . -651) (undo-tree-id39 . -651) (undo-tree-id40 . -651) (undo-tree-id41 . -614) (undo-tree-id42 . -614) (undo-tree-id43 . -614) (undo-tree-id44 . -558) (undo-tree-id45 . -558) (undo-tree-id46 . -558) (undo-tree-id47 . -496) (undo-tree-id48 . -496) (undo-tree-id49 . -496) (undo-tree-id50 . -431) (undo-tree-id51 . -431) (undo-tree-id52 . -431) (undo-tree-id53 . -377) (undo-tree-id54 . -377) (undo-tree-id55 . -377) (undo-tree-id56 . -339) (undo-tree-id57 . -339) (undo-tree-id58 . -339) (undo-tree-id59 . -311) (undo-tree-id60 . -311) (undo-tree-id61 . -311) (undo-tree-id62 . -276) (undo-tree-id63 . -276) (undo-tree-id64 . -276) (undo-tree-id65 . -244) (undo-tree-id66 . -244) (undo-tree-id67 . -244) (undo-tree-id68 . -219) (undo-tree-id69 . -219) (undo-tree-id70 . -219) (undo-tree-id71 . -203) (undo-tree-id72 . -203) (undo-tree-id73 . -203) (undo-tree-id74 . -203) (undo-tree-id75 . -138) (undo-tree-id76 . -138) (undo-tree-id77 . -138) (undo-tree-id78 . -98) (undo-tree-id79 . -98) (undo-tree-id80 . -98) (undo-tree-id81 . -97) (undo-tree-id82 . -97) (undo-tree-id83 . -97) (undo-tree-id84 . -35) (undo-tree-id85 . -35) (undo-tree-id86 . -35) (undo-tree-id87 . -35) (undo-tree-id88 . -35) (undo-tree-id89 . -35) (undo-tree-id90 . -35) (undo-tree-id91 . -35) (undo-tree-id92 . -35) (undo-tree-id93 . -35) (undo-tree-id94 . -35) (undo-tree-id95 . -35) (undo-tree-id96 . -35) (undo-tree-id97 . -35) (undo-tree-id98 . -97) (undo-tree-id99 . -97) (undo-tree-id100 . -97) (undo-tree-id101 . -98) (undo-tree-id102 . -98) (undo-tree-id103 . -98) (undo-tree-id104 . -138) (undo-tree-id105 . -138) (undo-tree-id106 . -138) (undo-tree-id107 . -203) (undo-tree-id108 . -203) (undo-tree-id109 . -203) (undo-tree-id110 . -219) (undo-tree-id111 . -219) (undo-tree-id112 . -219) (undo-tree-id113 . -244) (undo-tree-id114 . -244) (undo-tree-id115 . -244) (undo-tree-id116 . -276) (undo-tree-id117 . -276) (undo-tree-id118 . -276) (undo-tree-id119 . -311) (undo-tree-id120 . -311) (undo-tree-id121 . -311) (undo-tree-id122 . -339) (undo-tree-id123 . -339) (undo-tree-id124 . -339) (undo-tree-id125 . -377) (undo-tree-id126 . -377) (undo-tree-id127 . -377) (undo-tree-id128 . -431) (undo-tree-id129 . -431) (undo-tree-id130 . -431) (undo-tree-id131 . -496) (undo-tree-id132 . -496) (undo-tree-id133 . -496) (undo-tree-id134 . -558) (undo-tree-id135 . -558) (undo-tree-id136 . -558) (undo-tree-id137 . -614) (undo-tree-id138 . -614) (undo-tree-id139 . -614) (undo-tree-id140 . -651) (undo-tree-id141 . -651) (undo-tree-id142 . -651) (undo-tree-id143 . -734) (undo-tree-id144 . -734) (undo-tree-id145 . -734) (undo-tree-id146 . -792) (undo-tree-id147 . -792) (undo-tree-id148 . -792) (undo-tree-id149 . -828) (undo-tree-id150 . -828) (undo-tree-id151 . -828) (undo-tree-id152 . -828) (undo-tree-id153 . -859) (undo-tree-id154 . -859) (undo-tree-id155 . -859) (undo-tree-id156 . -860) (undo-tree-id157 . -860) (undo-tree-id158 . -860) (undo-tree-id159 . -861) (undo-tree-id160 . -861) (undo-tree-id161 . -861) (undo-tree-id162 . -861) (undo-tree-id163 . -861) (undo-tree-id164 . -861) (undo-tree-id165 . -861) (undo-tree-id166 . -861) (undo-tree-id167 . -861) 14646 (t 26219 33705 375816 381000)) nil (26219 33798 631033 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14625 . 14626) (nil fontified nil 13784 . 14626) (13784 . 14626)) nil (26219 33798 630237 771000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c n\") 'highlight-next-word-in-region)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14564) (undo-tree-id0 . -61) (undo-tree-id1 . -61) (undo-tree-id2 . -61) (undo-tree-id3 . -61) (undo-tree-id4 . -61) (undo-tree-id5 . -61) (undo-tree-id6 . -61) (undo-tree-id7 . -61) (undo-tree-id8 . -61) (undo-tree-id9 . -61) (undo-tree-id10 . -61) 14625) nil (26219 33798 630233 344000) 0 nil])
([nil nil ((#("(defvar my-word-region-overlay nil
  \"Overlay for highlighting the current word in the region.\")

(defun highlight-next-word-in-region ()
  \"Move to the next word in the active region and highlight it.\"
  (interactive)
  (unless (use-region-p)
    (error \"No active region\"))
  (let ((start (region-beginning))
        (end (region-end)))
    (when my-word-region-overlay
      (delete-overlay my-word-region-overlay))
    (goto-char (point))
    (if (re-search-forward \"\\\\w+\" end t)
        (progn
          (setq my-word-region-overlay (make-overlay (match-beginning 0) (match-end 0)))
          (overlay-put my-word-region-overlay 'face 'highlight)
          (goto-char (match-beginning 0))
          (set-mark (match-end 0)))
      (message \"No more words in the region\"))))


" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 30 (face font-lock-variable-name-face fontified t) 30 35 (fontified t) 35 37 (fontified t) 37 95 (face font-lock-doc-face fontified t) 95 96 (face (rainbow-delimiters-depth-1-face) fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) fontified t) 99 104 (face font-lock-keyword-face fontified t) 104 105 (fontified t) 105 134 (face font-lock-function-name-face fontified t) 134 135 (fontified t) 135 136 (face (rainbow-delimiters-depth-2-face) fontified t) 136 137 (face (rainbow-delimiters-depth-2-face) fontified t) 137 140 (fontified t) 140 202 (face font-lock-doc-face fontified t) 202 205 (fontified t) 205 206 (face (rainbow-delimiters-depth-2-face) fontified t) 206 217 (face font-lock-keyword-face fontified t) 217 218 (face (rainbow-delimiters-depth-2-face) fontified t) 218 221 (fontified t) 221 222 (face (rainbow-delimiters-depth-2-face) fontified t) 222 228 (face font-lock-keyword-face fontified t) 228 229 (fontified t) 229 230 (face (rainbow-delimiters-depth-3-face) fontified t) 230 242 (fontified t) 242 243 (face (rainbow-delimiters-depth-3-face) fontified t) 243 248 (fontified t) 248 249 (face (rainbow-delimiters-depth-3-face) fontified t) 249 254 (face font-lock-warning-face fontified t) 254 255 (fontified t) 255 273 (face font-lock-string-face fontified t) 273 274 (face (rainbow-delimiters-depth-3-face) fontified t) 274 275 (face (rainbow-delimiters-depth-2-face) fontified t) 275 278 (fontified t) 278 279 (face (rainbow-delimiters-depth-2-face) fontified t) 279 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-3-face) fontified t) 284 285 (face (rainbow-delimiters-depth-4-face) fontified t) 285 291 (fontified t) 291 292 (face (rainbow-delimiters-depth-5-face) fontified t) 292 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-5-face) fontified t) 309 310 (face (rainbow-delimiters-depth-4-face) fontified t) 310 319 (fontified t) 319 320 (face (rainbow-delimiters-depth-4-face) fontified t) 320 324 (fontified t) 324 325 (face (rainbow-delimiters-depth-5-face) fontified t) 325 335 (fontified t) 335 336 (face (rainbow-delimiters-depth-5-face) fontified t) 336 337 (face (rainbow-delimiters-depth-4-face) fontified t) 337 338 (face (rainbow-delimiters-depth-3-face) fontified t) 338 343 (fontified t) 343 344 (face (rainbow-delimiters-depth-3-face) fontified t) 344 348 (face font-lock-keyword-face fontified t) 348 378 (fontified t) 378 379 (face (rainbow-delimiters-depth-4-face) fontified t) 379 416 (fontified t) 416 417 (face (rainbow-delimiters-depth-4-face) fontified t) 417 418 (face (rainbow-delimiters-depth-3-face) fontified t) 418 423 (fontified t) 423 424 (face (rainbow-delimiters-depth-3-face) fontified t) 424 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-4-face) fontified t) 435 440 (fontified t) 440 441 (face (rainbow-delimiters-depth-4-face) fontified t) 441 442 (face (rainbow-delimiters-depth-3-face) fontified t) 442 447 (fontified t) 447 448 (face (rainbow-delimiters-depth-3-face) fontified t) 448 450 (face font-lock-keyword-face fontified t) 450 451 (fontified t) 451 452 (face (rainbow-delimiters-depth-4-face) fontified t) 452 470 (fontified t) 470 476 (face font-lock-string-face fontified t) 476 482 (fontified t) 482 483 (face (rainbow-delimiters-depth-4-face) fontified t) 483 492 (fontified t) 492 493 (face (rainbow-delimiters-depth-4-face) fontified t) 493 498 (face font-lock-keyword-face fontified t) 498 509 (fontified t) 509 510 (face (rainbow-delimiters-depth-5-face) fontified t) 510 514 (face font-lock-keyword-face fontified t) 514 538 (fontified t) 538 539 (face (rainbow-delimiters-depth-6-face) fontified t) 539 552 (fontified t) 552 553 (face (rainbow-delimiters-depth-7-face) fontified t) 553 570 (fontified t) 570 571 (face (rainbow-delimiters-depth-7-face) fontified t) 571 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-7-face) fontified t) 573 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-7-face) fontified t) 585 586 (face (rainbow-delimiters-depth-6-face) fontified t) 586 587 (face (rainbow-delimiters-depth-5-face) fontified t) 587 598 (fontified t) 598 599 (face (rainbow-delimiters-depth-5-face) fontified t) 599 650 (fontified t) 650 651 (face (rainbow-delimiters-depth-5-face) fontified t) 651 662 (fontified t) 662 663 (face (rainbow-delimiters-depth-5-face) fontified t) 663 673 (fontified t) 673 674 (face (rainbow-delimiters-depth-6-face) fontified t) 674 691 (fontified t) 691 692 (face (rainbow-delimiters-depth-6-face) fontified t) 692 693 (face (rainbow-delimiters-depth-5-face) fontified t) 693 704 (fontified t) 704 705 (face (rainbow-delimiters-depth-5-face) fontified t) 705 714 (fontified t) 714 715 (face (rainbow-delimiters-depth-6-face) fontified t) 715 726 (fontified t) 726 727 (face (rainbow-delimiters-depth-6-face) fontified t) 727 728 (face (rainbow-delimiters-depth-5-face) fontified t) 728 729 (face (rainbow-delimiters-depth-4-face) fontified t) 729 736 (fontified t) 736 737 (face (rainbow-delimiters-depth-4-face) fontified t) 737 745 (fontified t) 745 774 (face font-lock-string-face fontified t) 774 775 (face (rainbow-delimiters-depth-4-face) fontified t) 775 776 (face (rainbow-delimiters-depth-3-face) fontified t) 776 777 (face (rainbow-delimiters-depth-2-face) fontified t) 777 778 (face (rainbow-delimiters-depth-1-face) fontified t) 778 781 (fontified t)) . 13784) (undo-tree-id1 . -781) (undo-tree-id2 . -35) 14565 (t 26219 33798 651339 414000)) nil (26219 34017 683966 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14673 . 14674) (nil fontified nil 13784 . 14674) (13784 . 14674)) nil (26219 34017 683963 836000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c n\") 'highlight-next-word-in-region)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14612) (undo-tree-id0 . -61) 14673) nil (26219 34017 683960 902000) 0 nil])
([nil nil ((#("
(defvar my-word-region-overlay nil
  \"Overlay for highlighting the current word in the region.\")

(defun highlight-next-word-in-region ()
  \"Move to the next word in the active region and highlight it.\"
  (interactive)
  (unless (use-region-p)
    (error \"No active region\"))
  (let ((start (region-beginning))
        (end (region-end)))
    (when my-word-region-overlay
      (delete-overlay my-word-region-overlay))
    (goto-char (region-beginning))
    (if (re-search-forward \"\\\\w+\" end t)
        (progn
          (setq my-word-region-overlay (make-overlay (match-beginning 0) (match-end 0)))
          (overlay-put my-word-region-overlay 'face 'highlight)
          (goto-char (match-beginning 0))
          (set-mark (match-end 0))
          (setq deactivate-mark nil))
      (message \"No more words in the region\"))))

" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 31 (face font-lock-variable-name-face fontified t) 31 36 (fontified t) 36 38 (fontified t) 38 96 (face font-lock-doc-face fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-1-face) fontified t) 100 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t) 106 135 (face font-lock-function-name-face fontified t) 135 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-2-face) fontified t) 137 138 (face (rainbow-delimiters-depth-2-face) fontified t) 138 141 (fontified t) 141 203 (face font-lock-doc-face fontified t) 203 206 (fontified t) 206 207 (face (rainbow-delimiters-depth-2-face) fontified t) 207 218 (face font-lock-keyword-face fontified t) 218 219 (face (rainbow-delimiters-depth-2-face) fontified t) 219 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-2-face) fontified t) 223 229 (face font-lock-keyword-face fontified t) 229 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-3-face) fontified t) 231 243 (fontified t) 243 244 (face (rainbow-delimiters-depth-3-face) fontified t) 244 249 (fontified t) 249 250 (face (rainbow-delimiters-depth-3-face) fontified t) 250 255 (face font-lock-warning-face fontified t) 255 256 (fontified t) 256 274 (face font-lock-string-face fontified t) 274 275 (face (rainbow-delimiters-depth-3-face) fontified t) 275 276 (face (rainbow-delimiters-depth-2-face) fontified t) 276 279 (fontified t) 279 280 (face (rainbow-delimiters-depth-2-face) fontified t) 280 283 (face font-lock-keyword-face fontified t) 283 284 (fontified t) 284 285 (face (rainbow-delimiters-depth-3-face) fontified t) 285 286 (face (rainbow-delimiters-depth-4-face) fontified t) 286 292 (fontified t) 292 293 (face (rainbow-delimiters-depth-5-face) fontified t) 293 309 (fontified t) 309 310 (face (rainbow-delimiters-depth-5-face) fontified t) 310 311 (face (rainbow-delimiters-depth-4-face) fontified t) 311 320 (fontified t) 320 321 (face (rainbow-delimiters-depth-4-face) fontified t) 321 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-5-face) fontified t) 326 336 (fontified t) 336 337 (face (rainbow-delimiters-depth-5-face) fontified t) 337 338 (face (rainbow-delimiters-depth-4-face) fontified t) 338 339 (face (rainbow-delimiters-depth-3-face) fontified t) 339 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-3-face) fontified t) 345 349 (face font-lock-keyword-face fontified t) 349 379 (fontified t) 379 380 (face (rainbow-delimiters-depth-4-face) fontified t) 380 417 (fontified t) 417 418 (face (rainbow-delimiters-depth-4-face) fontified t) 418 419 (face (rainbow-delimiters-depth-3-face) fontified t) 419 424 (fontified t) 424 425 (face (rainbow-delimiters-depth-3-face) fontified t) 425 435 (fontified t) 435 436 (face (rainbow-delimiters-depth-4-face) fontified t) 436 452 (fontified t) 452 453 (face (rainbow-delimiters-depth-4-face) fontified t) 453 454 (face (rainbow-delimiters-depth-3-face) fontified t) 454 459 (fontified t) 459 460 (face (rainbow-delimiters-depth-3-face) fontified t) 460 462 (face font-lock-keyword-face fontified t) 462 463 (fontified t) 463 464 (face (rainbow-delimiters-depth-4-face) fontified t) 464 482 (fontified t) 482 488 (face font-lock-string-face fontified t) 488 494 (fontified t) 494 495 (face (rainbow-delimiters-depth-4-face) fontified t) 495 504 (fontified t) 504 505 (face (rainbow-delimiters-depth-4-face) fontified t) 505 510 (face font-lock-keyword-face fontified t) 510 521 (fontified t) 521 522 (face (rainbow-delimiters-depth-5-face) fontified t) 522 526 (face font-lock-keyword-face fontified t) 526 550 (fontified t) 550 551 (face (rainbow-delimiters-depth-6-face) fontified t) 551 564 (fontified t) 564 565 (face (rainbow-delimiters-depth-7-face) fontified t) 565 582 (fontified t) 582 583 (face (rainbow-delimiters-depth-7-face) fontified t) 583 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-7-face) fontified t) 585 596 (fontified t) 596 597 (face (rainbow-delimiters-depth-7-face) fontified t) 597 598 (face (rainbow-delimiters-depth-6-face) fontified t) 598 599 (face (rainbow-delimiters-depth-5-face) fontified t) 599 610 (fontified t) 610 611 (face (rainbow-delimiters-depth-5-face) fontified t) 611 662 (fontified t) 662 663 (face (rainbow-delimiters-depth-5-face) fontified t) 663 674 (fontified t) 674 675 (face (rainbow-delimiters-depth-5-face) fontified t) 675 685 (fontified t) 685 686 (face (rainbow-delimiters-depth-6-face) fontified t) 686 703 (fontified t) 703 704 (face (rainbow-delimiters-depth-6-face) fontified t) 704 705 (face (rainbow-delimiters-depth-5-face) fontified t) 705 716 (fontified t) 716 717 (face (rainbow-delimiters-depth-5-face) fontified t) 717 726 (fontified t) 726 727 (face (rainbow-delimiters-depth-6-face) fontified t) 727 738 (fontified t) 738 739 (face (rainbow-delimiters-depth-6-face) fontified t) 739 740 (face (rainbow-delimiters-depth-5-face) fontified t) 740 751 (fontified t) 751 752 (face (rainbow-delimiters-depth-5-face) fontified t) 752 756 (face font-lock-keyword-face fontified t) 756 776 (fontified t) 776 777 (face (rainbow-delimiters-depth-5-face) fontified t) 777 778 (face (rainbow-delimiters-depth-4-face) fontified t) 778 785 (fontified t) 785 786 (face (rainbow-delimiters-depth-4-face) fontified t) 786 794 (fontified t) 794 823 (face font-lock-string-face fontified t) 823 824 (face (rainbow-delimiters-depth-4-face) fontified t) 824 825 (face (rainbow-delimiters-depth-3-face) fontified t) 825 826 (face (rainbow-delimiters-depth-2-face) fontified t) 826 827 (face (rainbow-delimiters-depth-1-face) fontified t) 827 829 (fontified t)) . 13783) (undo-tree-id4 . -829) (undo-tree-id5 . -98) 14612 (t 26219 34017 703567 672000)) nil (26219 34193 842870 140000) 0 nil])
([nil nil ((13784 . 13785)) nil (26219 34193 842868 153000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -13784) (undo-tree-id3 . -1) 13785) nil (26219 34193 842867 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14182 . 14183) (nil fontified nil 13784 . 14183) (13784 . 14183)) nil (26219 34193 842865 904000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c n\") 'activate-next-word-region)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14125) (undo-tree-id0 . -57) (undo-tree-id1 . -57) (undo-tree-id2 . -57) 14182) nil (26219 34193 842862 877000) 0 nil])
([nil nil ((#("(defun activate-next-word-region ()
  \"Activate the region for the next word.\"
  (interactive)
  (let ((start (point)))
    (if (re-search-forward \"\\\\w+\" nil t)
        (progn
          (goto-char (match-beginning 0))
          (set-mark (match-end 0))
          (setq deactivate-mark nil))
      (message \"No more words in the buffer\"))))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 32 (face font-lock-function-name-face fontified t) 32 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 38 (fontified t) 38 78 (face font-lock-doc-face fontified t) 78 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 93 (face font-lock-keyword-face fontified t) 93 94 (face (rainbow-delimiters-depth-2-face) fontified t) 94 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-2-face) fontified t) 98 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-3-face) fontified t) 103 104 (face (rainbow-delimiters-depth-4-face) fontified t) 104 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-5-face) fontified t) 111 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-5-face) fontified t) 117 118 (face (rainbow-delimiters-depth-4-face) fontified t) 118 119 (face (rainbow-delimiters-depth-3-face) fontified t) 119 124 (fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) fontified t) 125 127 (face font-lock-keyword-face fontified t) 127 128 (fontified t) 128 129 (face (rainbow-delimiters-depth-4-face) fontified t) 129 147 (fontified t) 147 153 (face font-lock-string-face fontified t) 153 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-4-face) fontified t) 160 169 (fontified t) 169 170 (face (rainbow-delimiters-depth-4-face) fontified t) 170 175 (face font-lock-keyword-face fontified t) 175 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-5-face) fontified t) 187 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-6-face) fontified t) 198 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-6-face) fontified t) 216 217 (face (rainbow-delimiters-depth-5-face) fontified t) 217 228 (fontified t) 228 229 (face (rainbow-delimiters-depth-5-face) fontified t) 229 238 (fontified t) 238 239 (face (rainbow-delimiters-depth-6-face) fontified t) 239 250 (fontified t) 250 251 (face (rainbow-delimiters-depth-6-face) fontified t) 251 252 (face (rainbow-delimiters-depth-5-face) fontified t) 252 263 (fontified t) 263 264 (face (rainbow-delimiters-depth-5-face) fontified t) 264 268 (face font-lock-keyword-face fontified t) 268 288 (fontified t) 288 289 (face (rainbow-delimiters-depth-5-face) fontified t) 289 290 (face (rainbow-delimiters-depth-4-face) fontified t) 290 297 (fontified t) 297 298 (face (rainbow-delimiters-depth-4-face) fontified t) 298 306 (fontified t) 306 335 (face font-lock-string-face fontified t) 335 336 (face (rainbow-delimiters-depth-4-face) fontified t) 336 337 (face (rainbow-delimiters-depth-3-face) fontified t) 337 338 (face (rainbow-delimiters-depth-2-face) fontified t) 338 339 (face (rainbow-delimiters-depth-1-face) fontified t) 339 340 (fontified t)) . 13784) (undo-tree-id1 . -340) 14124 (t 26219 34193 862555 440000)) nil (26219 34397 511996 260000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14262 . 14263) (nil fontified nil 13786 . 14263) (13786 . 14263)) nil (26219 34397 511993 980000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c n\") 'activate-next-word-region)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14205) (undo-tree-id0 . -57) 14262) nil (26219 34397 511990 722000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -13999) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 14000 (t 26219 34397 532697 471000)) nil (26219 34562 850600 816000) 0 nil])
([nil nil ((13999 . 14000)) nil (26219 34562 850588 889000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -13999) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 14000) nil (26219 34562 850584 908000) 0 nil])
([nil nil ((13999 . 14000) (t 26219 34562 878624 624000)) nil (26219 34701 783955 48000) 0 nil])
([nil nil ((14000 . 14001)) nil (26219 34701 783954 221000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14000) (undo-tree-id0 . -1) 14001) nil (26219 34701 783951 367000) 0 nil])
([nil nil ((#("
(defun activate-next-word-region ()
  \"Activate the region for the next word.\"
  (interactive)
  (if (not (region-active-p))
      (error \"No active region\"))
  (let ((start (point)))
    (if (re-search-forward \"\\\\w+\" (region-end) t)
        (progn
          (goto-char (match-beginning 0))
          (push-mark (match-end 0) t t)
          (setq deactivate-mark nil))
      (message \"No more words in the region\"))))
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 33 (face font-lock-function-name-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 39 (fontified t) 39 79 (face font-lock-doc-face fontified t) 79 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-2-face) fontified t) 83 94 (face font-lock-keyword-face fontified t) 94 95 (face (rainbow-delimiters-depth-2-face) fontified t) 95 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) fontified t) 99 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-3-face) fontified t) 103 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-4-face) fontified t) 108 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-4-face) fontified t) 124 125 (face (rainbow-delimiters-depth-3-face) fontified t) 125 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-3-face) fontified t) 133 138 (face font-lock-warning-face fontified t) 138 139 (fontified t) 139 157 (face font-lock-string-face fontified t) 157 158 (face (rainbow-delimiters-depth-3-face) fontified t) 158 159 (face (rainbow-delimiters-depth-2-face) fontified t) 159 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-2-face) fontified t) 163 166 (face font-lock-keyword-face fontified t) 166 167 (fontified t) 167 168 (face (rainbow-delimiters-depth-3-face) fontified t) 168 169 (face (rainbow-delimiters-depth-4-face) fontified t) 169 175 (fontified t) 175 176 (face (rainbow-delimiters-depth-5-face) fontified t) 176 181 (fontified t) 181 182 (face (rainbow-delimiters-depth-5-face) fontified t) 182 183 (face (rainbow-delimiters-depth-4-face) fontified t) 183 184 (face (rainbow-delimiters-depth-3-face) fontified t) 184 189 (fontified t) 189 190 (face (rainbow-delimiters-depth-3-face) fontified t) 190 192 (face font-lock-keyword-face fontified t) 192 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-4-face) fontified t) 194 212 (fontified t) 212 218 (face font-lock-string-face fontified t) 218 219 (fontified t) 219 220 (face (rainbow-delimiters-depth-5-face) fontified t) 220 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-5-face) fontified t) 231 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-4-face) fontified t) 234 243 (fontified t) 243 244 (face (rainbow-delimiters-depth-4-face) fontified t) 244 249 (face font-lock-keyword-face fontified t) 249 260 (fontified t) 260 261 (face (rainbow-delimiters-depth-5-face) fontified t) 261 271 (fontified t) 271 272 (face (rainbow-delimiters-depth-6-face) fontified t) 272 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-6-face) fontified t) 290 291 (face (rainbow-delimiters-depth-5-face) fontified t) 291 302 (fontified t) 302 303 (face (rainbow-delimiters-depth-5-face) fontified t) 303 313 (fontified t) 313 314 (face (rainbow-delimiters-depth-6-face) fontified t) 314 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-6-face) fontified t) 326 330 (fontified t) 330 331 (face (rainbow-delimiters-depth-5-face) fontified t) 331 342 (fontified t) 342 343 (face (rainbow-delimiters-depth-5-face) fontified t) 343 347 (face font-lock-keyword-face fontified t) 347 367 (fontified t) 367 368 (face (rainbow-delimiters-depth-5-face) fontified t) 368 369 (face (rainbow-delimiters-depth-4-face) fontified t) 369 376 (fontified t) 376 377 (face (rainbow-delimiters-depth-4-face) fontified t) 377 385 (fontified t) 385 414 (face font-lock-string-face fontified t) 414 415 (face (rainbow-delimiters-depth-4-face) fontified t) 415 416 (face (rainbow-delimiters-depth-3-face) fontified t) 416 417 (face (rainbow-delimiters-depth-2-face) fontified t) 417 418 (face (rainbow-delimiters-depth-1-face) fontified t) 418 419 (fontified t)) . 13785) (undo-tree-id3 . -419) 14204 (t 26219 34701 804403 703000)) nil (26219 34841 946214 734000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14219 . 14220) (nil fontified nil 13786 . 14220) (13786 . 14220)) nil (26219 34841 946213 392000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"C-c n\") 'activate-next-word-region)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14162) (undo-tree-id2 . -57) 14219) nil (26219 34841 946212 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13784) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (26219 34841 946208 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14408 . 14409) (nil fontified nil 14163 . 14409) (14163 . 14409) (t 26219 34841 966049 347000)) nil (26220 32217 39516 126000) 0 nil])
([nil nil ((13719 . 13720)) nil (26220 32217 39515 309000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -13719) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 13720) nil (26220 32217 39514 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14285 . 14286) (nil fontified nil 14230 . 14286) (nil fontified nil 14227 . 14230) (nil fontified nil 14226 . 14227) (nil fontified nil 14223 . 14226) (nil fontified nil 14222 . 14223) (nil fontified nil 14220 . 14222) (nil fontified nil 14163 . 14220) (nil fontified nil 14161 . 14163) (14161 . 14286)) nil (26220 32217 39512 686000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -14225)) nil (26220 32217 39511 532000) 0 nil])
([nil nil ((14225 . 14226)) nil (26220 32217 39511 18000) 0 nil])
([nil nil ((14226 . 14228)) nil (26220 32217 39510 619000) 0 nil])
([nil nil ((14228 . 14229)) nil (26220 32217 39509 901000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14228) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 14229) nil (26220 32217 39509 380000) 0 nil])
([nil nil ((14228 . 14228) (14228 . 14229)) nil (26220 32217 39507 542000) 0 nil])
([nil nil ((14229 . 14230)) nil (26220 32217 39507 39000) 0 nil])
([nil nil ((14230 . 14231)) nil (26220 32217 39506 706000) 0 nil])
([nil nil ((14231 . 14232)) nil (26220 32217 39506 237000) 0 nil])
([nil nil ((14232 . 14233)) nil (26220 32217 39505 923000) 0 nil])
([nil nil ((14233 . 14239)) nil (26220 32217 39505 551000) 0 nil])
([nil nil ((14239 . 14240)) nil (26220 32217 39505 161000) 0 nil])
([nil nil ((14240 . 14242)) nil (26220 32217 39504 834000) 0 nil])
([nil nil ((14242 . 14243)) nil (26220 32217 39504 452000) 0 nil])
([nil nil ((14243 . 14245)) nil (26220 32217 39504 73000) 0 nil])
([nil nil ((14245 . 14246)) nil (26220 32217 39503 701000) 0 nil])
([nil nil ((14246 . 14252)) nil (26220 32217 39503 241000) 0 nil])
([nil nil ((14252 . 14253)) nil (26220 32217 39502 791000) 0 nil])
([nil nil ((14253 . 14260)) nil (26220 32217 39502 414000) 0 nil])
([nil nil ((14260 . 14261)) nil (26220 32217 39502 10000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14260) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 14261) nil (26220 32217 39501 510000) 0 nil])
([nil nil ((14270 . 14278) (14264 . 14270) (14260 . 14260) (14260 . 14264)) nil (26220 32217 39499 639000) 0 nil])
([nil nil ((14285 . 14291) (14278 . 14278) (14278 . 14285)) nil (26220 32217 39498 809000) 0 nil])
([nil nil ((14291 . 14292)) nil (26220 32217 39498 176000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14291) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 14292) nil (26220 32217 39497 641000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 14281) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (14282 . 14283)) nil (26220 32217 39495 236000) 0 nil])
([nil nil ((14282 . 14283)) nil (26220 32217 39487 255000) 0 nil])
([nil nil ((14283 . 14284)) nil (26220 32217 39486 822000) 0 nil])
([nil nil ((14284 . 14285)) nil (26220 32217 39486 347000) 0 nil])
([nil nil ((14285 . 14286)) nil (26220 32217 39485 928000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14285) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 14286) nil (26220 32217 39485 325000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14355) (undo-tree-id6 . -1)) nil (26220 32217 39483 433000) 0 nil])
([nil nil ((14548 . 14548) (14548 . 14549)) nil (26220 32217 39482 369000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -14548) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 14549) nil (26220 32217 39481 592000) 0 nil])
([nil nil ((14548 . 14549)) nil (26220 32217 39477 885000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14548) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 14549) nil (26220 32217 39475 57000) 0 nil])
([nil nil ((14484 . 14484) (14484 . 14485) (t 26220 32217 60055 339000)) nil (26220 32235 957406 559000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -14484) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 14485) nil (26220 32235 957405 572000) 0 nil])
([nil nil ((14484 . 14485)) nil (26220 32235 957395 199000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14484) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 14485) nil (26220 32235 957394 455000) 0 nil])
([nil nil ((14484 . 14484) (14484 . 14485)) nil (26220 32235 957387 572000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -14484) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 14485) nil (26220 32235 957385 861000) 0 nil])
([nil nil ((14485 . 14485) (14485 . 14487) (14484 . 14484) (14484 . 14485)) nil (26220 32235 957347 988000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -14484) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("a" 0 1 (fontified t)) . -14485) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("/" 0 1 (fontified t)) . -14486) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 14487) nil (26220 32235 957343 275000) 0 nil])
([nil nil ((14484 . 14485)) nil (26220 32235 956733 336000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14484) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 14485) nil (26220 32235 956730 201000) 0 nil])
([nil nil ((14354 . 14357) (t 26220 32235 978177 864000)) nil (26220 32627 406711 358000) 0 nil])
([nil nil ((14357 . 14358)) nil (26220 32627 406710 809000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14357) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 14358) nil (26220 32627 406710 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14594 . 14595) (nil fontified nil 14356 . 14595) (14356 . 14595)) nil (26220 32627 406708 315000) 0 nil])
([nil nil ((#(";; Function to quit Corfu
(defun my-corfu-quit ()
  \"Quit Corfu completion.\"
  (when (corfu--popup-visible-p)
    (corfu-quit)))

;; Add advice to run `my-corfu-quit` before `hydra-files/body`
(advice-add 'hydra-files/body :before 'my-corfu-quit)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 26 (face font-lock-comment-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 46 (face font-lock-function-name-face fontified t) 46 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 76 (face font-lock-doc-face fontified t) 76 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-2-face) fontified t) 80 84 (face font-lock-keyword-face fontified t) 84 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-3-face) fontified t) 86 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-3-face) fontified t) 109 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-3-face) fontified t) 115 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-3-face) fontified t) 126 127 (face (rainbow-delimiters-depth-2-face) fontified t) 127 128 (face (rainbow-delimiters-depth-1-face) fontified t) 128 130 (fontified t) 130 133 (face font-lock-comment-delimiter-face fontified t) 133 193 (face font-lock-comment-face fontified t) 193 194 (face (rainbow-delimiters-depth-1-face) fontified t) 194 223 (fontified t) 223 230 (face font-lock-builtin-face fontified t) 230 245 (fontified t) 245 246 (face (rainbow-delimiters-depth-1-face) fontified t) 246 247 (fontified t)) . 14597) (undo-tree-id17 . -247) 14844) nil (26220 32627 406707 734000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14561) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("i" 0 1 (fontified t)) . -14562) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("l" 0 1 (fontified t)) . -14563) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t)) . -14564) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (fontified t)) . -14565) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 14566) nil (26220 32627 406706 29000) 0 nil])
([nil nil ((14565 . 14572) (14562 . 14565) (14561 . 14561) (14561 . 14562)) nil (26220 32627 406695 351000) 0 nil])
([nil nil ((14577 . 14578)) nil (26220 32627 406694 363000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14577) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 14578) nil (26220 32627 406691 488000) 0 nil])
([nil nil ((#(";; Add advice to run `my-corfu-quit` before `hydra-files/body`
(advice-add 'hydra-change-mode/body :before 'my-corfu-quit)

" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 63 (face font-lock-comment-face fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 99 (fontified t) 99 106 (face font-lock-builtin-face fontified t) 106 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t) 122 124 (fontified t)) . 14479) (undo-tree-id2 . -124) 14603 (t 26220 32627 427739 685000)) nil (26220 33105 73452 639000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14479) (undo-tree-id1 . -1)) nil (26220 33105 73450 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14479) (undo-tree-id0 . -1)) nil (26230 56636 445441 371000) 0 nil])
([nil nil ((14478 . 14483) (t 26220 33105 94905 813000)) nil (26230 58113 360569 255000) 0 nil] [nil nil ((#("  (interactive)                                                                   
" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 14 (face font-lock-keyword-face fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 83 (fontified t)) . 1196) (undo-tree-id0 . -63) (undo-tree-id1 . -63) (undo-tree-id2 . -63) (undo-tree-id3 . -63) (undo-tree-id4 . -63) (undo-tree-id5 . -63) (undo-tree-id6 . -63) (undo-tree-id7 . -63) (undo-tree-id8 . -63) (undo-tree-id9 . -63) (undo-tree-id10 . -63) (undo-tree-id11 . -63) (undo-tree-id12 . -63) (undo-tree-id13 . -63) (undo-tree-id14 . -63) (undo-tree-id15 . -63) (undo-tree-id16 . -63) (undo-tree-id17 . -63) (undo-tree-id18 . -63) (undo-tree-id19 . -63) (undo-tree-id20 . -63) (undo-tree-id21 . -63) (undo-tree-id22 . -63) (undo-tree-id23 . -63) (undo-tree-id24 . -63) (undo-tree-id25 . -63) (undo-tree-id26 . -63) (undo-tree-id27 . -63) (undo-tree-id28 . -63) (undo-tree-id29 . -63) (undo-tree-id30 . -63) (undo-tree-id31 . -63) (undo-tree-id32 . -63) (undo-tree-id33 . -63) (undo-tree-id34 . -63) (undo-tree-id35 . -63) (undo-tree-id36 . -63) (undo-tree-id37 . -63) (undo-tree-id38 . -63) (undo-tree-id39 . -63) (undo-tree-id40 . -63) (undo-tree-id41 . -63) (undo-tree-id42 . -63) (undo-tree-id43 . -63) (undo-tree-id44 . -63) (undo-tree-id45 . -63) (undo-tree-id46 . -63) (undo-tree-id47 . -63) (undo-tree-id48 . -63) (undo-tree-id49 . -63) (undo-tree-id50 . -63) (undo-tree-id51 . -63) (undo-tree-id52 . -63) (undo-tree-id53 . -63) (undo-tree-id54 . -63) (undo-tree-id55 . -63) (undo-tree-id56 . -83) (undo-tree-id57 . -83) (undo-tree-id58 . -83) (undo-tree-id59 . -83) (undo-tree-id60 . -83) (undo-tree-id61 . -83) (undo-tree-id62 . -83) (undo-tree-id63 . -63) (undo-tree-id64 . -63) (undo-tree-id65 . -63) (undo-tree-id66 . -63) (undo-tree-id67 . -63) (undo-tree-id68 . -63) (undo-tree-id69 . -63) (undo-tree-id70 . -63) (undo-tree-id71 . -63) (undo-tree-id72 . -63) (undo-tree-id73 . -63) (undo-tree-id74 . -63) (undo-tree-id75 . -63) (undo-tree-id76 . -63) (undo-tree-id77 . -63) (undo-tree-id78 . -63) (undo-tree-id79 . -63) (undo-tree-id80 . -63) (undo-tree-id81 . -63) (undo-tree-id82 . -63) (undo-tree-id83 . -63) (undo-tree-id84 . -63) (undo-tree-id85 . -63) (undo-tree-id86 . -63) (undo-tree-id87 . -63) (undo-tree-id88 . -63) (undo-tree-id89 . -63) (undo-tree-id90 . -63) (undo-tree-id91 . -63) (undo-tree-id92 . -63) (undo-tree-id93 . -63) (undo-tree-id94 . -63) (undo-tree-id95 . -63) (undo-tree-id96 . -63) (undo-tree-id97 . -63) (undo-tree-id98 . -63) (undo-tree-id99 . -63) (undo-tree-id100 . -63) (undo-tree-id101 . -63) (undo-tree-id102 . -63) (undo-tree-id103 . -63) (undo-tree-id104 . -63) (undo-tree-id105 . -63) (undo-tree-id106 . -63) (undo-tree-id107 . -63) (undo-tree-id108 . -63) (undo-tree-id109 . -63) (undo-tree-id110 . -63) (undo-tree-id111 . -63) (undo-tree-id112 . -63) (undo-tree-id113 . -63) (undo-tree-id114 . -63) (undo-tree-id115 . -63) (undo-tree-id116 . -63) (undo-tree-id117 . -63) (undo-tree-id118 . -63) (undo-tree-id119 . -63) (undo-tree-id120 . -63) (undo-tree-id121 . -63) (undo-tree-id122 . -63) (undo-tree-id123 . -63) (undo-tree-id124 . -63) (undo-tree-id125 . -63) (undo-tree-id126 . -63) (undo-tree-id127 . -63) (undo-tree-id128 . -63) (undo-tree-id129 . -63) (undo-tree-id130 . -63) (undo-tree-id131 . -63) (undo-tree-id132 . -63) (undo-tree-id133 . -63) (undo-tree-id134 . -63) (undo-tree-id135 . -63) (undo-tree-id136 . -63) (undo-tree-id137 . -63) (undo-tree-id138 . -63) (undo-tree-id139 . -63) (undo-tree-id140 . -63) (undo-tree-id141 . -63) (undo-tree-id142 . -63) (undo-tree-id143 . -63) (undo-tree-id144 . -63) (undo-tree-id145 . -63) (undo-tree-id146 . -63) (undo-tree-id147 . -63) (undo-tree-id148 . -63) (undo-tree-id149 . -63) (undo-tree-id150 . -63) (undo-tree-id151 . -63) (undo-tree-id152 . -63) (undo-tree-id153 . -63) (undo-tree-id154 . -63) (undo-tree-id155 . -63) (undo-tree-id156 . -63) (undo-tree-id157 . -63) (undo-tree-id158 . -63) (undo-tree-id159 . -63) (undo-tree-id160 . -63) (undo-tree-id161 . -63) (undo-tree-id162 . -63) (undo-tree-id163 . -63) (undo-tree-id164 . -63) (undo-tree-id165 . -63) (undo-tree-id166 . -63) (undo-tree-id167 . -63) (undo-tree-id168 . -63) (undo-tree-id169 . -63) (undo-tree-id170 . -63) (undo-tree-id171 . -63) (undo-tree-id172 . -63) (undo-tree-id173 . -63) (undo-tree-id174 . -63) (undo-tree-id175 . -63) (undo-tree-id176 . -63) (undo-tree-id177 . -63) (undo-tree-id178 . -63) (undo-tree-id179 . -63) (undo-tree-id180 . -63) (undo-tree-id181 . -63) (undo-tree-id182 . -63) (undo-tree-id183 . -63) (undo-tree-id184 . -63) (undo-tree-id185 . -63) (undo-tree-id186 . -63) (undo-tree-id187 . -63) (undo-tree-id188 . -63) (undo-tree-id189 . -63) (undo-tree-id190 . -63) (undo-tree-id191 . -63) (undo-tree-id192 . -63) (undo-tree-id193 . -63) (undo-tree-id194 . -63) (undo-tree-id195 . -63) (undo-tree-id196 . -63) (undo-tree-id197 . -63) (undo-tree-id198 . -63) (undo-tree-id199 . -63) (undo-tree-id200 . -63) (undo-tree-id201 . -63) (undo-tree-id202 . -63) (undo-tree-id203 . -63) (undo-tree-id204 . -63) (undo-tree-id205 . -63) (undo-tree-id206 . -63) (undo-tree-id207 . -63) (undo-tree-id208 . -63) (undo-tree-id209 . -63) (undo-tree-id210 . -63) (undo-tree-id211 . -63) (undo-tree-id212 . -63) (undo-tree-id213 . -63) (undo-tree-id214 . -63) (undo-tree-id215 . -63) (undo-tree-id216 . -63) (undo-tree-id217 . -63) (undo-tree-id218 . -63) (undo-tree-id219 . -63) (undo-tree-id220 . -63) (undo-tree-id221 . -63) (undo-tree-id222 . -63) (undo-tree-id223 . -63) (undo-tree-id224 . -63) (undo-tree-id225 . -63) (undo-tree-id226 . -63) (undo-tree-id227 . -63) (undo-tree-id228 . -63) (undo-tree-id229 . -63) (undo-tree-id230 . -63) (undo-tree-id231 . -63) (undo-tree-id232 . -63) (undo-tree-id233 . -63) (undo-tree-id234 . -63) (undo-tree-id235 . -63) (undo-tree-id236 . -63) (undo-tree-id237 . -63) (undo-tree-id238 . -63) (undo-tree-id239 . -63) (undo-tree-id240 . -63) (undo-tree-id241 . -63) (undo-tree-id242 . -63) (undo-tree-id243 . -63) (undo-tree-id244 . -63) (undo-tree-id245 . -63) (undo-tree-id246 . -63) (undo-tree-id247 . -63) (undo-tree-id248 . -63) (undo-tree-id249 . -63) (undo-tree-id250 . -63) (undo-tree-id251 . -63) (undo-tree-id252 . -63) (undo-tree-id253 . -63) (undo-tree-id254 . -63) (undo-tree-id255 . -63) (undo-tree-id256 . -63) (undo-tree-id257 . -63) (undo-tree-id258 . -63) (undo-tree-id259 . -63) (undo-tree-id260 . -63) (undo-tree-id261 . -63) (undo-tree-id262 . -63) (undo-tree-id263 . -63) (undo-tree-id264 . -63) (undo-tree-id265 . -63) (undo-tree-id266 . -63) (undo-tree-id267 . -63) (undo-tree-id268 . -63) (undo-tree-id269 . -63) (undo-tree-id270 . -63) (undo-tree-id271 . -63) (undo-tree-id272 . -63) (undo-tree-id273 . -63) (undo-tree-id274 . -63) (undo-tree-id275 . -63) (undo-tree-id276 . -63) (undo-tree-id277 . -63) (undo-tree-id278 . -63) (undo-tree-id279 . -63) (undo-tree-id280 . -63) (undo-tree-id281 . -63) (undo-tree-id282 . -63) (undo-tree-id283 . -63) (undo-tree-id284 . -63) (undo-tree-id285 . -63) (undo-tree-id286 . -63) (undo-tree-id287 . -63) (undo-tree-id288 . -63) (undo-tree-id289 . -63) (undo-tree-id290 . -63) (undo-tree-id291 . -63) (undo-tree-id292 . -63) (undo-tree-id293 . -63) (undo-tree-id294 . -63) (undo-tree-id295 . -63) (undo-tree-id296 . -63) (undo-tree-id297 . -63) (undo-tree-id298 . -63) (undo-tree-id299 . -63) (undo-tree-id300 . -63) (undo-tree-id301 . -63) (undo-tree-id302 . -63) (undo-tree-id303 . -63) (undo-tree-id304 . -63) (undo-tree-id305 . -63) (undo-tree-id306 . -63) (undo-tree-id307 . -63) (undo-tree-id308 . -63) (undo-tree-id309 . -63) (undo-tree-id310 . -63) (undo-tree-id311 . -63) (undo-tree-id312 . -63) (undo-tree-id313 . -63) (undo-tree-id314 . -63) (undo-tree-id315 . -63) (undo-tree-id316 . -63) (undo-tree-id317 . -63) (undo-tree-id318 . -63) (undo-tree-id319 . -63) (undo-tree-id320 . -63) (undo-tree-id321 . -63) (undo-tree-id322 . -63) (undo-tree-id323 . -63) (undo-tree-id324 . -63) (undo-tree-id325 . -63) (undo-tree-id326 . -63) (undo-tree-id327 . -63) (undo-tree-id328 . -63) (undo-tree-id329 . -63) (undo-tree-id330 . -63) (undo-tree-id331 . -63) (undo-tree-id332 . -63) (undo-tree-id333 . -63) (undo-tree-id334 . -63) (undo-tree-id335 . -63) (undo-tree-id336 . -63) (undo-tree-id337 . -63) (undo-tree-id338 . -63) (undo-tree-id339 . -63) (undo-tree-id340 . -63) (undo-tree-id341 . -63) (undo-tree-id342 . -63) (undo-tree-id343 . -63) (undo-tree-id344 . -63) (undo-tree-id345 . -63) (undo-tree-id346 . -63) (undo-tree-id347 . -63) (undo-tree-id348 . -63) (undo-tree-id349 . -63) (undo-tree-id350 . -63) (undo-tree-id351 . -63) (undo-tree-id352 . -63) (undo-tree-id353 . -63) (undo-tree-id354 . -63) (undo-tree-id355 . -63) (undo-tree-id356 . -63) (undo-tree-id357 . -63) (undo-tree-id358 . -63) (undo-tree-id359 . -63) (undo-tree-id360 . -63) (undo-tree-id361 . -63) (undo-tree-id362 . -63) (undo-tree-id363 . -83) (undo-tree-id364 . -63) 1259 (t 26220 33105 94905 813000)) ((1196 . 1279)) (26230 56636 445033 183000) 0 nil])
([nil nil ((14483 . 14484)) nil (26230 58113 360568 638000) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified t)) . -14483) (undo-tree-id365 . -1) (undo-tree-id366 . -1) 14484) nil (26230 58113 360567 809000) 0 nil])
([nil nil ((14484 . 14486) (14483 . 14484) (14481 . 14483) (14480 . 14480) (14480 . 14480) (14480 . 14482)) nil (26230 58113 360557 458000) 0 nil])
([nil nil ((14502 . 14502) (14502 . 14502) (14502 . 14505) (14501 . 14501) (14501 . 14502) (14500 . 14500) (14500 . 14501) (14499 . 14499) (14499 . 14500) (14498 . 14498) (14498 . 14499) (14497 . 14497) (14497 . 14498) (14496 . 14496) (14496 . 14497) (14495 . 14495) (14495 . 14496) (14494 . 14494) (14494 . 14495) (14493 . 14493) (14493 . 14494) (14492 . 14492) (14492 . 14493) (14491 . 14491) (14491 . 14492) (14488 . 14488) (14488 . 14491) (14486 . 14486) (14486 . 14488)) nil (26230 58113 360556 78000) 0 nil])
([nil nil ((14505 . 14508)) nil (26230 58113 360634 731000) 0 nil])
([nil nil ((14514 . 14521) (14509 . 14514) (14508 . 14508) (14508 . 14508) (14508 . 14510)) nil (26230 58228 101493 879000) 0 nil] [nil nil ((14509 . 14514) (14508 . 14508) (14508 . 14508) (14508 . 14510)) ((#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 14508) (#("other" 0 5 (fontified t)) . 14509)) (26230 58113 360549 173000) 0 nil])
([nil nil ((14521 . 14522)) nil (26230 58228 101493 164000) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified defer)) . -14521) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 14522) nil (26230 58228 101492 623000) 0 nil])
([nil nil ((14523 . 14525)) nil (26230 58228 101490 836000) 0 nil])
([nil nil ((14525 . 14526)) nil (26230 58228 101490 389000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14525) (undo-tree-id434 . -1) (undo-tree-id435 . -1) 14526) nil (26230 58228 101489 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14656 . 14657) (nil fontified nil 14656 . 14657) (nil fontified nil 14655 . 14656) (nil fontified nil 14654 . 14655) (nil fontified nil 14613 . 14654) (nil fontified nil 14612 . 14613) (nil fontified nil 14577 . 14612) (nil fontified nil 14576 . 14577) (nil fontified nil 14571 . 14576) (nil fontified nil 14566 . 14571) (nil fontified nil 14565 . 14566) (nil fontified nil 14558 . 14565) (nil fontified nil 14557 . 14558) (nil fontified nil 14555 . 14557) (nil fontified nil 14549 . 14555) (nil fontified nil 14526 . 14549) (nil fontified nil 14525 . 14526) (14525 . 14657)) nil (26230 58228 101487 642000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -14538) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("c" 0 1 (fontified t)) . -14539) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("e" 0 1 (fontified t)) . -14540) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("-" 0 1 (fontified t)) . -14541) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("w" 0 1 (fontified t)) . -14542) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("i" 0 1 (fontified t)) . -14543) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("n" 0 1 (fontified t)) . -14544) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("d" 0 1 (fontified t)) . -14545) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("o" 0 1 (fontified t)) . -14546) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("w" 0 1 (fontified t)) . -14547) (undo-tree-id432 . -1) (undo-tree-id433 . -1) 14548) nil (26230 58228 101484 683000) 0 nil])
([nil nil ((14539 . 14539) (14539 . 14542) (14538 . 14538) (14538 . 14539)) nil (26230 58228 101469 672000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -14540) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("-" 0 1 (fontified t)) . -14541) (undo-tree-id412 . -1) (undo-tree-id413 . -1) 14542) nil (26230 58228 101468 725000) 0 nil])
([nil nil ((14544 . 14544) (14544 . 14545) (14543 . 14543) (14543 . 14544) (14542 . 14542) (14542 . 14543) (14541 . 14541) (14541 . 14542) (14540 . 14540) (14540 . 14541)) nil (26230 58228 101463 61000) 0 nil])
([nil nil ((14552 . 14552) (14552 . 14553) (14551 . 14551) (14551 . 14552) (14550 . 14550) (14550 . 14551) (14549 . 14549) (14549 . 14550) (14548 . 14548) (14548 . 14549) (14547 . 14547) (14547 . 14548) (14546 . 14546) (14546 . 14547) (14545 . 14545) (14545 . 14546)) nil (26230 58228 101461 604000) 0 nil])
([nil nil ((14553 . 14554)) nil (26230 58228 101460 109000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14553) (undo-tree-id408 . -1) (undo-tree-id409 . -1) 14554) nil (26230 58228 101459 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14671 . 14672) (nil fontified nil 14616 . 14672) (nil fontified nil 14613 . 14616) (nil fontified nil 14603 . 14613) (nil fontified nil 14600 . 14603) (nil fontified nil 14544 . 14600) (nil fontified nil 14541 . 14544) (nil fontified nil 14540 . 14541) (nil fontified nil 14538 . 14540) (nil fontified nil 14481 . 14538) (nil fontified nil 14479 . 14481) (14479 . 14672)) nil (26230 58228 101457 690000) 0 nil])
([nil nil ((#(";; corfu functie om te quiten wanneer hydra-change-mode is
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 59 (face font-lock-comment-face fontified t)) . 14541) (undo-tree-id407 . -4) 14545) nil (26230 58228 101456 396000) 0 nil])
([nil nil ((14541 . 14542)) nil (26230 58228 101455 127000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14541) (undo-tree-id405 . -1) (undo-tree-id406 . -1) 14542) nil (26230 58228 101454 470000) 0 nil])
([nil nil ((#(";; activated
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 13 (face font-lock-comment-face fontified t)) . 14541) (undo-tree-id404 . -6) 14547) nil (26230 58228 101452 517000) 0 nil])
([nil nil ((14541 . 14541) (14541 . 14542)) nil (26230 58228 101451 322000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -14541) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 14542) nil (26230 58228 101450 588000) 0 nil])
([nil nil ((14541 . 14542)) nil (26230 58228 101448 916000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14541) (undo-tree-id400 . -1) (undo-tree-id401 . -1) 14542) nil (26230 58228 101448 118000) 0 nil])
([nil nil ((14541 . 14542)) nil (26230 58228 101446 450000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14541) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 14542) nil (26230 58228 101445 917000) 0 nil])
([nil nil ((14540 . 14541)) nil (26230 58228 101444 271000) 0 nil])
([nil nil ((14542 . 14545) (14541 . 14541) (14541 . 14542)) nil (26230 58228 101443 814000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -14544) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 14545) nil (26230 58228 101442 997000) 0 nil])
([nil nil ((14561 . 14565) (14558 . 14558) (14558 . 14561) (14544 . 14544) (14544 . 14558)) nil (26230 58228 101441 11000) 0 nil])
([nil nil ((14565 . 14567)) nil (26230 58228 101439 867000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face fontified t)) . -14562) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -14563) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -14564) (undo-tree-id393 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -14565) (undo-tree-id394 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -14566) (undo-tree-id395 . -1) 14567) nil (26230 58228 101438 618000) 0 nil])
([nil nil ((14562 . 14566)) nil (26230 58228 101433 183000) 0 nil])
([nil nil ((14570 . 14570) (14570 . 14574) (14566 . 14566) (14566 . 14570)) nil (26230 58228 101432 470000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -14573) (undo-tree-id387 . -1) (undo-tree-id388 . -1) 14574) nil (26230 58228 101431 654000) 0 nil])
([nil nil ((14575 . 14576) (14574 . 14574) (14574 . 14575) (14573 . 14575) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -14573) (14573 . 14574)) nil (26230 58228 101429 593000) 0 nil])
([nil nil ((14576 . 14577)) nil (26230 58228 101428 808000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14576) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 14577) nil (26230 58228 101428 192000) 0 nil])
([nil nil ((14585 . 14588) (14579 . 14579) (14579 . 14585) (14577 . 14577) (14577 . 14579)) nil (26230 58228 101426 292000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t)) . -14586) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -14587) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 14588) nil (26230 58228 101425 317000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -14584) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -14585) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 14586) nil (26230 58228 101421 722000) 0 nil])
([nil nil ((14589 . 14605) (14585 . 14585) (14585 . 14589) (14584 . 14584) (14584 . 14585)) nil (26230 58228 101418 249000) 0 nil])
([nil nil ((14607 . 14609) (14605 . 14605) (14605 . 14607)) nil (26230 58228 101417 408000) 0 nil])
([nil nil ((14609 . 14610)) nil (26230 58228 101416 468000) 0 nil])
([nil nil ((14610 . 14611)) nil (26230 58228 101415 978000) 0 nil])
([nil nil ((14611 . 14612)) nil (26230 58228 101415 480000) 0 nil])
([nil nil ((14612 . 14613)) nil (26230 58228 101415 51000) 0 nil])
([nil nil ((14613 . 14614)) nil (26230 58228 101414 675000) 0 nil])
([nil nil ((14614 . 14615)) nil (26230 58228 101414 279000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14614) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 14615) nil (26230 58228 101413 600000) 0 nil])
([nil nil ((14610 . 14611)) nil (26230 58228 101411 568000) 0 nil])
([nil nil ((14611 . 14612)) nil (26230 58228 101411 73000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14611) (undo-tree-id373 . -1) (undo-tree-id374 . -1) 14612) nil (26230 58228 101410 412000) 0 nil])
([nil nil ((14616 . 14621) (14615 . 14615) (14615 . 14616)) nil (26230 58228 101408 335000) 0 nil])
([nil nil ((14621 . 14621) (14621 . 14626)) nil (26230 58228 101407 622000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -14625) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 14626) nil (26230 58228 101406 774000) 0 nil])
([nil nil ((14626 . 14627) (14625 . 14625) (14625 . 14626)) nil (26230 58228 101404 764000) 0 nil])
([nil nil ((14627 . 14628)) nil (26230 58228 101404 78000) 0 nil])
([nil nil ((14628 . 14630)) nil (26230 58228 101403 570000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t)) . -14629) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 14630) nil (26230 58228 101402 848000) 0 nil])
([nil nil ((14630 . 14634) (14629 . 14629) (14629 . 14630)) nil (26230 58228 101400 571000) 0 nil])
([nil nil ((14634 . 14635)) nil (26230 58228 101399 883000) 0 nil])
([nil nil ((#("f" 0 1 (fontified defer)) . -14634) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 14635) nil (26230 58228 101398 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14879)) nil (26230 58228 101386 815000) 0 nil])
([nil nil ((14720 . 14723) (t 26230 58228 122412 531000)) nil (26230 58330 517909 880000) 0 nil])
([nil nil ((14723 . 14723) (14723 . 14723) (14723 . 14725)) nil (26230 58330 517909 323000) 0 nil])
([nil nil ((14725 . 14729) (14724 . 14724) (14724 . 14725)) nil (26230 58330 517908 679000) 0 nil])
([nil nil ((14739 . 14740)) nil (26230 58330 517908 64000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14739) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 14740) nil (26230 58330 517907 110000) 0 nil])
([nil nil ((14731 . 14735) (14730 . 14731) (14729 . 14729) (14729 . 14730)) nil (26230 58330 517889 832000) 0 nil])
([nil nil ((14752 . 14752) (14752 . 14754) (t 26230 58330 539867 957000)) nil (26230 58488 278792 761000) 0 nil])
([nil nil ((#(";;
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . 14220) (undo-tree-id0 . -3) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -3) (undo-tree-id11 . -2) 14222 (t 26230 58488 305352 485000)) nil (26231 15334 229749 717000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14352) (t 26231 15334 253770 660000)) nil (26231 21575 486236 560000) 0 nil])
([nil nil ((14893 . 14896) (t 26231 21575 507883 500000)) nil (26259 47407 751328 708000) 0 nil])
([nil nil ((14896 . 14897)) nil (26259 47407 751328 226000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14896) (undo-tree-id54 . -1) 14897) nil (26259 47407 751327 694000) 0 nil])
([nil nil ((14894 . 14895)) nil (26259 47407 751326 618000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14894) (undo-tree-id53 . -1) 14895) nil (26259 47407 751326 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15240 . 15241) (nil fontified nil 14894 . 15241) (14894 . 15241)) nil (26259 47407 751324 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15106 . 15107) (nil fontified nil 15051 . 15107) (nil fontified nil 15048 . 15051) (nil fontified nil 15028 . 15048) (nil fontified nil 15025 . 15028) (nil fontified nil 14954 . 15025) (nil fontified nil 14951 . 14954) (nil fontified nil 14894 . 14951) (nil fontified nil 14892 . 14894) (14892 . 15107)) nil (26259 47407 751324 253000) 0 nil])
([nil nil ((14892 . 14894)) nil (26259 47407 751323 134000) 0 nil])
([nil nil ((14894 . 14895)) nil (26259 47407 751322 697000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -14894) (undo-tree-id52 . -1) 14895) nil (26259 47407 751322 137000) 0 nil])
([nil nil ((#("my-other-window is gebonden aan \"ga\" zodat the boon-insert-state wordt
;; toegepast op eshell" 0 71 (face font-lock-comment-face fontified t) 71 74 (face font-lock-comment-delimiter-face fontified t) 74 93 (face font-lock-comment-face fontified t)) . 14956) (undo-tree-id51 . -93) 15049) nil (26259 47407 751320 984000) 0 nil])
([nil nil ((14956 . 14956) (14956 . 14957)) nil (26259 47407 751319 844000) 0 nil])
([nil nil ((#("l" 0 1 (fontified nil)) . 14953) (14953 . 14954) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 14953)) nil (26259 47407 751319 226000) 0 nil])
([nil nil ((14953 . 14954)) nil (26259 47407 751318 663000) 0 nil])
([nil nil ((14954 . 14955)) nil (26259 47407 751318 148000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -14954) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 14955) nil (26259 47407 751317 539000) 0 nil])
([nil nil ((14958 . 14962) (14957 . 14957) (14957 . 14958)) nil (26259 47407 751315 513000) 0 nil])
([nil nil ((14962 . 14963)) nil (26259 47407 751314 970000) 0 nil])
([nil nil ((14963 . 14964)) nil (26259 47407 751314 587000) 0 nil])
([nil nil ((14964 . 14971)) nil (26259 47407 751314 210000) 0 nil])
([nil nil ((14971 . 14972)) nil (26259 47407 751313 817000) 0 nil])
([nil nil ((14972 . 14976)) nil (26259 47407 751313 374000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -14973) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -14974) (undo-tree-id47 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -14975) (undo-tree-id48 . -1) 14976) nil (26259 47407 751312 353000) 0 nil])
([nil nil ((14973 . 14973) (14973 . 14974)) nil (26259 47407 751309 223000) 0 nil])
([nil nil ((14974 . 14975)) nil (26259 47407 751308 717000) 0 nil])
([nil nil ((14977 . 14978) (14975 . 14975) (14975 . 14977)) nil (26259 47407 751308 230000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -14977) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 14978) nil (26259 47407 751307 577000) 0 nil])
([nil nil ((14978 . 14984) (14977 . 14977) (14977 . 14978)) nil (26259 47407 751305 833000) 0 nil])
([nil nil ((14984 . 14985)) nil (26259 47407 751305 97000) 0 nil])
([nil nil ((14985 . 14986)) nil (26259 47407 751304 713000) 0 nil])
([nil nil ((14986 . 14987)) nil (26259 47407 751304 314000) 0 nil])
([nil nil ((14987 . 14988)) nil (26259 47407 751303 830000) 0 nil])
([nil nil ((14989 . 14991) (14988 . 14988) (14988 . 14989)) nil (26259 47407 751303 392000) 0 nil])
([nil nil ((14991 . 14992)) nil (26259 47407 751302 810000) 0 nil])
([nil nil ((14992 . 14994)) nil (26259 47407 751302 397000) 0 nil])
([nil nil ((14994 . 14995)) nil (26259 47407 751302 24000) 0 nil])
([nil nil ((14995 . 14995) (14995 . 15000)) nil (26259 47407 751301 580000) 0 nil])
([nil nil ((15000 . 15001)) nil (26259 47407 751301 65000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -15000) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 15001) nil (26259 47407 751300 466000) 0 nil])
([nil nil ((15000 . 15001)) nil (26259 47407 751298 310000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -15000) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 15001) nil (26259 47407 751297 666000) 0 nil])
([nil nil ((15009 . 15010) (15003 . 15003) (15003 . 15009) (15000 . 15000) (15000 . 15003)) nil (26259 47407 751295 607000) 0 nil])
([nil nil ((15010 . 15011)) nil (26259 47407 751294 741000) 0 nil])
([nil nil ((15029 . 15032) (15025 . 15025) (15025 . 15029) (15024 . 15024) (15024 . 15025) (15013 . 15025) (15011 . 15011) (15011 . 15013)) nil (26259 47407 751293 981000) 0 nil])
([nil nil ((15032 . 15033)) nil (26259 47407 751292 886000) 0 nil])
([nil nil ((15033 . 15034)) nil (26259 47407 751292 343000) 0 nil])
([nil nil ((15036 . 15039) (15034 . 15034) (15034 . 15036)) nil (26259 47407 751291 888000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -15037) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -15038) (undo-tree-id38 . -1) 15039) nil (26259 47407 751290 891000) 0 nil])
([nil nil ((15038 . 15040) (15037 . 15037) (15037 . 15038)) nil (26259 47407 751288 337000) 0 nil])
([nil nil ((15040 . 15041)) nil (26259 47407 751287 512000) 0 nil])
([nil nil ((15043 . 15044) (15041 . 15041) (15041 . 15043)) nil (26259 47407 751286 874000) 0 nil])
([nil nil ((15044 . 15045)) nil (26259 47407 751286 278000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -15044) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 15045) nil (26259 47407 751285 618000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -15034) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("u" 0 1 (face font-lock-comment-face fontified defer)) . -15035) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -15036) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -15037) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -15038) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("m" 0 1 (face font-lock-comment-face fontified defer)) . -15039) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -15040) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("m" 0 1 (face font-lock-comment-face fontified defer)) . -15041) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -15042) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -15043) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 15044) nil (26259 47407 751282 246000) 0 nil])
([nil nil ((15035 . 15039) (15034 . 15034) (15034 . 15035)) nil (26259 47407 751262 178000) 0 nil])
([nil nil ((15039 . 15040)) nil (26259 47407 751261 299000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -15039) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 15040) nil (26259 47407 751260 560000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15100) (undo-tree-id1 . -1)) nil (26259 47407 751257 944000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15100) (undo-tree-id0 . -1)) nil (26259 47407 751253 684000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15682 . 15683) (nil fontified nil 15449 . 15683) (15449 . 15683) (t 26259 47407 775167 208000)) nil (26259 47770 916016 775000) 0 nil])
([nil nil ((#("(defun dired-duplicate-this-file ()
  \"Duplicate file on this line.\"
  (interactive)
  (let* ((this  (dired-get-filename t))
         (ctr   1)
         (new   (format \"%s[%d]\" this ctr)))
    (while (file-exists-p new)
      (setq ctr  (1+ ctr)
            new  (format \"%s[%d]\" this ctr)))
     (dired-copy-file this new nil))
  (revert-buffer))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 32 (face font-lock-function-name-face fontified t) 32 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 38 (fontified t) 38 68 (face font-lock-doc-face fontified t) 68 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 83 (face font-lock-keyword-face fontified t) 83 84 (face (rainbow-delimiters-depth-2-face) fontified t) 84 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-2-face) fontified t) 88 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-3-face) fontified t) 94 95 (face (rainbow-delimiters-depth-4-face) fontified t) 95 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-5-face) fontified t) 102 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-5-face) fontified t) 123 124 (face (rainbow-delimiters-depth-4-face) fontified t) 124 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-4-face) fontified t) 135 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-4-face) fontified t) 143 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-4-face) fontified t) 154 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-5-face) fontified t) 161 168 (fontified t) 168 176 (face font-lock-string-face fontified t) 176 185 (fontified t) 185 186 (face (rainbow-delimiters-depth-5-face) fontified t) 186 187 (face (rainbow-delimiters-depth-4-face) fontified t) 187 188 (face (rainbow-delimiters-depth-3-face) fontified t) 188 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-3-face) fontified t) 194 199 (face font-lock-keyword-face fontified t) 199 200 (fontified t) 200 201 (face (rainbow-delimiters-depth-4-face) fontified t) 201 218 (fontified t) 218 219 (face (rainbow-delimiters-depth-4-face) fontified t) 219 226 (fontified t) 226 227 (face (rainbow-delimiters-depth-4-face) fontified t) 227 231 (face font-lock-keyword-face fontified t) 231 237 (fontified t) 237 238 (face (rainbow-delimiters-depth-5-face) fontified t) 238 244 (fontified t) 244 245 (face (rainbow-delimiters-depth-5-face) fontified t) 245 263 (fontified t) 263 264 (face (rainbow-delimiters-depth-5-face) fontified t) 264 271 (fontified t) 271 279 (face font-lock-string-face fontified t) 279 288 (fontified t) 288 289 (face (rainbow-delimiters-depth-5-face) fontified t) 289 290 (face (rainbow-delimiters-depth-4-face) fontified t) 290 291 (face (rainbow-delimiters-depth-3-face) fontified t) 291 297 (fontified t) 297 298 (face (rainbow-delimiters-depth-3-face) fontified t) 298 326 (fontified t) 326 327 (face (rainbow-delimiters-depth-3-face) fontified t) 327 328 (face (rainbow-delimiters-depth-2-face) fontified t) 328 331 (fontified t) 331 332 (face (rainbow-delimiters-depth-2-face) fontified t) 332 345 (fontified t) 345 346 (face (rainbow-delimiters-depth-2-face) fontified t) 346 347 (face (rainbow-delimiters-depth-1-face) fontified t) 347 348 (fontified t)) . 15100) (undo-tree-id0 . -348) 15448) nil (26259 47770 916015 557000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15100)) nil (26259 47770 916000 1000) 0 nil])
([nil nil ((15447 . 15453) (t 26259 47770 937408 98000)) nil (26274 26704 802326 827000) 0 nil])
([nil nil ((15453 . 15454)) nil (26274 26704 802326 91000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -15453) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 15454) nil (26274 26704 802325 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15761 . 15762) (nil fontified nil 15448 . 15762) (15448 . 15762)) nil (26274 26704 802323 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15652 . 15653) (nil fontified nil 15597 . 15653) (nil fontified nil 15594 . 15597) (nil fontified nil 15509 . 15594) (nil fontified nil 15506 . 15509) (nil fontified nil 15449 . 15506) (nil fontified nil 15447 . 15449) (15447 . 15653)) nil (26274 26704 802322 614000) 0 nil])
([nil nil ((#("custom function to duplicate a file in dired, added to keybindings (see dired hydra)" 0 84 (face font-lock-comment-face fontified t)) . 15509) (undo-tree-id12 . -84) 15593) nil (26274 26704 802321 528000) 0 nil])
([nil nil ((15510 . 15515) (15509 . 15509) (15509 . 15510)) nil (26274 26704 802320 343000) 0 nil])
([nil nil ((15515 . 15516)) nil (26274 26704 802319 680000) 0 nil])
([nil nil ((15516 . 15517)) nil (26274 26704 802319 198000) 0 nil])
([nil nil ((15517 . 15524)) nil (26274 26704 802318 701000) 0 nil])
([nil nil ((15524 . 15525)) nil (26274 26704 802317 862000) 0 nil])
([nil nil ((15525 . 15527)) nil (26274 26704 802317 196000) 0 nil])
([nil nil ((15527 . 15528)) nil (26274 26704 802316 510000) 0 nil])
([nil nil ((15530 . 15536) (15528 . 15528) (15528 . 15530)) nil (26274 26704 802315 981000) 0 nil])
([nil nil ((15556 . 15557) (#(" " 0 1 (fontified nil)) . 15556) (15543 . 15556) (15543 . 15544) (15537 . 15543) (15536 . 15536) (15536 . 15537)) nil (26274 26704 802315 213000) 0 nil])
([nil nil ((15557 . 15557) (15557 . 15558)) nil (26274 26704 802313 997000) 0 nil])
([nil nil ((15558 . 15559)) nil (26274 26704 802313 408000) 0 nil])
([nil nil ((15562 . 15563) (15559 . 15559) (15559 . 15562)) nil (26274 26704 802312 799000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -15558) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -15559) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -15560) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -15561) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -15562) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 15563) nil (26274 26704 802311 308000) 0 nil])
([nil nil ((15560 . 15569) (15558 . 15558) (15558 . 15560)) nil (26274 26704 802303 232000) 0 nil])
([nil nil ((15569 . 15579)) nil (26274 26704 802302 479000) 0 nil])
([nil nil ((15579 . 15580)) nil (26274 26704 802302 10000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -15579) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 15580) nil (26274 26704 802300 991000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15639)) nil (26274 26704 802283 48000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -15845) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) 15846 (t 26274 26704 830971 140000)) nil (26274 26959 583032 817000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -15826) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("r" 0 1 (fontified defer)) . -15827) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("u" 0 1 (fontified defer)) . -15828) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("x" 0 1 (fontified defer)) . -15829) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("-" 0 1 (fontified defer)) . -15830) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("s" 0 1 (fontified defer)) . -15831) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (#("m" 0 1 (fontified defer)) . -15832) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("a" 0 1 (fontified defer)) . -15833) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (#("r" 0 1 (fontified defer)) . -15834) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("t" 0 1 (fontified defer)) . -15835) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (#("-" 0 1 (fontified defer)) . -15836) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("o" 0 1 (fontified defer)) . -15837) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("p" 0 1 (fontified defer)) . -15838) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("e" 0 1 (fontified defer)) . -15839) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (#("n" 0 1 (fontified defer)) . -15840) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("-" 0 1 (fontified defer)) . -15841) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (#("l" 0 1 (fontified defer)) . -15842) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (#("i" 0 1 (fontified defer)) . -15843) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (#("n" 0 1 (fontified t)) . -15844) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) 15845) nil (26274 26959 583114 428000) 0 nil])
([nil nil ((15827 . 15830) (15826 . 15826) (15826 . 15827)) nil (26274 26980 86085 407000) 0 nil] [nil nil ((15827 . 15835) (15826 . 15826) (15826 . 15827)) ((#("b" 0 1 (fontified nil)) . 15826) (#("oon-open" 0 8 (fontified t)) . 15827)) (26274 26959 581544 211000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -15826) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (#("p" 0 1 (fontified t)) . -15827) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#("e" 0 1 (fontified t)) . -15828) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (#("n" 0 1 (fontified t)) . -15829) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) 15830) nil (26274 26980 86084 41000) 0 nil])
nil
([nil nil ((15835 . 15856) (#(";" 0 1 (fontified defer)) . -15835) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) 15836 (15835 . 15836) (15827 . 15835) (15826 . 15826) (15826 . 15827)) nil (26274 26980 86074 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16266 . 16267) (nil fontified nil 16211 . 16267) (nil fontified nil 16208 . 16211) (nil fontified nil 16137 . 16208) (nil fontified nil 16134 . 16137) (nil fontified nil 16077 . 16134) (nil fontified nil 16075 . 16077) (nil fontified nil 15965 . 16075) (nil fontified nil 15963 . 15965) (15963 . 16267) (t 26274 26980 108994 861000)) nil (26378 49798 677225 144000) 0 nil])
([nil nil ((15963 . 15964)) nil (26378 49798 677223 878000) 0 nil])
([nil nil ((15964 . 15965)) nil (26378 49798 677223 340000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -15964) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 15965) nil (26378 49798 677222 278000) 0 nil])
([nil nil ((15639 . 15640)) nil (26378 49798 677220 397000) 0 nil])
([nil nil ((15640 . 15641)) nil (26378 49798 677219 904000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -15640) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 15641) nil (26378 49798 677219 278000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified defer)) . -16188) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("c" 0 1 (face font-lock-comment-face fontified defer)) . -16189) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16190) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("u" 0 1 (face font-lock-comment-face fontified defer)) . -16191) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("x" 0 1 (face font-lock-comment-face fontified defer)) . -16192) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("-" 0 1 (face font-lock-comment-face fontified defer)) . -16193) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -16194) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("m" 0 1 (face font-lock-comment-face fontified defer)) . -16195) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -16196) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16197) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -16198) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("-" 0 1 (face font-lock-comment-face fontified defer)) . -16199) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -16200) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("p" 0 1 (face font-lock-comment-face fontified defer)) . -16201) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -16202) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -16203) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("-" 0 1 (face font-lock-comment-face fontified defer)) . -16204) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("l" 0 1 (face font-lock-comment-face fontified defer)) . -16205) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -16206) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -16207) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -16208) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 16209) nil (26378 49798 677214 338000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified defer)) . -16167) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -16168) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -16169) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("-" 0 1 (face font-lock-comment-face fontified defer)) . -16170) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -16171) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("m" 0 1 (face font-lock-comment-face fontified defer)) . -16172) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -16173) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16174) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -16175) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -16176) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16177) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("-" 0 1 (face font-lock-comment-face fontified defer)) . -16178) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("f" 0 1 (face font-lock-comment-face fontified defer)) . -16179) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -16180) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16181) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("w" 0 1 (face font-lock-comment-face fontified defer)) . -16182) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -16183) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -16184) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("d" 0 1 (face font-lock-comment-face fontified defer)) . -16185) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -16186) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("&" 0 1 (face font-lock-comment-face fontified defer)) . -16187) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 16188) nil (26378 49798 677063 860000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -16158) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -16159) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -16160) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("b" 0 1 (face font-lock-comment-face fontified defer)) . -16161) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -16162) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -16163) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -16164) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -16165) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("b" 0 1 (face font-lock-comment-face fontified defer)) . -16166) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 16167) nil (26378 49798 677030 416000) 0 nil])
([nil nil ((16167 . 16168) (#(" " 0 1 (fontified nil)) . 16167) (16161 . 16167) (16161 . 16162) (16160 . 16161) (16158 . 16158) (16158 . 16160)) nil (26378 49798 677016 399000) 0 nil])
([nil nil ((16170 . 16175) (16168 . 16168) (16168 . 16170)) nil (26378 49798 677015 373000) 0 nil])
([nil nil ((16175 . 16176)) nil (26378 49798 677014 739000) 0 nil])
([nil nil ((16178 . 16183) (16176 . 16176) (16176 . 16178)) nil (26378 49798 677014 301000) 0 nil])
([nil nil ((16189 . 16191) (16185 . 16185) (16185 . 16189) (16183 . 16183) (16183 . 16185)) nil (26378 49798 677013 561000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -16189) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -16190) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 16191) nil (26378 49798 677012 499000) 0 nil])
([nil nil ((16189 . 16190)) nil (26378 49798 677009 286000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -16189) (undo-tree-id6 . -1) 16190) nil (26378 49798 677008 602000) 0 nil])
([nil nil ((#(" hor" 0 4 (face font-lock-comment-face fontified nil)) . 16212) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (16192 . 16212) 16196 (16193 . 16196) (16192 . 16193) (16190 . 16192) (16189 . 16189) (16189 . 16190)) nil (26378 49798 677007 140000) 0 nil])
([nil nil ((16212 . 16213)) nil (26378 49798 677004 678000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -16212) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 16213) nil (26378 49798 677004 11000) 0 nil])
([nil nil ((16271 . 16273)) nil (26378 49798 677001 938000) 0 nil])
([nil nil ((16273 . 16274)) nil (26378 49798 677001 499000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -16273) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 16274) nil (26378 49798 677000 246000) 0 nil])
([nil current ((nil rear-nonsticky nil 16533 . 16534) (nil fontified nil 16273 . 16534) (16273 . 16534)) nil (26378 49798 676980 538000) 0 nil])
nil
